{
    "numFailedTestSuites": 5,
    "numFailedTests": 32,
    "numPassedTestSuites": 4,
    "numPassedTests": 10,
    "numPendingTestSuites": 0,
    "numPendingTests": 0,
    "numRuntimeErrorTestSuites": 0,
    "numTodoTests": 0,
    "numTotalTestSuites": 9,
    "numTotalTests": 42,
    "openHandles": [],
    "snapshot": {
        "added": 0,
        "didUpdate": false,
        "failure": true,
        "filesAdded": 0,
        "filesRemoved": 0,
        "filesRemovedList": [],
        "filesUnmatched": 0,
        "filesUpdated": 0,
        "matched": 0,
        "total": 0,
        "unchecked": 20,
        "uncheckedKeysByFile": [
            {
                "filePath": "/home/flakie/package/test/basic.spec.js",
                "keys": [
                    "http - HTTP verbs DELETE: args 1",
                    "http - HTTP verbs DELETE: data 1",
                    "http - HTTP verbs GET: args 1",
                    "http - HTTP verbs GET: data 1",
                    "http - HTTP verbs PATCH: args 1",
                    "http - HTTP verbs PATCH: data 1",
                    "http - HTTP verbs POST body and header: args 1",
                    "http - HTTP verbs POST body and header: data 1",
                    "http - HTTP verbs PUT: args 1",
                    "http - HTTP verbs PUT: data 1",
                    "https - HTTP verbs DELETE: args 1",
                    "https - HTTP verbs DELETE: data 1",
                    "https - HTTP verbs GET: args 1",
                    "https - HTTP verbs GET: data 1",
                    "https - HTTP verbs PATCH: args 1",
                    "https - HTTP verbs PATCH: data 1",
                    "https - HTTP verbs POST body and header: args 1",
                    "https - HTTP verbs POST body and header: data 1",
                    "https - HTTP verbs PUT: args 1",
                    "https - HTTP verbs PUT: data 1"
                ]
            }
        ],
        "unmatched": 0,
        "updated": 0
    },
    "startTime": 1674634951079,
    "success": false,
    "testResults": [
        {
            "assertionResults": [
                {
                    "ancestorTitles": [
                        "utils"
                    ],
                    "failureMessages": [],
                    "fullName": "utils getFreePort",
                    "location": null,
                    "status": "passed",
                    "title": "getFreePort"
                }
            ],
            "endTime": 1674634966271,
            "message": "",
            "name": "/home/flakie/package/test/lib/util.spec.js",
            "startTime": 1674634957168,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [
                        "Test the curlify function"
                    ],
                    "failureMessages": [],
                    "fullName": "Test the curlify function request with headers",
                    "location": null,
                    "status": "passed",
                    "title": "request with headers"
                },
                {
                    "ancestorTitles": [
                        "Test the curlify function"
                    ],
                    "failureMessages": [],
                    "fullName": "Test the curlify function request with JSON body",
                    "location": null,
                    "status": "passed",
                    "title": "request with JSON body"
                },
                {
                    "ancestorTitles": [
                        "Test the curlify function"
                    ],
                    "failureMessages": [],
                    "fullName": "Test the curlify function accpet gzip encoding with compressed flag",
                    "location": null,
                    "status": "passed",
                    "title": "accpet gzip encoding with compressed flag"
                },
                {
                    "ancestorTitles": [
                        "Test the curlify function"
                    ],
                    "failureMessages": [],
                    "fullName": "Test the curlify function escape url character",
                    "location": null,
                    "status": "passed",
                    "title": "escape url character"
                }
            ],
            "endTime": 1674634967673,
            "message": "",
            "name": "/home/flakie/package/test/web/curlUtil.spec.js",
            "startTime": 1674634957770,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [
                        "httpsServerMgr"
                    ],
                    "failureMessages": [
                        "Error: Client network socket disconnected before secure TLS connection was established\n    at connResetException (internal/errors.js:639:14)\n    at TLSSocket.onConnectEnd (_tls_wrap.js:1570:19)\n    at TLSSocket.emit (events.js:412:35)\n    at endReadableNT (internal/streams/readable.js:1334:12)\n    at processTicksAndRejections (internal/process/task_queues.js:82:21)"
                    ],
                    "fullName": "httpsServerMgr SNI server should work properly",
                    "location": null,
                    "status": "failed",
                    "title": "SNI server should work properly"
                },
                {
                    "ancestorTitles": [
                        "httpsServerMgr"
                    ],
                    "failureMessages": [
                        "Error: Failed: \"ROOT_CA_NOT_EXISTS\"\n    at Env.it (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:91:24)\n    at it (/home/flakie/package/node_modules/jest-jasmine2/build/jasmine/jasmineLight.js:93:21)\n    at Suite.<anonymous> (/home/flakie/package/test/lib/httpsServerMgr.spec.js:47:3)\n    at addSpecsToSuite (/home/flakie/package/node_modules/jest-jasmine2/build/jasmine/Env.js:496:51)\n    at Env.describe (/home/flakie/package/node_modules/jest-jasmine2/build/jasmine/Env.js:466:11)\n    at describe (/home/flakie/package/node_modules/jest-jasmine2/build/jasmine/jasmineLight.js:81:18)\n    at Object.<anonymous> (/home/flakie/package/test/lib/httpsServerMgr.spec.js:4:1)\n    at Runtime._execModule (/home/flakie/package/node_modules/jest-runtime/build/index.js:867:68)\n    at Runtime._loadModule (/home/flakie/package/node_modules/jest-runtime/build/index.js:577:12)\n    at Runtime.requireModule (/home/flakie/package/node_modules/jest-runtime/build/index.js:433:10)"
                    ],
                    "fullName": "httpsServerMgr IP server should work properly",
                    "location": null,
                    "status": "failed",
                    "title": "IP server should work properly"
                }
            ],
            "endTime": 1674634978168,
            "message": "  \u25cf httpsServerMgr \u203a SNI server should work properly\n\n    Client network socket disconnected before secure TLS connection was established\n\n\n\n  \u25cf httpsServerMgr \u203a IP server should work properly\n\n    Failed: \"ROOT_CA_NOT_EXISTS\"\n\n      45 |   });\n      46 |\n    > 47 |   it('IP server should work properly', async () => {\n         |   ^\n      48 |     const ipServerHost = '1.2.3.4';\n      49 |     const anotherSNIServer = await serverMgrInstance.getSharedHttpsServer('c.anyproxy.io');\n      50 |     const ipServerA = await serverMgrInstance.getSharedHttpsServer(ipServerHost);\n\n      at Env.it (node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:91:24)\n      at Suite.<anonymous> (test/lib/httpsServerMgr.spec.js:47:3)\n      at Object.<anonymous> (test/lib/httpsServerMgr.spec.js:4:1)\n",
            "name": "/home/flakie/package/test/lib/httpsServerMgr.spec.js",
            "startTime": 1674634957181,
            "status": "failed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [
                        "WebInterface server"
                    ],
                    "failureMessages": [],
                    "fullName": "WebInterface server should response qrcode string in /getQrCode",
                    "location": null,
                    "status": "passed",
                    "title": "should response qrcode string in /getQrCode"
                }
            ],
            "endTime": 1674634986071,
            "message": "",
            "name": "/home/flakie/package/test/web/webInterface.spec.js",
            "startTime": 1674634957270,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [
                        "Rule replaceResponseData"
                    ],
                    "failureMessages": [
                        "Error: root CA not found. Please run `anyproxy-ca` to generate one first.\n    at new ProxyCore (/home/flakie/package/proxy.js:62:13)\n    at new ProxyServer (/home/flakie/package/proxy.js:304:5)\n    at /home/flakie/package/test/util.js:68:22\n    at new Promise (<anonymous>)\n    at proxyServerWithRule (/home/flakie/package/test/util.js:67:10)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Object.<anonymous> (/home/flakie/package/test/rule/onError.spec.js:30:19)",
                        "Error: assert(received)\n\nExpected value to be equal to:\n  true\nReceived:\n  undefined\n\nMessage:\n  proxyHost is required\n\nDifference:\n\n  Comparing two different types of values. Expected boolean but received undefined.\n    at basicProxyRequest (/home/flakie/package/test/util.js:8:3)\n    at Object.<anonymous> (/home/flakie/package/test/rule/onError.spec.js:41:26)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:43:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:73:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Env.fail (/home/flakie/package/node_modules/jest-jasmine2/build/jasmine/Env.js:778:61)\n    at Function.next.fail (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:38:22)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:118:18\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                    ],
                    "fullName": "Rule replaceResponseData should get error",
                    "location": null,
                    "status": "failed",
                    "title": "should get error"
                },
                {
                    "ancestorTitles": [
                        "Rule replaceResponseData"
                    ],
                    "failureMessages": [
                        "Error: root CA not found. Please run `anyproxy-ca` to generate one first.\n    at new ProxyCore (/home/flakie/package/proxy.js:62:13)\n    at new ProxyServer (/home/flakie/package/proxy.js:304:5)\n    at /home/flakie/package/test/util.js:68:22\n    at new Promise (<anonymous>)\n    at proxyServerWithRule (/home/flakie/package/test/util.js:67:10)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Object.<anonymous> (/home/flakie/package/test/rule/onError.spec.js:30:19)",
                        "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: 0\n    at Object.<anonymous> (/home/flakie/package/test/rule/onError.spec.js:58:54)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:43:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:73:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                    ],
                    "fullName": "Rule replaceResponseData should get connec error",
                    "location": null,
                    "status": "failed",
                    "title": "should get connec error"
                }
            ],
            "endTime": 1674634987377,
            "message": "  \u25cf Rule replaceResponseData \u203a should get error\n\n    root CA not found. Please run `anyproxy-ca` to generate one first.\n\n      60 |     } else if (config.forceProxyHttps && !certMgr.ifRootCAFileExists()) {\n      61 |       logUtil.printLog('You can run `anyproxy-ca` to generate one root CA and then re-run this command');\n    > 62 |       throw new Error('root CA not found. Please run `anyproxy-ca` to generate one first.');\n         |             ^\n      63 |     } else if (this.proxyType === T_TYPE_HTTPS && !config.hostname) {\n      64 |       throw new Error('hostname is required in https proxy');\n      65 |     } else if (!this.proxyPort) {\n\n      at new ProxyCore (proxy.js:62:13)\n      at new ProxyServer (proxy.js:304:5)\n      at test/util.js:68:22\n      at proxyServerWithRule (test/util.js:67:10)\n      at Object.<anonymous> (test/rule/onError.spec.js:30:19)\n\n  \u25cf Rule replaceResponseData \u203a should get error\n\n    assert(received)\n\n    Expected value to be equal to:\n      true\n    Received:\n      undefined\n\n    Message:\n      proxyHost is required\n\n    Difference:\n\n      Comparing two different types of values. Expected boolean but received undefined.\n\n       6 | function basicProxyRequest(proxyHost, method, url, headers, qs, payload) {\n       7 |   assert(method && url, 'method and url are required');\n    >  8 |   assert(proxyHost, 'proxyHost is required');\n         |   ^\n       9 |   headers = Object.assign({\n      10 |     'via-anyproxy': 'true',\n      11 |   }, headers || {});\n\n      at basicProxyRequest (test/util.js:8:3)\n      at Object.<anonymous> (test/rule/onError.spec.js:41:26)\n\n  \u25cf Rule replaceResponseData \u203a should get connec error\n\n    root CA not found. Please run `anyproxy-ca` to generate one first.\n\n      60 |     } else if (config.forceProxyHttps && !certMgr.ifRootCAFileExists()) {\n      61 |       logUtil.printLog('You can run `anyproxy-ca` to generate one root CA and then re-run this command');\n    > 62 |       throw new Error('root CA not found. Please run `anyproxy-ca` to generate one first.');\n         |             ^\n      63 |     } else if (this.proxyType === T_TYPE_HTTPS && !config.hostname) {\n      64 |       throw new Error('hostname is required in https proxy');\n      65 |     } else if (!this.proxyPort) {\n\n      at new ProxyCore (proxy.js:62:13)\n      at new ProxyServer (proxy.js:304:5)\n      at test/util.js:68:22\n      at proxyServerWithRule (test/util.js:67:10)\n      at Object.<anonymous> (test/rule/onError.spec.js:30:19)\n\n  \u25cf Rule replaceResponseData \u203a should get connec error\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 1\n    Received: 0\n\n      56 |     }\n      57 |     expect(e).not.toBeUndefined();\n    > 58 |     expect(jestMockConnectErrorFn.mock.calls.length).toBe(1);\n         |                                                      ^\n      59 |   });\n      60 | });\n      61 |\n\n      at Object.<anonymous> (test/rule/onError.spec.js:58:54)\n",
            "name": "/home/flakie/package/test/rule/onError.spec.js",
            "startTime": 1674634957871,
            "status": "failed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [
                        "Rule replaceRequestData"
                    ],
                    "failureMessages": [
                        "Error: root CA not found. Please run `anyproxy-ca` to generate one first.\n    at new ProxyCore (/home/flakie/package/proxy.js:62:13)\n    at new ProxyServer (/home/flakie/package/proxy.js:304:5)\n    at /home/flakie/package/test/util.js:68:22\n    at new Promise (<anonymous>)\n    at proxyServerWithRule (/home/flakie/package/test/util.js:67:10)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Object.<anonymous> (/home/flakie/package/test/rule/beforeSendRequest.spec.js:50:19)",
                        "Error: assert(received)\n\nExpected value to be equal to:\n  true\nReceived:\n  undefined\n\nMessage:\n  proxyHost is required\n\nDifference:\n\n  Comparing two different types of values. Expected boolean but received undefined.\n    at basicProxyRequest (/home/flakie/package/test/util.js:8:3)\n    at Object.<anonymous> (/home/flakie/package/test/rule/beforeSendRequest.spec.js:66:11)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:43:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:73:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Env.fail (/home/flakie/package/node_modules/jest-jasmine2/build/jasmine/Env.js:778:61)\n    at Function.next.fail (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:38:22)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:118:18\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                    ],
                    "fullName": "Rule replaceRequestData should replace the request data in proxy if the assertion is true",
                    "location": null,
                    "status": "failed",
                    "title": "should replace the request data in proxy if the assertion is true"
                },
                {
                    "ancestorTitles": [
                        "Rule replaceRequestData"
                    ],
                    "failureMessages": [
                        "Error: root CA not found. Please run `anyproxy-ca` to generate one first.\n    at new ProxyCore (/home/flakie/package/proxy.js:62:13)\n    at new ProxyServer (/home/flakie/package/proxy.js:304:5)\n    at /home/flakie/package/test/util.js:68:22\n    at new Promise (<anonymous>)\n    at proxyServerWithRule (/home/flakie/package/test/util.js:67:10)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Object.<anonymous> (/home/flakie/package/test/rule/beforeSendRequest.spec.js:50:19)",
                        "Error: assert(received)\n\nExpected value to be equal to:\n  true\nReceived:\n  undefined\n\nMessage:\n  proxyHost is required\n\nDifference:\n\n  Comparing two different types of values. Expected boolean but received undefined.\n    at basicProxyRequest (/home/flakie/package/test/util.js:8:3)\n    at Object.<anonymous> (/home/flakie/package/test/rule/beforeSendRequest.spec.js:77:11)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:43:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:73:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Env.fail (/home/flakie/package/node_modules/jest-jasmine2/build/jasmine/Env.js:778:61)\n    at Function.next.fail (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:38:22)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:118:18\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                    ],
                    "fullName": "Rule replaceRequestData should respond content specified in rule",
                    "location": null,
                    "status": "failed",
                    "title": "should respond content specified in rule"
                },
                {
                    "ancestorTitles": [
                        "Rule replaceRequestData"
                    ],
                    "failureMessages": [
                        "Error: root CA not found. Please run `anyproxy-ca` to generate one first.\n    at new ProxyCore (/home/flakie/package/proxy.js:62:13)\n    at new ProxyServer (/home/flakie/package/proxy.js:304:5)\n    at /home/flakie/package/test/util.js:68:22\n    at new Promise (<anonymous>)\n    at proxyServerWithRule (/home/flakie/package/test/util.js:67:10)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Object.<anonymous> (/home/flakie/package/test/rule/beforeSendRequest.spec.js:50:19)",
                        "Error: assert(received)\n\nExpected value to be equal to:\n  true\nReceived:\n  undefined\n\nMessage:\n  proxyHost is required\n\nDifference:\n\n  Comparing two different types of values. Expected boolean but received undefined.\n    at basicProxyRequest (/home/flakie/package/test/util.js:8:3)\n    at Object.<anonymous> (/home/flakie/package/test/rule/beforeSendRequest.spec.js:88:11)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:43:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:73:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Env.fail (/home/flakie/package/node_modules/jest-jasmine2/build/jasmine/Env.js:778:61)\n    at Function.next.fail (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:38:22)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:118:18\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                    ],
                    "fullName": "Rule replaceRequestData should replace protocol and url",
                    "location": null,
                    "status": "failed",
                    "title": "should replace protocol and url"
                }
            ],
            "endTime": 1674634987378,
            "message": "  \u25cf Rule replaceRequestData \u203a should replace the request data in proxy if the assertion is true\n\n    root CA not found. Please run `anyproxy-ca` to generate one first.\n\n      60 |     } else if (config.forceProxyHttps && !certMgr.ifRootCAFileExists()) {\n      61 |       logUtil.printLog('You can run `anyproxy-ca` to generate one root CA and then re-run this command');\n    > 62 |       throw new Error('root CA not found. Please run `anyproxy-ca` to generate one first.');\n         |             ^\n      63 |     } else if (this.proxyType === T_TYPE_HTTPS && !config.hostname) {\n      64 |       throw new Error('hostname is required in https proxy');\n      65 |     } else if (!this.proxyPort) {\n\n      at new ProxyCore (proxy.js:62:13)\n      at new ProxyServer (proxy.js:304:5)\n      at test/util.js:68:22\n      at proxyServerWithRule (test/util.js:67:10)\n      at Object.<anonymous> (test/rule/beforeSendRequest.spec.js:50:19)\n\n  \u25cf Rule replaceRequestData \u203a should replace the request data in proxy if the assertion is true\n\n    assert(received)\n\n    Expected value to be equal to:\n      true\n    Received:\n      undefined\n\n    Message:\n      proxyHost is required\n\n    Difference:\n\n      Comparing two different types of values. Expected boolean but received undefined.\n\n       6 | function basicProxyRequest(proxyHost, method, url, headers, qs, payload) {\n       7 |   assert(method && url, 'method and url are required');\n    >  8 |   assert(proxyHost, 'proxyHost is required');\n         |   ^\n       9 |   headers = Object.assign({\n      10 |     'via-anyproxy': 'true',\n      11 |   }, headers || {});\n\n      at basicProxyRequest (test/util.js:8:3)\n      at Object.<anonymous> (test/rule/beforeSendRequest.spec.js:66:11)\n\n  \u25cf Rule replaceRequestData \u203a should respond content specified in rule\n\n    root CA not found. Please run `anyproxy-ca` to generate one first.\n\n      60 |     } else if (config.forceProxyHttps && !certMgr.ifRootCAFileExists()) {\n      61 |       logUtil.printLog('You can run `anyproxy-ca` to generate one root CA and then re-run this command');\n    > 62 |       throw new Error('root CA not found. Please run `anyproxy-ca` to generate one first.');\n         |             ^\n      63 |     } else if (this.proxyType === T_TYPE_HTTPS && !config.hostname) {\n      64 |       throw new Error('hostname is required in https proxy');\n      65 |     } else if (!this.proxyPort) {\n\n      at new ProxyCore (proxy.js:62:13)\n      at new ProxyServer (proxy.js:304:5)\n      at test/util.js:68:22\n      at proxyServerWithRule (test/util.js:67:10)\n      at Object.<anonymous> (test/rule/beforeSendRequest.spec.js:50:19)\n\n  \u25cf Rule replaceRequestData \u203a should respond content specified in rule\n\n    assert(received)\n\n    Expected value to be equal to:\n      true\n    Received:\n      undefined\n\n    Message:\n      proxyHost is required\n\n    Difference:\n\n      Comparing two different types of values. Expected boolean but received undefined.\n\n       6 | function basicProxyRequest(proxyHost, method, url, headers, qs, payload) {\n       7 |   assert(method && url, 'method and url are required');\n    >  8 |   assert(proxyHost, 'proxyHost is required');\n         |   ^\n       9 |   headers = Object.assign({\n      10 |     'via-anyproxy': 'true',\n      11 |   }, headers || {});\n\n      at basicProxyRequest (test/util.js:8:3)\n      at Object.<anonymous> (test/rule/beforeSendRequest.spec.js:77:11)\n\n  \u25cf Rule replaceRequestData \u203a should replace protocol and url\n\n    root CA not found. Please run `anyproxy-ca` to generate one first.\n\n      60 |     } else if (config.forceProxyHttps && !certMgr.ifRootCAFileExists()) {\n      61 |       logUtil.printLog('You can run `anyproxy-ca` to generate one root CA and then re-run this command');\n    > 62 |       throw new Error('root CA not found. Please run `anyproxy-ca` to generate one first.');\n         |             ^\n      63 |     } else if (this.proxyType === T_TYPE_HTTPS && !config.hostname) {\n      64 |       throw new Error('hostname is required in https proxy');\n      65 |     } else if (!this.proxyPort) {\n\n      at new ProxyCore (proxy.js:62:13)\n      at new ProxyServer (proxy.js:304:5)\n      at test/util.js:68:22\n      at proxyServerWithRule (test/util.js:67:10)\n      at Object.<anonymous> (test/rule/beforeSendRequest.spec.js:50:19)\n\n  \u25cf Rule replaceRequestData \u203a should replace protocol and url\n\n    assert(received)\n\n    Expected value to be equal to:\n      true\n    Received:\n      undefined\n\n    Message:\n      proxyHost is required\n\n    Difference:\n\n      Comparing two different types of values. Expected boolean but received undefined.\n\n       6 | function basicProxyRequest(proxyHost, method, url, headers, qs, payload) {\n       7 |   assert(method && url, 'method and url are required');\n    >  8 |   assert(proxyHost, 'proxyHost is required');\n         |   ^\n       9 |   headers = Object.assign({\n      10 |     'via-anyproxy': 'true',\n      11 |   }, headers || {});\n\n      at basicProxyRequest (test/util.js:8:3)\n      at Object.<anonymous> (test/rule/beforeSendRequest.spec.js:88:11)\n",
            "name": "/home/flakie/package/test/rule/beforeSendRequest.spec.js",
            "startTime": 1674634958078,
            "status": "failed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [
                        "Rule beforeDealHttpsRequest"
                    ],
                    "failureMessages": [
                        "Error: root CA not found. Please run `anyproxy-ca` to generate one first.\n    at new ProxyCore (/home/flakie/package/proxy.js:62:13)\n    at new ProxyServer (/home/flakie/package/proxy.js:304:5)\n    at /home/flakie/package/test/util.js:68:22\n    at new Promise (<anonymous>)\n    at proxyServerWithRule (/home/flakie/package/test/util.js:67:10)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Object.<anonymous> (/home/flakie/package/test/rule/beforeDealHttpsRequest.spec.js:27:19)",
                        "Error: assert(received)\n\nExpected value to be equal to:\n  true\nReceived:\n  undefined\n\nMessage:\n  proxyHost is required\n\nDifference:\n\n  Comparing two different types of values. Expected boolean but received undefined.\n    at basicProxyRequest (/home/flakie/package/test/util.js:8:3)\n    at Object.<anonymous> (/home/flakie/package/test/rule/beforeDealHttpsRequest.spec.js:42:11)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:43:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:73:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Env.fail (/home/flakie/package/node_modules/jest-jasmine2/build/jasmine/Env.js:778:61)\n    at Function.next.fail (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:38:22)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:118:18\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                    ],
                    "fullName": "Rule beforeDealHttpsRequest Should replace the https request body",
                    "location": null,
                    "status": "failed",
                    "title": "Should replace the https request body"
                }
            ],
            "endTime": 1674634987477,
            "message": "  \u25cf Rule beforeDealHttpsRequest \u203a Should replace the https request body\n\n    root CA not found. Please run `anyproxy-ca` to generate one first.\n\n      60 |     } else if (config.forceProxyHttps && !certMgr.ifRootCAFileExists()) {\n      61 |       logUtil.printLog('You can run `anyproxy-ca` to generate one root CA and then re-run this command');\n    > 62 |       throw new Error('root CA not found. Please run `anyproxy-ca` to generate one first.');\n         |             ^\n      63 |     } else if (this.proxyType === T_TYPE_HTTPS && !config.hostname) {\n      64 |       throw new Error('hostname is required in https proxy');\n      65 |     } else if (!this.proxyPort) {\n\n      at new ProxyCore (proxy.js:62:13)\n      at new ProxyServer (proxy.js:304:5)\n      at test/util.js:68:22\n      at proxyServerWithRule (test/util.js:67:10)\n      at Object.<anonymous> (test/rule/beforeDealHttpsRequest.spec.js:27:19)\n\n  \u25cf Rule beforeDealHttpsRequest \u203a Should replace the https request body\n\n    assert(received)\n\n    Expected value to be equal to:\n      true\n    Received:\n      undefined\n\n    Message:\n      proxyHost is required\n\n    Difference:\n\n      Comparing two different types of values. Expected boolean but received undefined.\n\n       6 | function basicProxyRequest(proxyHost, method, url, headers, qs, payload) {\n       7 |   assert(method && url, 'method and url are required');\n    >  8 |   assert(proxyHost, 'proxyHost is required');\n         |   ^\n       9 |   headers = Object.assign({\n      10 |     'via-anyproxy': 'true',\n      11 |   }, headers || {});\n\n      at basicProxyRequest (test/util.js:8:3)\n      at Object.<anonymous> (test/rule/beforeDealHttpsRequest.spec.js:42:11)\n",
            "name": "/home/flakie/package/test/rule/beforeDealHttpsRequest.spec.js",
            "startTime": 1674634957579,
            "status": "failed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [
                        "ruleLoader"
                    ],
                    "failureMessages": [],
                    "fullName": "ruleLoader should successfully cache a remote file",
                    "location": null,
                    "status": "passed",
                    "title": "should successfully cache a remote file"
                },
                {
                    "ancestorTitles": [
                        "ruleLoader"
                    ],
                    "failureMessages": [],
                    "fullName": "ruleLoader should load a local module ../util/CommonUtil",
                    "location": null,
                    "status": "passed",
                    "title": "should load a local module ../util/CommonUtil"
                },
                {
                    "ancestorTitles": [
                        "ruleLoader"
                    ],
                    "failureMessages": [],
                    "fullName": "ruleLoader should smart load a remote module",
                    "location": null,
                    "status": "passed",
                    "title": "should smart load a remote module"
                },
                {
                    "ancestorTitles": [
                        "ruleLoader"
                    ],
                    "failureMessages": [],
                    "fullName": "ruleLoader should smart load a local module",
                    "location": null,
                    "status": "passed",
                    "title": "should smart load a local module"
                }
            ],
            "endTime": 1674634990066,
            "message": "",
            "name": "/home/flakie/package/test/lib/ruleLoader.spec.js",
            "startTime": 1674634959269,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [
                        "http - HTTP verbs"
                    ],
                    "failureMessages": [
                        "Error: root CA not found. Please run `anyproxy-ca` to generate one first.\n    at new ProxyCore (/home/flakie/package/proxy.js:62:13)\n    at new ProxyServer (/home/flakie/package/proxy.js:304:5)\n    at /home/flakie/package/test/util.js:68:22\n    at new Promise (<anonymous>)\n    at proxyServerWithRule (/home/flakie/package/test/util.js:67:10)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:18:17)",
                        "Error: assert(received)\n\nExpected value to be equal to:\n  true\nReceived:\n  undefined\n\nMessage:\n  proxyHost is required\n\nDifference:\n\n  Comparing two different types of values. Expected boolean but received undefined.\n    at basicProxyRequest (/home/flakie/package/test/util.js:8:3)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:72:13)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:43:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:73:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Env.fail (/home/flakie/package/node_modules/jest-jasmine2/build/jasmine/Env.js:778:61)\n    at Function.next.fail (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:38:22)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:118:18\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                    ],
                    "fullName": "http - HTTP verbs GET",
                    "location": null,
                    "status": "failed",
                    "title": "GET"
                },
                {
                    "ancestorTitles": [
                        "http - HTTP verbs"
                    ],
                    "failureMessages": [
                        "Error: root CA not found. Please run `anyproxy-ca` to generate one first.\n    at new ProxyCore (/home/flakie/package/proxy.js:62:13)\n    at new ProxyServer (/home/flakie/package/proxy.js:304:5)\n    at /home/flakie/package/test/util.js:68:22\n    at new Promise (<anonymous>)\n    at proxyServerWithRule (/home/flakie/package/test/util.js:67:10)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:18:17)",
                        "Error: assert(received)\n\nExpected value to be equal to:\n  true\nReceived:\n  undefined\n\nMessage:\n  proxyHost is required\n\nDifference:\n\n  Comparing two different types of values. Expected boolean but received undefined.\n    at basicProxyRequest (/home/flakie/package/test/util.js:8:3)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:83:26)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:43:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:73:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Env.fail (/home/flakie/package/node_modules/jest-jasmine2/build/jasmine/Env.js:778:61)\n    at Function.next.fail (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:38:22)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:118:18\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                    ],
                    "fullName": "http - HTTP verbs POST body and header",
                    "location": null,
                    "status": "failed",
                    "title": "POST body and header"
                },
                {
                    "ancestorTitles": [
                        "http - HTTP verbs"
                    ],
                    "failureMessages": [
                        "Error: root CA not found. Please run `anyproxy-ca` to generate one first.\n    at new ProxyCore (/home/flakie/package/proxy.js:62:13)\n    at new ProxyServer (/home/flakie/package/proxy.js:304:5)\n    at /home/flakie/package/test/util.js:68:22\n    at new Promise (<anonymous>)\n    at proxyServerWithRule (/home/flakie/package/test/util.js:67:10)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:18:17)",
                        "Error: assert(received)\n\nExpected value to be equal to:\n  true\nReceived:\n  undefined\n\nMessage:\n  proxyHost is required\n\nDifference:\n\n  Comparing two different types of values. Expected boolean but received undefined.\n    at basicProxyRequest (/home/flakie/package/test/util.js:8:3)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:90:13)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:43:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:73:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Env.fail (/home/flakie/package/node_modules/jest-jasmine2/build/jasmine/Env.js:778:61)\n    at Function.next.fail (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:38:22)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:118:18\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                    ],
                    "fullName": "http - HTTP verbs PUT",
                    "location": null,
                    "status": "failed",
                    "title": "PUT"
                },
                {
                    "ancestorTitles": [
                        "http - HTTP verbs"
                    ],
                    "failureMessages": [
                        "Error: root CA not found. Please run `anyproxy-ca` to generate one first.\n    at new ProxyCore (/home/flakie/package/proxy.js:62:13)\n    at new ProxyServer (/home/flakie/package/proxy.js:304:5)\n    at /home/flakie/package/test/util.js:68:22\n    at new Promise (<anonymous>)\n    at proxyServerWithRule (/home/flakie/package/test/util.js:67:10)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:18:17)",
                        "Error: assert(received)\n\nExpected value to be equal to:\n  true\nReceived:\n  undefined\n\nMessage:\n  proxyHost is required\n\nDifference:\n\n  Comparing two different types of values. Expected boolean but received undefined.\n    at basicProxyRequest (/home/flakie/package/test/util.js:8:3)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:98:13)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:43:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:73:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Env.fail (/home/flakie/package/node_modules/jest-jasmine2/build/jasmine/Env.js:778:61)\n    at Function.next.fail (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:38:22)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:118:18\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                    ],
                    "fullName": "http - HTTP verbs DELETE",
                    "location": null,
                    "status": "failed",
                    "title": "DELETE"
                },
                {
                    "ancestorTitles": [
                        "http - HTTP verbs"
                    ],
                    "failureMessages": [
                        "Error: root CA not found. Please run `anyproxy-ca` to generate one first.\n    at new ProxyCore (/home/flakie/package/proxy.js:62:13)\n    at new ProxyServer (/home/flakie/package/proxy.js:304:5)\n    at /home/flakie/package/test/util.js:68:22\n    at new Promise (<anonymous>)\n    at proxyServerWithRule (/home/flakie/package/test/util.js:67:10)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:18:17)",
                        "Error: assert(received)\n\nExpected value to be equal to:\n  true\nReceived:\n  undefined\n\nMessage:\n  proxyHost is required\n\nDifference:\n\n  Comparing two different types of values. Expected boolean but received undefined.\n    at basicProxyRequest (/home/flakie/package/test/util.js:8:3)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:103:13)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:43:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:73:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Env.fail (/home/flakie/package/node_modules/jest-jasmine2/build/jasmine/Env.js:778:61)\n    at Function.next.fail (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:38:22)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:118:18\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                    ],
                    "fullName": "http - HTTP verbs PATCH",
                    "location": null,
                    "status": "failed",
                    "title": "PATCH"
                },
                {
                    "ancestorTitles": [
                        "http - HTTP verbs"
                    ],
                    "failureMessages": [
                        "Error: root CA not found. Please run `anyproxy-ca` to generate one first.\n    at new ProxyCore (/home/flakie/package/proxy.js:62:13)\n    at new ProxyServer (/home/flakie/package/proxy.js:304:5)\n    at /home/flakie/package/test/util.js:68:22\n    at new Promise (<anonymous>)\n    at proxyServerWithRule (/home/flakie/package/test/util.js:67:10)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:18:17)",
                        "Error: Unhandled error. (Error: tunneling socket could not be established, cause=connect ECONNREFUSED 127.0.0.1:80\n    at ClientRequest.onError (/home/flakie/package/node_modules/tunnel/lib/tunnel.js:180:17)\n    at Object.onceWrapper (events.js:520:26)\n    at ClientRequest.emit (events.js:400:28)\n    at Socket.socketErrorListener (_http_client.js:475:9)\n    at Socket.emit (events.js:400:28)\n    at emitErrorNT (internal/streams/destroy.js:106:8)\n    at emitErrorCloseNT (internal/streams/destroy.js:74:3)\n    at processTicksAndRejections (internal/process/task_queues.js:82:21) {\n  code: 'ECONNRESET'\n})Error [ERR_UNHANDLED_ERROR]: Unhandled error. (Error: tunneling socket could not be established, cause=connect ECONNREFUSED 127.0.0.1:80\n    at ClientRequest.onError (/home/flakie/package/node_modules/tunnel/lib/tunnel.js:180:17)\n    at Object.onceWrapper (events.js:520:26)\n    at ClientRequest.emit (events.js:400:28)\n    at Socket.socketErrorListener (_http_client.js:475:9)\n    at Socket.emit (events.js:400:28)\n    at emitErrorNT (internal/streams/destroy.js:106:8)\n    at emitErrorCloseNT (internal/streams/destroy.js:74:3)\n    at processTicksAndRejections (internal/process/task_queues.js:82:21) {\n  code: 'ECONNRESET'\n})\n    at new NodeError (internal/errors.js:322:7)\n    at WebSocket.emit (events.js:389:17)\n    at ClientRequest.<anonymous> (/home/flakie/package/node_modules/ws/lib/websocket.js:535:10)\n    at ClientRequest.emit (events.js:400:28)\n    at ClientRequest.onError (/home/flakie/package/node_modules/tunnel/lib/tunnel.js:183:21)\n    at Object.onceWrapper (events.js:520:26)\n    at ClientRequest.emit (events.js:400:28)\n    at Socket.socketErrorListener (_http_client.js:475:9)\n    at Socket.emit (events.js:400:28)\n    at emitErrorNT (internal/streams/destroy.js:106:8)"
                    ],
                    "fullName": "http - HTTP verbs Websocket",
                    "location": null,
                    "status": "failed",
                    "title": "Websocket"
                },
                {
                    "ancestorTitles": [
                        "https - HTTP verbs"
                    ],
                    "failureMessages": [
                        "Error: root CA not found. Please run `anyproxy-ca` to generate one first.\n    at new ProxyCore (/home/flakie/package/proxy.js:62:13)\n    at new ProxyServer (/home/flakie/package/proxy.js:304:5)\n    at /home/flakie/package/test/util.js:68:22\n    at new Promise (<anonymous>)\n    at proxyServerWithRule (/home/flakie/package/test/util.js:67:10)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:18:17)",
                        "Error: assert(received)\n\nExpected value to be equal to:\n  true\nReceived:\n  undefined\n\nMessage:\n  proxyHost is required\n\nDifference:\n\n  Comparing two different types of values. Expected boolean but received undefined.\n    at basicProxyRequest (/home/flakie/package/test/util.js:8:3)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:72:13)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:43:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:73:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Env.fail (/home/flakie/package/node_modules/jest-jasmine2/build/jasmine/Env.js:778:61)\n    at Function.next.fail (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:38:22)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:118:18\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                    ],
                    "fullName": "https - HTTP verbs GET",
                    "location": null,
                    "status": "failed",
                    "title": "GET"
                },
                {
                    "ancestorTitles": [
                        "https - HTTP verbs"
                    ],
                    "failureMessages": [
                        "Error: root CA not found. Please run `anyproxy-ca` to generate one first.\n    at new ProxyCore (/home/flakie/package/proxy.js:62:13)\n    at new ProxyServer (/home/flakie/package/proxy.js:304:5)\n    at /home/flakie/package/test/util.js:68:22\n    at new Promise (<anonymous>)\n    at proxyServerWithRule (/home/flakie/package/test/util.js:67:10)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:18:17)",
                        "Error: assert(received)\n\nExpected value to be equal to:\n  true\nReceived:\n  undefined\n\nMessage:\n  proxyHost is required\n\nDifference:\n\n  Comparing two different types of values. Expected boolean but received undefined.\n    at basicProxyRequest (/home/flakie/package/test/util.js:8:3)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:83:26)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:43:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:73:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Env.fail (/home/flakie/package/node_modules/jest-jasmine2/build/jasmine/Env.js:778:61)\n    at Function.next.fail (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:38:22)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:118:18\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                    ],
                    "fullName": "https - HTTP verbs POST body and header",
                    "location": null,
                    "status": "failed",
                    "title": "POST body and header"
                },
                {
                    "ancestorTitles": [
                        "https - HTTP verbs"
                    ],
                    "failureMessages": [
                        "Error: root CA not found. Please run `anyproxy-ca` to generate one first.\n    at new ProxyCore (/home/flakie/package/proxy.js:62:13)\n    at new ProxyServer (/home/flakie/package/proxy.js:304:5)\n    at /home/flakie/package/test/util.js:68:22\n    at new Promise (<anonymous>)\n    at proxyServerWithRule (/home/flakie/package/test/util.js:67:10)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:18:17)",
                        "Error: assert(received)\n\nExpected value to be equal to:\n  true\nReceived:\n  undefined\n\nMessage:\n  proxyHost is required\n\nDifference:\n\n  Comparing two different types of values. Expected boolean but received undefined.\n    at basicProxyRequest (/home/flakie/package/test/util.js:8:3)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:90:13)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:43:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:73:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Env.fail (/home/flakie/package/node_modules/jest-jasmine2/build/jasmine/Env.js:778:61)\n    at Function.next.fail (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:38:22)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:118:18\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                    ],
                    "fullName": "https - HTTP verbs PUT",
                    "location": null,
                    "status": "failed",
                    "title": "PUT"
                },
                {
                    "ancestorTitles": [
                        "https - HTTP verbs"
                    ],
                    "failureMessages": [
                        "Error: root CA not found. Please run `anyproxy-ca` to generate one first.\n    at new ProxyCore (/home/flakie/package/proxy.js:62:13)\n    at new ProxyServer (/home/flakie/package/proxy.js:304:5)\n    at /home/flakie/package/test/util.js:68:22\n    at new Promise (<anonymous>)\n    at proxyServerWithRule (/home/flakie/package/test/util.js:67:10)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:18:17)",
                        "Error: assert(received)\n\nExpected value to be equal to:\n  true\nReceived:\n  undefined\n\nMessage:\n  proxyHost is required\n\nDifference:\n\n  Comparing two different types of values. Expected boolean but received undefined.\n    at basicProxyRequest (/home/flakie/package/test/util.js:8:3)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:98:13)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:43:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:73:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Env.fail (/home/flakie/package/node_modules/jest-jasmine2/build/jasmine/Env.js:778:61)\n    at Function.next.fail (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:38:22)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:118:18\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                    ],
                    "fullName": "https - HTTP verbs DELETE",
                    "location": null,
                    "status": "failed",
                    "title": "DELETE"
                },
                {
                    "ancestorTitles": [
                        "https - HTTP verbs"
                    ],
                    "failureMessages": [
                        "Error: root CA not found. Please run `anyproxy-ca` to generate one first.\n    at new ProxyCore (/home/flakie/package/proxy.js:62:13)\n    at new ProxyServer (/home/flakie/package/proxy.js:304:5)\n    at /home/flakie/package/test/util.js:68:22\n    at new Promise (<anonymous>)\n    at proxyServerWithRule (/home/flakie/package/test/util.js:67:10)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:18:17)",
                        "Error: assert(received)\n\nExpected value to be equal to:\n  true\nReceived:\n  undefined\n\nMessage:\n  proxyHost is required\n\nDifference:\n\n  Comparing two different types of values. Expected boolean but received undefined.\n    at basicProxyRequest (/home/flakie/package/test/util.js:8:3)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:103:13)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:43:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:73:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Env.fail (/home/flakie/package/node_modules/jest-jasmine2/build/jasmine/Env.js:778:61)\n    at Function.next.fail (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:38:22)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:118:18\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                    ],
                    "fullName": "https - HTTP verbs PATCH",
                    "location": null,
                    "status": "failed",
                    "title": "PATCH"
                },
                {
                    "ancestorTitles": [
                        "https - HTTP verbs"
                    ],
                    "failureMessages": [
                        "Error: root CA not found. Please run `anyproxy-ca` to generate one first.\n    at new ProxyCore (/home/flakie/package/proxy.js:62:13)\n    at new ProxyServer (/home/flakie/package/proxy.js:304:5)\n    at /home/flakie/package/test/util.js:68:22\n    at new Promise (<anonymous>)\n    at proxyServerWithRule (/home/flakie/package/test/util.js:67:10)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:18:17)",
                        "Error: Unhandled error. (Error: tunneling socket could not be established, cause=connect ECONNREFUSED 127.0.0.1:80\n    at ClientRequest.onError (/home/flakie/package/node_modules/tunnel/lib/tunnel.js:180:17)\n    at Object.onceWrapper (events.js:520:26)\n    at ClientRequest.emit (events.js:400:28)\n    at Socket.socketErrorListener (_http_client.js:475:9)\n    at Socket.emit (events.js:400:28)\n    at emitErrorNT (internal/streams/destroy.js:106:8)\n    at emitErrorCloseNT (internal/streams/destroy.js:74:3)\n    at processTicksAndRejections (internal/process/task_queues.js:82:21) {\n  code: 'ECONNRESET'\n})Error [ERR_UNHANDLED_ERROR]: Unhandled error. (Error: tunneling socket could not be established, cause=connect ECONNREFUSED 127.0.0.1:80\n    at ClientRequest.onError (/home/flakie/package/node_modules/tunnel/lib/tunnel.js:180:17)\n    at Object.onceWrapper (events.js:520:26)\n    at ClientRequest.emit (events.js:400:28)\n    at Socket.socketErrorListener (_http_client.js:475:9)\n    at Socket.emit (events.js:400:28)\n    at emitErrorNT (internal/streams/destroy.js:106:8)\n    at emitErrorCloseNT (internal/streams/destroy.js:74:3)\n    at processTicksAndRejections (internal/process/task_queues.js:82:21) {\n  code: 'ECONNRESET'\n})\n    at new NodeError (internal/errors.js:322:7)\n    at WebSocket.emit (events.js:389:17)\n    at ClientRequest.<anonymous> (/home/flakie/package/node_modules/ws/lib/websocket.js:535:10)\n    at ClientRequest.emit (events.js:400:28)\n    at ClientRequest.onError (/home/flakie/package/node_modules/tunnel/lib/tunnel.js:183:21)\n    at Object.onceWrapper (events.js:520:26)\n    at ClientRequest.emit (events.js:400:28)\n    at Socket.socketErrorListener (_http_client.js:475:9)\n    at Socket.emit (events.js:400:28)\n    at emitErrorNT (internal/streams/destroy.js:106:8)"
                    ],
                    "fullName": "https - HTTP verbs Websocket",
                    "location": null,
                    "status": "failed",
                    "title": "Websocket"
                },
                {
                    "ancestorTitles": [
                        "status code and headers"
                    ],
                    "failureMessages": [
                        "Error: root CA not found. Please run `anyproxy-ca` to generate one first.\n    at new ProxyCore (/home/flakie/package/proxy.js:62:13)\n    at new ProxyServer (/home/flakie/package/proxy.js:304:5)\n    at /home/flakie/package/test/util.js:68:22\n    at new Promise (<anonymous>)\n    at proxyServerWithRule (/home/flakie/package/test/util.js:67:10)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:18:17)",
                        "Error: assert(received)\n\nExpected value to be equal to:\n  true\nReceived:\n  undefined\n\nMessage:\n  proxyHost is required\n\nDifference:\n\n  Comparing two different types of values. Expected boolean but received undefined.\n    at basicProxyRequest (/home/flakie/package/test/util.js:8:3)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:135:28)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:43:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:73:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Env.fail (/home/flakie/package/node_modules/jest-jasmine2/build/jasmine/Env.js:778:61)\n    at Function.next.fail (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:38:22)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:118:18\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                    ],
                    "fullName": "status code and headers GET 302",
                    "location": null,
                    "status": "failed",
                    "title": "GET 302"
                },
                {
                    "ancestorTitles": [
                        "status code and headers"
                    ],
                    "failureMessages": [
                        "Error: root CA not found. Please run `anyproxy-ca` to generate one first.\n    at new ProxyCore (/home/flakie/package/proxy.js:62:13)\n    at new ProxyServer (/home/flakie/package/proxy.js:304:5)\n    at /home/flakie/package/test/util.js:68:22\n    at new Promise (<anonymous>)\n    at proxyServerWithRule (/home/flakie/package/test/util.js:67:10)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:18:17)",
                        "Error: assert(received)\n\nExpected value to be equal to:\n  true\nReceived:\n  undefined\n\nMessage:\n  proxyHost is required\n\nDifference:\n\n  Comparing two different types of values. Expected boolean but received undefined.\n    at basicProxyRequest (/home/flakie/package/test/util.js:8:3)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:143:28)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:43:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:73:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Env.fail (/home/flakie/package/node_modules/jest-jasmine2/build/jasmine/Env.js:778:61)\n    at Function.next.fail (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:38:22)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:118:18\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                    ],
                    "fullName": "status code and headers PUT 302",
                    "location": null,
                    "status": "failed",
                    "title": "PUT 302"
                },
                {
                    "ancestorTitles": [
                        "status code and headers"
                    ],
                    "failureMessages": [
                        "Error: root CA not found. Please run `anyproxy-ca` to generate one first.\n    at new ProxyCore (/home/flakie/package/proxy.js:62:13)\n    at new ProxyServer (/home/flakie/package/proxy.js:304:5)\n    at /home/flakie/package/test/util.js:68:22\n    at new Promise (<anonymous>)\n    at proxyServerWithRule (/home/flakie/package/test/util.js:67:10)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:18:17)",
                        "Error: assert(received)\n\nExpected value to be equal to:\n  true\nReceived:\n  undefined\n\nMessage:\n  proxyHost is required\n\nDifference:\n\n  Comparing two different types of values. Expected boolean but received undefined.\n    at basicProxyRequest (/home/flakie/package/test/util.js:8:3)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:135:28)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:43:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:73:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Env.fail (/home/flakie/package/node_modules/jest-jasmine2/build/jasmine/Env.js:778:61)\n    at Function.next.fail (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:38:22)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:118:18\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                    ],
                    "fullName": "status code and headers GET 404",
                    "location": null,
                    "status": "failed",
                    "title": "GET 404"
                },
                {
                    "ancestorTitles": [
                        "status code and headers"
                    ],
                    "failureMessages": [
                        "Error: root CA not found. Please run `anyproxy-ca` to generate one first.\n    at new ProxyCore (/home/flakie/package/proxy.js:62:13)\n    at new ProxyServer (/home/flakie/package/proxy.js:304:5)\n    at /home/flakie/package/test/util.js:68:22\n    at new Promise (<anonymous>)\n    at proxyServerWithRule (/home/flakie/package/test/util.js:67:10)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:18:17)",
                        "Error: assert(received)\n\nExpected value to be equal to:\n  true\nReceived:\n  undefined\n\nMessage:\n  proxyHost is required\n\nDifference:\n\n  Comparing two different types of values. Expected boolean but received undefined.\n    at basicProxyRequest (/home/flakie/package/test/util.js:8:3)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:143:28)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:43:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:73:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Env.fail (/home/flakie/package/node_modules/jest-jasmine2/build/jasmine/Env.js:778:61)\n    at Function.next.fail (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:38:22)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:118:18\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                    ],
                    "fullName": "status code and headers PUT 404",
                    "location": null,
                    "status": "failed",
                    "title": "PUT 404"
                },
                {
                    "ancestorTitles": [
                        "status code and headers"
                    ],
                    "failureMessages": [
                        "Error: root CA not found. Please run `anyproxy-ca` to generate one first.\n    at new ProxyCore (/home/flakie/package/proxy.js:62:13)\n    at new ProxyServer (/home/flakie/package/proxy.js:304:5)\n    at /home/flakie/package/test/util.js:68:22\n    at new Promise (<anonymous>)\n    at proxyServerWithRule (/home/flakie/package/test/util.js:67:10)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:18:17)",
                        "Error: assert(received)\n\nExpected value to be equal to:\n  true\nReceived:\n  undefined\n\nMessage:\n  proxyHost is required\n\nDifference:\n\n  Comparing two different types of values. Expected boolean but received undefined.\n    at basicProxyRequest (/home/flakie/package/test/util.js:8:3)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:135:28)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:43:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:73:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Env.fail (/home/flakie/package/node_modules/jest-jasmine2/build/jasmine/Env.js:778:61)\n    at Function.next.fail (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:38:22)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:118:18\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                    ],
                    "fullName": "status code and headers GET 500",
                    "location": null,
                    "status": "failed",
                    "title": "GET 500"
                },
                {
                    "ancestorTitles": [
                        "status code and headers"
                    ],
                    "failureMessages": [
                        "Error: root CA not found. Please run `anyproxy-ca` to generate one first.\n    at new ProxyCore (/home/flakie/package/proxy.js:62:13)\n    at new ProxyServer (/home/flakie/package/proxy.js:304:5)\n    at /home/flakie/package/test/util.js:68:22\n    at new Promise (<anonymous>)\n    at proxyServerWithRule (/home/flakie/package/test/util.js:67:10)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:18:17)",
                        "Error: assert(received)\n\nExpected value to be equal to:\n  true\nReceived:\n  undefined\n\nMessage:\n  proxyHost is required\n\nDifference:\n\n  Comparing two different types of values. Expected boolean but received undefined.\n    at basicProxyRequest (/home/flakie/package/test/util.js:8:3)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:143:28)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:43:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:73:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Env.fail (/home/flakie/package/node_modules/jest-jasmine2/build/jasmine/Env.js:778:61)\n    at Function.next.fail (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:38:22)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:118:18\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                    ],
                    "fullName": "status code and headers PUT 500",
                    "location": null,
                    "status": "failed",
                    "title": "PUT 500"
                },
                {
                    "ancestorTitles": [
                        "response data formats"
                    ],
                    "failureMessages": [
                        "Error: root CA not found. Please run `anyproxy-ca` to generate one first.\n    at new ProxyCore (/home/flakie/package/proxy.js:62:13)\n    at new ProxyServer (/home/flakie/package/proxy.js:304:5)\n    at /home/flakie/package/test/util.js:68:22\n    at new Promise (<anonymous>)\n    at proxyServerWithRule (/home/flakie/package/test/util.js:67:10)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:18:17)",
                        "Error: assert(received)\n\nExpected value to be equal to:\n  true\nReceived:\n  undefined\n\nMessage:\n  proxyHost is required\n\nDifference:\n\n  Comparing two different types of values. Expected boolean but received undefined.\n    at basicProxyRequest (/home/flakie/package/test/util.js:8:3)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:154:28)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:43:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:73:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Env.fail (/home/flakie/package/node_modules/jest-jasmine2/build/jasmine/Env.js:778:61)\n    at Function.next.fail (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:38:22)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:118:18\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                    ],
                    "fullName": "response data formats GET brotli",
                    "location": null,
                    "status": "failed",
                    "title": "GET brotli"
                },
                {
                    "ancestorTitles": [
                        "response data formats"
                    ],
                    "failureMessages": [
                        "Error: root CA not found. Please run `anyproxy-ca` to generate one first.\n    at new ProxyCore (/home/flakie/package/proxy.js:62:13)\n    at new ProxyServer (/home/flakie/package/proxy.js:304:5)\n    at /home/flakie/package/test/util.js:68:22\n    at new Promise (<anonymous>)\n    at proxyServerWithRule (/home/flakie/package/test/util.js:67:10)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:18:17)",
                        "Error: assert(received)\n\nExpected value to be equal to:\n  true\nReceived:\n  undefined\n\nMessage:\n  proxyHost is required\n\nDifference:\n\n  Comparing two different types of values. Expected boolean but received undefined.\n    at basicProxyRequest (/home/flakie/package/test/util.js:8:3)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:154:28)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:43:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:73:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Env.fail (/home/flakie/package/node_modules/jest-jasmine2/build/jasmine/Env.js:778:61)\n    at Function.next.fail (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:38:22)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:118:18\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                    ],
                    "fullName": "response data formats GET deflate",
                    "location": null,
                    "status": "failed",
                    "title": "GET deflate"
                },
                {
                    "ancestorTitles": [
                        "response data formats"
                    ],
                    "failureMessages": [
                        "Error: root CA not found. Please run `anyproxy-ca` to generate one first.\n    at new ProxyCore (/home/flakie/package/proxy.js:62:13)\n    at new ProxyServer (/home/flakie/package/proxy.js:304:5)\n    at /home/flakie/package/test/util.js:68:22\n    at new Promise (<anonymous>)\n    at proxyServerWithRule (/home/flakie/package/test/util.js:67:10)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:18:17)",
                        "Error: assert(received)\n\nExpected value to be equal to:\n  true\nReceived:\n  undefined\n\nMessage:\n  proxyHost is required\n\nDifference:\n\n  Comparing two different types of values. Expected boolean but received undefined.\n    at basicProxyRequest (/home/flakie/package/test/util.js:8:3)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:154:28)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:43:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:73:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Env.fail (/home/flakie/package/node_modules/jest-jasmine2/build/jasmine/Env.js:778:61)\n    at Function.next.fail (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:38:22)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:118:18\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                    ],
                    "fullName": "response data formats GET gzip",
                    "location": null,
                    "status": "failed",
                    "title": "GET gzip"
                },
                {
                    "ancestorTitles": [
                        "big files"
                    ],
                    "failureMessages": [
                        "Error: root CA not found. Please run `anyproxy-ca` to generate one first.\n    at new ProxyCore (/home/flakie/package/proxy.js:62:13)\n    at new ProxyServer (/home/flakie/package/proxy.js:304:5)\n    at /home/flakie/package/test/util.js:68:22\n    at new Promise (<anonymous>)\n    at proxyServerWithRule (/home/flakie/package/test/util.js:67:10)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:18:17)"
                    ],
                    "fullName": "big files download big file",
                    "location": null,
                    "status": "failed",
                    "title": "download big file"
                },
                {
                    "ancestorTitles": [
                        "big files"
                    ],
                    "failureMessages": [
                        "Error: root CA not found. Please run `anyproxy-ca` to generate one first.\n    at new ProxyCore (/home/flakie/package/proxy.js:62:13)\n    at new ProxyServer (/home/flakie/package/proxy.js:304:5)\n    at /home/flakie/package/test/util.js:68:22\n    at new Promise (<anonymous>)\n    at proxyServerWithRule (/home/flakie/package/test/util.js:67:10)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:18:17)"
                    ],
                    "fullName": "big files upload big file",
                    "location": null,
                    "status": "failed",
                    "title": "upload big file"
                },
                {
                    "ancestorTitles": [
                        "web interface"
                    ],
                    "failureMessages": [
                        "Error: root CA not found. Please run `anyproxy-ca` to generate one first.\n    at new ProxyCore (/home/flakie/package/proxy.js:62:13)\n    at new ProxyServer (/home/flakie/package/proxy.js:304:5)\n    at /home/flakie/package/test/util.js:68:22\n    at new Promise (<anonymous>)\n    at proxyServerWithRule (/home/flakie/package/test/util.js:67:10)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:18:17)",
                        "Error: expect request url to be a string or a http request options, but got undefined\n    at Object.requestWithCallback (/home/flakie/package/node_modules/urllib/lib/urllib.js:205:11)\n    at /home/flakie/package/node_modules/urllib/lib/urllib.js:162:13\n    at new Promise (<anonymous>)\n    at Object.request (/home/flakie/package/node_modules/urllib/lib/urllib.js:161:10)\n    at Object.<anonymous> (/home/flakie/package/test/basic.spec.js:243:18)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:43:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:73:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
                    ],
                    "fullName": "web interface should be available",
                    "location": null,
                    "status": "failed",
                    "title": "should be available"
                }
            ],
            "endTime": 1674634992970,
            "message": "  \u25cf http - HTTP verbs \u203a GET\n\n    root CA not found. Please run `anyproxy-ca` to generate one first.\n\n      60 |     } else if (config.forceProxyHttps && !certMgr.ifRootCAFileExists()) {\n      61 |       logUtil.printLog('You can run `anyproxy-ca` to generate one root CA and then re-run this command');\n    > 62 |       throw new Error('root CA not found. Please run `anyproxy-ca` to generate one first.');\n         |             ^\n      63 |     } else if (this.proxyType === T_TYPE_HTTPS && !config.hostname) {\n      64 |       throw new Error('hostname is required in https proxy');\n      65 |     } else if (!this.proxyPort) {\n\n      at new ProxyCore (proxy.js:62:13)\n      at new ProxyServer (proxy.js:304:5)\n      at test/util.js:68:22\n      at proxyServerWithRule (test/util.js:67:10)\n      at Object.<anonymous> (test/basic.spec.js:18:17)\n\n  \u25cf http - HTTP verbs \u203a GET\n\n    assert(received)\n\n    Expected value to be equal to:\n      true\n    Received:\n      undefined\n\n    Message:\n      proxyHost is required\n\n    Difference:\n\n      Comparing two different types of values. Expected boolean but received undefined.\n\n       6 | function basicProxyRequest(proxyHost, method, url, headers, qs, payload) {\n       7 |   assert(method && url, 'method and url are required');\n    >  8 |   assert(proxyHost, 'proxyHost is required');\n         |   ^\n       9 |   headers = Object.assign({\n      10 |     'via-anyproxy': 'true',\n      11 |   }, headers || {});\n\n      at basicProxyRequest (test/util.js:8:3)\n      at Object.<anonymous> (test/basic.spec.js:72:13)\n\n  \u25cf http - HTTP verbs \u203a POST body and header\n\n    root CA not found. Please run `anyproxy-ca` to generate one first.\n\n      60 |     } else if (config.forceProxyHttps && !certMgr.ifRootCAFileExists()) {\n      61 |       logUtil.printLog('You can run `anyproxy-ca` to generate one root CA and then re-run this command');\n    > 62 |       throw new Error('root CA not found. Please run `anyproxy-ca` to generate one first.');\n         |             ^\n      63 |     } else if (this.proxyType === T_TYPE_HTTPS && !config.hostname) {\n      64 |       throw new Error('hostname is required in https proxy');\n      65 |     } else if (!this.proxyPort) {\n\n      at new ProxyCore (proxy.js:62:13)\n      at new ProxyServer (proxy.js:304:5)\n      at test/util.js:68:22\n      at proxyServerWithRule (test/util.js:67:10)\n      at Object.<anonymous> (test/basic.spec.js:18:17)\n\n  \u25cf http - HTTP verbs \u203a POST body and header\n\n    assert(received)\n\n    Expected value to be equal to:\n      true\n    Received:\n      undefined\n\n    Message:\n      proxyHost is required\n\n    Difference:\n\n      Comparing two different types of values. Expected boolean but received undefined.\n\n       6 | function basicProxyRequest(proxyHost, method, url, headers, qs, payload) {\n       7 |   assert(method && url, 'method and url are required');\n    >  8 |   assert(proxyHost, 'proxyHost is required');\n         |   ^\n       9 |   headers = Object.assign({\n      10 |     'via-anyproxy': 'true',\n      11 |   }, headers || {});\n\n      at basicProxyRequest (test/util.js:8:3)\n      at Object.<anonymous> (test/basic.spec.js:83:26)\n\n  \u25cf http - HTTP verbs \u203a PUT\n\n    root CA not found. Please run `anyproxy-ca` to generate one first.\n\n      60 |     } else if (config.forceProxyHttps && !certMgr.ifRootCAFileExists()) {\n      61 |       logUtil.printLog('You can run `anyproxy-ca` to generate one root CA and then re-run this command');\n    > 62 |       throw new Error('root CA not found. Please run `anyproxy-ca` to generate one first.');\n         |             ^\n      63 |     } else if (this.proxyType === T_TYPE_HTTPS && !config.hostname) {\n      64 |       throw new Error('hostname is required in https proxy');\n      65 |     } else if (!this.proxyPort) {\n\n      at new ProxyCore (proxy.js:62:13)\n      at new ProxyServer (proxy.js:304:5)\n      at test/util.js:68:22\n      at proxyServerWithRule (test/util.js:67:10)\n      at Object.<anonymous> (test/basic.spec.js:18:17)\n\n  \u25cf http - HTTP verbs \u203a PUT\n\n    assert(received)\n\n    Expected value to be equal to:\n      true\n    Received:\n      undefined\n\n    Message:\n      proxyHost is required\n\n    Difference:\n\n      Comparing two different types of values. Expected boolean but received undefined.\n\n       6 | function basicProxyRequest(proxyHost, method, url, headers, qs, payload) {\n       7 |   assert(method && url, 'method and url are required');\n    >  8 |   assert(proxyHost, 'proxyHost is required');\n         |   ^\n       9 |   headers = Object.assign({\n      10 |     'via-anyproxy': 'true',\n      11 |   }, headers || {});\n\n      at basicProxyRequest (test/util.js:8:3)\n      at Object.<anonymous> (test/basic.spec.js:90:13)\n\n  \u25cf http - HTTP verbs \u203a DELETE\n\n    root CA not found. Please run `anyproxy-ca` to generate one first.\n\n      60 |     } else if (config.forceProxyHttps && !certMgr.ifRootCAFileExists()) {\n      61 |       logUtil.printLog('You can run `anyproxy-ca` to generate one root CA and then re-run this command');\n    > 62 |       throw new Error('root CA not found. Please run `anyproxy-ca` to generate one first.');\n         |             ^\n      63 |     } else if (this.proxyType === T_TYPE_HTTPS && !config.hostname) {\n      64 |       throw new Error('hostname is required in https proxy');\n      65 |     } else if (!this.proxyPort) {\n\n      at new ProxyCore (proxy.js:62:13)\n      at new ProxyServer (proxy.js:304:5)\n      at test/util.js:68:22\n      at proxyServerWithRule (test/util.js:67:10)\n      at Object.<anonymous> (test/basic.spec.js:18:17)\n\n  \u25cf http - HTTP verbs \u203a DELETE\n\n    assert(received)\n\n    Expected value to be equal to:\n      true\n    Received:\n      undefined\n\n    Message:\n      proxyHost is required\n\n    Difference:\n\n      Comparing two different types of values. Expected boolean but received undefined.\n\n       6 | function basicProxyRequest(proxyHost, method, url, headers, qs, payload) {\n       7 |   assert(method && url, 'method and url are required');\n    >  8 |   assert(proxyHost, 'proxyHost is required');\n         |   ^\n       9 |   headers = Object.assign({\n      10 |     'via-anyproxy': 'true',\n      11 |   }, headers || {});\n\n      at basicProxyRequest (test/util.js:8:3)\n      at Object.<anonymous> (test/basic.spec.js:98:13)\n\n  \u25cf http - HTTP verbs \u203a PATCH\n\n    root CA not found. Please run `anyproxy-ca` to generate one first.\n\n      60 |     } else if (config.forceProxyHttps && !certMgr.ifRootCAFileExists()) {\n      61 |       logUtil.printLog('You can run `anyproxy-ca` to generate one root CA and then re-run this command');\n    > 62 |       throw new Error('root CA not found. Please run `anyproxy-ca` to generate one first.');\n         |             ^\n      63 |     } else if (this.proxyType === T_TYPE_HTTPS && !config.hostname) {\n      64 |       throw new Error('hostname is required in https proxy');\n      65 |     } else if (!this.proxyPort) {\n\n      at new ProxyCore (proxy.js:62:13)\n      at new ProxyServer (proxy.js:304:5)\n      at test/util.js:68:22\n      at proxyServerWithRule (test/util.js:67:10)\n      at Object.<anonymous> (test/basic.spec.js:18:17)\n\n  \u25cf http - HTTP verbs \u203a PATCH\n\n    assert(received)\n\n    Expected value to be equal to:\n      true\n    Received:\n      undefined\n\n    Message:\n      proxyHost is required\n\n    Difference:\n\n      Comparing two different types of values. Expected boolean but received undefined.\n\n       6 | function basicProxyRequest(proxyHost, method, url, headers, qs, payload) {\n       7 |   assert(method && url, 'method and url are required');\n    >  8 |   assert(proxyHost, 'proxyHost is required');\n         |   ^\n       9 |   headers = Object.assign({\n      10 |     'via-anyproxy': 'true',\n      11 |   }, headers || {});\n\n      at basicProxyRequest (test/util.js:8:3)\n      at Object.<anonymous> (test/basic.spec.js:103:13)\n\n  \u25cf http - HTTP verbs \u203a Websocket\n\n    root CA not found. Please run `anyproxy-ca` to generate one first.\n\n      60 |     } else if (config.forceProxyHttps && !certMgr.ifRootCAFileExists()) {\n      61 |       logUtil.printLog('You can run `anyproxy-ca` to generate one root CA and then re-run this command');\n    > 62 |       throw new Error('root CA not found. Please run `anyproxy-ca` to generate one first.');\n         |             ^\n      63 |     } else if (this.proxyType === T_TYPE_HTTPS && !config.hostname) {\n      64 |       throw new Error('hostname is required in https proxy');\n      65 |     } else if (!this.proxyPort) {\n\n      at new ProxyCore (proxy.js:62:13)\n      at new ProxyServer (proxy.js:304:5)\n      at test/util.js:68:22\n      at proxyServerWithRule (test/util.js:67:10)\n      at Object.<anonymous> (test/basic.spec.js:18:17)\n\n  \u25cf http - HTTP verbs \u203a Websocket\n\n    Unhandled error. (Error: tunneling socket could not be established, cause=connect ECONNREFUSED 127.0.0.1:80\n\n      at ClientRequest.onError (node_modules/tunnel/lib/tunnel.js:180:17)\n      at processTicksAndRejections (internal/process/task_queues.js:82:21) {\n        code: 'ECONNRESET'\n      })Error [ERR_UNHANDLED_ERROR]: Unhandled error. (Error: tunneling socket could not be established, cause=connect ECONNREFUSED 127.0.0.1:80\n      at ClientRequest.onError (node_modules/tunnel/lib/tunnel.js:180:17)\n      at processTicksAndRejections (internal/process/task_queues.js:82:21) {\n        code: 'ECONNRESET'\n      })\n      at ClientRequest.<anonymous> (node_modules/ws/lib/websocket.js:535:10)\n      at ClientRequest.onError (node_modules/tunnel/lib/tunnel.js:183:21)\n\n  \u25cf https - HTTP verbs \u203a GET\n\n    root CA not found. Please run `anyproxy-ca` to generate one first.\n\n      60 |     } else if (config.forceProxyHttps && !certMgr.ifRootCAFileExists()) {\n      61 |       logUtil.printLog('You can run `anyproxy-ca` to generate one root CA and then re-run this command');\n    > 62 |       throw new Error('root CA not found. Please run `anyproxy-ca` to generate one first.');\n         |             ^\n      63 |     } else if (this.proxyType === T_TYPE_HTTPS && !config.hostname) {\n      64 |       throw new Error('hostname is required in https proxy');\n      65 |     } else if (!this.proxyPort) {\n\n      at new ProxyCore (proxy.js:62:13)\n      at new ProxyServer (proxy.js:304:5)\n      at test/util.js:68:22\n      at proxyServerWithRule (test/util.js:67:10)\n      at Object.<anonymous> (test/basic.spec.js:18:17)\n\n  \u25cf https - HTTP verbs \u203a GET\n\n    assert(received)\n\n    Expected value to be equal to:\n      true\n    Received:\n      undefined\n\n    Message:\n      proxyHost is required\n\n    Difference:\n\n      Comparing two different types of values. Expected boolean but received undefined.\n\n       6 | function basicProxyRequest(proxyHost, method, url, headers, qs, payload) {\n       7 |   assert(method && url, 'method and url are required');\n    >  8 |   assert(proxyHost, 'proxyHost is required');\n         |   ^\n       9 |   headers = Object.assign({\n      10 |     'via-anyproxy': 'true',\n      11 |   }, headers || {});\n\n      at basicProxyRequest (test/util.js:8:3)\n      at Object.<anonymous> (test/basic.spec.js:72:13)\n\n  \u25cf https - HTTP verbs \u203a POST body and header\n\n    root CA not found. Please run `anyproxy-ca` to generate one first.\n\n      60 |     } else if (config.forceProxyHttps && !certMgr.ifRootCAFileExists()) {\n      61 |       logUtil.printLog('You can run `anyproxy-ca` to generate one root CA and then re-run this command');\n    > 62 |       throw new Error('root CA not found. Please run `anyproxy-ca` to generate one first.');\n         |             ^\n      63 |     } else if (this.proxyType === T_TYPE_HTTPS && !config.hostname) {\n      64 |       throw new Error('hostname is required in https proxy');\n      65 |     } else if (!this.proxyPort) {\n\n      at new ProxyCore (proxy.js:62:13)\n      at new ProxyServer (proxy.js:304:5)\n      at test/util.js:68:22\n      at proxyServerWithRule (test/util.js:67:10)\n      at Object.<anonymous> (test/basic.spec.js:18:17)\n\n  \u25cf https - HTTP verbs \u203a POST body and header\n\n    assert(received)\n\n    Expected value to be equal to:\n      true\n    Received:\n      undefined\n\n    Message:\n      proxyHost is required\n\n    Difference:\n\n      Comparing two different types of values. Expected boolean but received undefined.\n\n       6 | function basicProxyRequest(proxyHost, method, url, headers, qs, payload) {\n       7 |   assert(method && url, 'method and url are required');\n    >  8 |   assert(proxyHost, 'proxyHost is required');\n         |   ^\n       9 |   headers = Object.assign({\n      10 |     'via-anyproxy': 'true',\n      11 |   }, headers || {});\n\n      at basicProxyRequest (test/util.js:8:3)\n      at Object.<anonymous> (test/basic.spec.js:83:26)\n\n  \u25cf https - HTTP verbs \u203a PUT\n\n    root CA not found. Please run `anyproxy-ca` to generate one first.\n\n      60 |     } else if (config.forceProxyHttps && !certMgr.ifRootCAFileExists()) {\n      61 |       logUtil.printLog('You can run `anyproxy-ca` to generate one root CA and then re-run this command');\n    > 62 |       throw new Error('root CA not found. Please run `anyproxy-ca` to generate one first.');\n         |             ^\n      63 |     } else if (this.proxyType === T_TYPE_HTTPS && !config.hostname) {\n      64 |       throw new Error('hostname is required in https proxy');\n      65 |     } else if (!this.proxyPort) {\n\n      at new ProxyCore (proxy.js:62:13)\n      at new ProxyServer (proxy.js:304:5)\n      at test/util.js:68:22\n      at proxyServerWithRule (test/util.js:67:10)\n      at Object.<anonymous> (test/basic.spec.js:18:17)\n\n  \u25cf https - HTTP verbs \u203a PUT\n\n    assert(received)\n\n    Expected value to be equal to:\n      true\n    Received:\n      undefined\n\n    Message:\n      proxyHost is required\n\n    Difference:\n\n      Comparing two different types of values. Expected boolean but received undefined.\n\n       6 | function basicProxyRequest(proxyHost, method, url, headers, qs, payload) {\n       7 |   assert(method && url, 'method and url are required');\n    >  8 |   assert(proxyHost, 'proxyHost is required');\n         |   ^\n       9 |   headers = Object.assign({\n      10 |     'via-anyproxy': 'true',\n      11 |   }, headers || {});\n\n      at basicProxyRequest (test/util.js:8:3)\n      at Object.<anonymous> (test/basic.spec.js:90:13)\n\n  \u25cf https - HTTP verbs \u203a DELETE\n\n    root CA not found. Please run `anyproxy-ca` to generate one first.\n\n      60 |     } else if (config.forceProxyHttps && !certMgr.ifRootCAFileExists()) {\n      61 |       logUtil.printLog('You can run `anyproxy-ca` to generate one root CA and then re-run this command');\n    > 62 |       throw new Error('root CA not found. Please run `anyproxy-ca` to generate one first.');\n         |             ^\n      63 |     } else if (this.proxyType === T_TYPE_HTTPS && !config.hostname) {\n      64 |       throw new Error('hostname is required in https proxy');\n      65 |     } else if (!this.proxyPort) {\n\n      at new ProxyCore (proxy.js:62:13)\n      at new ProxyServer (proxy.js:304:5)\n      at test/util.js:68:22\n      at proxyServerWithRule (test/util.js:67:10)\n      at Object.<anonymous> (test/basic.spec.js:18:17)\n\n  \u25cf https - HTTP verbs \u203a DELETE\n\n    assert(received)\n\n    Expected value to be equal to:\n      true\n    Received:\n      undefined\n\n    Message:\n      proxyHost is required\n\n    Difference:\n\n      Comparing two different types of values. Expected boolean but received undefined.\n\n       6 | function basicProxyRequest(proxyHost, method, url, headers, qs, payload) {\n       7 |   assert(method && url, 'method and url are required');\n    >  8 |   assert(proxyHost, 'proxyHost is required');\n         |   ^\n       9 |   headers = Object.assign({\n      10 |     'via-anyproxy': 'true',\n      11 |   }, headers || {});\n\n      at basicProxyRequest (test/util.js:8:3)\n      at Object.<anonymous> (test/basic.spec.js:98:13)\n\n  \u25cf https - HTTP verbs \u203a PATCH\n\n    root CA not found. Please run `anyproxy-ca` to generate one first.\n\n      60 |     } else if (config.forceProxyHttps && !certMgr.ifRootCAFileExists()) {\n      61 |       logUtil.printLog('You can run `anyproxy-ca` to generate one root CA and then re-run this command');\n    > 62 |       throw new Error('root CA not found. Please run `anyproxy-ca` to generate one first.');\n         |             ^\n      63 |     } else if (this.proxyType === T_TYPE_HTTPS && !config.hostname) {\n      64 |       throw new Error('hostname is required in https proxy');\n      65 |     } else if (!this.proxyPort) {\n\n      at new ProxyCore (proxy.js:62:13)\n      at new ProxyServer (proxy.js:304:5)\n      at test/util.js:68:22\n      at proxyServerWithRule (test/util.js:67:10)\n      at Object.<anonymous> (test/basic.spec.js:18:17)\n\n  \u25cf https - HTTP verbs \u203a PATCH\n\n    assert(received)\n\n    Expected value to be equal to:\n      true\n    Received:\n      undefined\n\n    Message:\n      proxyHost is required\n\n    Difference:\n\n      Comparing two different types of values. Expected boolean but received undefined.\n\n       6 | function basicProxyRequest(proxyHost, method, url, headers, qs, payload) {\n       7 |   assert(method && url, 'method and url are required');\n    >  8 |   assert(proxyHost, 'proxyHost is required');\n         |   ^\n       9 |   headers = Object.assign({\n      10 |     'via-anyproxy': 'true',\n      11 |   }, headers || {});\n\n      at basicProxyRequest (test/util.js:8:3)\n      at Object.<anonymous> (test/basic.spec.js:103:13)\n\n  \u25cf https - HTTP verbs \u203a Websocket\n\n    root CA not found. Please run `anyproxy-ca` to generate one first.\n\n      60 |     } else if (config.forceProxyHttps && !certMgr.ifRootCAFileExists()) {\n      61 |       logUtil.printLog('You can run `anyproxy-ca` to generate one root CA and then re-run this command');\n    > 62 |       throw new Error('root CA not found. Please run `anyproxy-ca` to generate one first.');\n         |             ^\n      63 |     } else if (this.proxyType === T_TYPE_HTTPS && !config.hostname) {\n      64 |       throw new Error('hostname is required in https proxy');\n      65 |     } else if (!this.proxyPort) {\n\n      at new ProxyCore (proxy.js:62:13)\n      at new ProxyServer (proxy.js:304:5)\n      at test/util.js:68:22\n      at proxyServerWithRule (test/util.js:67:10)\n      at Object.<anonymous> (test/basic.spec.js:18:17)\n\n  \u25cf https - HTTP verbs \u203a Websocket\n\n    Unhandled error. (Error: tunneling socket could not be established, cause=connect ECONNREFUSED 127.0.0.1:80\n\n      at ClientRequest.onError (node_modules/tunnel/lib/tunnel.js:180:17)\n      at processTicksAndRejections (internal/process/task_queues.js:82:21) {\n        code: 'ECONNRESET'\n      })Error [ERR_UNHANDLED_ERROR]: Unhandled error. (Error: tunneling socket could not be established, cause=connect ECONNREFUSED 127.0.0.1:80\n      at ClientRequest.onError (node_modules/tunnel/lib/tunnel.js:180:17)\n      at processTicksAndRejections (internal/process/task_queues.js:82:21) {\n        code: 'ECONNRESET'\n      })\n      at ClientRequest.<anonymous> (node_modules/ws/lib/websocket.js:535:10)\n      at ClientRequest.onError (node_modules/tunnel/lib/tunnel.js:183:21)\n\n  \u25cf status code and headers \u203a GET 302\n\n    root CA not found. Please run `anyproxy-ca` to generate one first.\n\n      60 |     } else if (config.forceProxyHttps && !certMgr.ifRootCAFileExists()) {\n      61 |       logUtil.printLog('You can run `anyproxy-ca` to generate one root CA and then re-run this command');\n    > 62 |       throw new Error('root CA not found. Please run `anyproxy-ca` to generate one first.');\n         |             ^\n      63 |     } else if (this.proxyType === T_TYPE_HTTPS && !config.hostname) {\n      64 |       throw new Error('hostname is required in https proxy');\n      65 |     } else if (!this.proxyPort) {\n\n      at new ProxyCore (proxy.js:62:13)\n      at new ProxyServer (proxy.js:304:5)\n      at test/util.js:68:22\n      at proxyServerWithRule (test/util.js:67:10)\n      at Object.<anonymous> (test/basic.spec.js:18:17)\n\n  \u25cf status code and headers \u203a GET 302\n\n    assert(received)\n\n    Expected value to be equal to:\n      true\n    Received:\n      undefined\n\n    Message:\n      proxyHost is required\n\n    Difference:\n\n      Comparing two different types of values. Expected boolean but received undefined.\n\n       6 | function basicProxyRequest(proxyHost, method, url, headers, qs, payload) {\n       7 |   assert(method && url, 'method and url are required');\n    >  8 |   assert(proxyHost, 'proxyHost is required');\n         |   ^\n       9 |   headers = Object.assign({\n      10 |     'via-anyproxy': 'true',\n      11 |   }, headers || {});\n\n      at basicProxyRequest (test/util.js:8:3)\n      at Object.<anonymous> (test/basic.spec.js:135:28)\n\n  \u25cf status code and headers \u203a PUT 302\n\n    root CA not found. Please run `anyproxy-ca` to generate one first.\n\n      60 |     } else if (config.forceProxyHttps && !certMgr.ifRootCAFileExists()) {\n      61 |       logUtil.printLog('You can run `anyproxy-ca` to generate one root CA and then re-run this command');\n    > 62 |       throw new Error('root CA not found. Please run `anyproxy-ca` to generate one first.');\n         |             ^\n      63 |     } else if (this.proxyType === T_TYPE_HTTPS && !config.hostname) {\n      64 |       throw new Error('hostname is required in https proxy');\n      65 |     } else if (!this.proxyPort) {\n\n      at new ProxyCore (proxy.js:62:13)\n      at new ProxyServer (proxy.js:304:5)\n      at test/util.js:68:22\n      at proxyServerWithRule (test/util.js:67:10)\n      at Object.<anonymous> (test/basic.spec.js:18:17)\n\n  \u25cf status code and headers \u203a PUT 302\n\n    assert(received)\n\n    Expected value to be equal to:\n      true\n    Received:\n      undefined\n\n    Message:\n      proxyHost is required\n\n    Difference:\n\n      Comparing two different types of values. Expected boolean but received undefined.\n\n       6 | function basicProxyRequest(proxyHost, method, url, headers, qs, payload) {\n       7 |   assert(method && url, 'method and url are required');\n    >  8 |   assert(proxyHost, 'proxyHost is required');\n         |   ^\n       9 |   headers = Object.assign({\n      10 |     'via-anyproxy': 'true',\n      11 |   }, headers || {});\n\n      at basicProxyRequest (test/util.js:8:3)\n      at Object.<anonymous> (test/basic.spec.js:143:28)\n\n  \u25cf status code and headers \u203a GET 404\n\n    root CA not found. Please run `anyproxy-ca` to generate one first.\n\n      60 |     } else if (config.forceProxyHttps && !certMgr.ifRootCAFileExists()) {\n      61 |       logUtil.printLog('You can run `anyproxy-ca` to generate one root CA and then re-run this command');\n    > 62 |       throw new Error('root CA not found. Please run `anyproxy-ca` to generate one first.');\n         |             ^\n      63 |     } else if (this.proxyType === T_TYPE_HTTPS && !config.hostname) {\n      64 |       throw new Error('hostname is required in https proxy');\n      65 |     } else if (!this.proxyPort) {\n\n      at new ProxyCore (proxy.js:62:13)\n      at new ProxyServer (proxy.js:304:5)\n      at test/util.js:68:22\n      at proxyServerWithRule (test/util.js:67:10)\n      at Object.<anonymous> (test/basic.spec.js:18:17)\n\n  \u25cf status code and headers \u203a GET 404\n\n    assert(received)\n\n    Expected value to be equal to:\n      true\n    Received:\n      undefined\n\n    Message:\n      proxyHost is required\n\n    Difference:\n\n      Comparing two different types of values. Expected boolean but received undefined.\n\n       6 | function basicProxyRequest(proxyHost, method, url, headers, qs, payload) {\n       7 |   assert(method && url, 'method and url are required');\n    >  8 |   assert(proxyHost, 'proxyHost is required');\n         |   ^\n       9 |   headers = Object.assign({\n      10 |     'via-anyproxy': 'true',\n      11 |   }, headers || {});\n\n      at basicProxyRequest (test/util.js:8:3)\n      at Object.<anonymous> (test/basic.spec.js:135:28)\n\n  \u25cf status code and headers \u203a PUT 404\n\n    root CA not found. Please run `anyproxy-ca` to generate one first.\n\n      60 |     } else if (config.forceProxyHttps && !certMgr.ifRootCAFileExists()) {\n      61 |       logUtil.printLog('You can run `anyproxy-ca` to generate one root CA and then re-run this command');\n    > 62 |       throw new Error('root CA not found. Please run `anyproxy-ca` to generate one first.');\n         |             ^\n      63 |     } else if (this.proxyType === T_TYPE_HTTPS && !config.hostname) {\n      64 |       throw new Error('hostname is required in https proxy');\n      65 |     } else if (!this.proxyPort) {\n\n      at new ProxyCore (proxy.js:62:13)\n      at new ProxyServer (proxy.js:304:5)\n      at test/util.js:68:22\n      at proxyServerWithRule (test/util.js:67:10)\n      at Object.<anonymous> (test/basic.spec.js:18:17)\n\n  \u25cf status code and headers \u203a PUT 404\n\n    assert(received)\n\n    Expected value to be equal to:\n      true\n    Received:\n      undefined\n\n    Message:\n      proxyHost is required\n\n    Difference:\n\n      Comparing two different types of values. Expected boolean but received undefined.\n\n       6 | function basicProxyRequest(proxyHost, method, url, headers, qs, payload) {\n       7 |   assert(method && url, 'method and url are required');\n    >  8 |   assert(proxyHost, 'proxyHost is required');\n         |   ^\n       9 |   headers = Object.assign({\n      10 |     'via-anyproxy': 'true',\n      11 |   }, headers || {});\n\n      at basicProxyRequest (test/util.js:8:3)\n      at Object.<anonymous> (test/basic.spec.js:143:28)\n\n  \u25cf status code and headers \u203a GET 500\n\n    root CA not found. Please run `anyproxy-ca` to generate one first.\n\n      60 |     } else if (config.forceProxyHttps && !certMgr.ifRootCAFileExists()) {\n      61 |       logUtil.printLog('You can run `anyproxy-ca` to generate one root CA and then re-run this command');\n    > 62 |       throw new Error('root CA not found. Please run `anyproxy-ca` to generate one first.');\n         |             ^\n      63 |     } else if (this.proxyType === T_TYPE_HTTPS && !config.hostname) {\n      64 |       throw new Error('hostname is required in https proxy');\n      65 |     } else if (!this.proxyPort) {\n\n      at new ProxyCore (proxy.js:62:13)\n      at new ProxyServer (proxy.js:304:5)\n      at test/util.js:68:22\n      at proxyServerWithRule (test/util.js:67:10)\n      at Object.<anonymous> (test/basic.spec.js:18:17)\n\n  \u25cf status code and headers \u203a GET 500\n\n    assert(received)\n\n    Expected value to be equal to:\n      true\n    Received:\n      undefined\n\n    Message:\n      proxyHost is required\n\n    Difference:\n\n      Comparing two different types of values. Expected boolean but received undefined.\n\n       6 | function basicProxyRequest(proxyHost, method, url, headers, qs, payload) {\n       7 |   assert(method && url, 'method and url are required');\n    >  8 |   assert(proxyHost, 'proxyHost is required');\n         |   ^\n       9 |   headers = Object.assign({\n      10 |     'via-anyproxy': 'true',\n      11 |   }, headers || {});\n\n      at basicProxyRequest (test/util.js:8:3)\n      at Object.<anonymous> (test/basic.spec.js:135:28)\n\n  \u25cf status code and headers \u203a PUT 500\n\n    root CA not found. Please run `anyproxy-ca` to generate one first.\n\n      60 |     } else if (config.forceProxyHttps && !certMgr.ifRootCAFileExists()) {\n      61 |       logUtil.printLog('You can run `anyproxy-ca` to generate one root CA and then re-run this command');\n    > 62 |       throw new Error('root CA not found. Please run `anyproxy-ca` to generate one first.');\n         |             ^\n      63 |     } else if (this.proxyType === T_TYPE_HTTPS && !config.hostname) {\n      64 |       throw new Error('hostname is required in https proxy');\n      65 |     } else if (!this.proxyPort) {\n\n      at new ProxyCore (proxy.js:62:13)\n      at new ProxyServer (proxy.js:304:5)\n      at test/util.js:68:22\n      at proxyServerWithRule (test/util.js:67:10)\n      at Object.<anonymous> (test/basic.spec.js:18:17)\n\n  \u25cf status code and headers \u203a PUT 500\n\n    assert(received)\n\n    Expected value to be equal to:\n      true\n    Received:\n      undefined\n\n    Message:\n      proxyHost is required\n\n    Difference:\n\n      Comparing two different types of values. Expected boolean but received undefined.\n\n       6 | function basicProxyRequest(proxyHost, method, url, headers, qs, payload) {\n       7 |   assert(method && url, 'method and url are required');\n    >  8 |   assert(proxyHost, 'proxyHost is required');\n         |   ^\n       9 |   headers = Object.assign({\n      10 |     'via-anyproxy': 'true',\n      11 |   }, headers || {});\n\n      at basicProxyRequest (test/util.js:8:3)\n      at Object.<anonymous> (test/basic.spec.js:143:28)\n\n  \u25cf response data formats \u203a GET brotli\n\n    root CA not found. Please run `anyproxy-ca` to generate one first.\n\n      60 |     } else if (config.forceProxyHttps && !certMgr.ifRootCAFileExists()) {\n      61 |       logUtil.printLog('You can run `anyproxy-ca` to generate one root CA and then re-run this command');\n    > 62 |       throw new Error('root CA not found. Please run `anyproxy-ca` to generate one first.');\n         |             ^\n      63 |     } else if (this.proxyType === T_TYPE_HTTPS && !config.hostname) {\n      64 |       throw new Error('hostname is required in https proxy');\n      65 |     } else if (!this.proxyPort) {\n\n      at new ProxyCore (proxy.js:62:13)\n      at new ProxyServer (proxy.js:304:5)\n      at test/util.js:68:22\n      at proxyServerWithRule (test/util.js:67:10)\n      at Object.<anonymous> (test/basic.spec.js:18:17)\n\n  \u25cf response data formats \u203a GET brotli\n\n    assert(received)\n\n    Expected value to be equal to:\n      true\n    Received:\n      undefined\n\n    Message:\n      proxyHost is required\n\n    Difference:\n\n      Comparing two different types of values. Expected boolean but received undefined.\n\n       6 | function basicProxyRequest(proxyHost, method, url, headers, qs, payload) {\n       7 |   assert(method && url, 'method and url are required');\n    >  8 |   assert(proxyHost, 'proxyHost is required');\n         |   ^\n       9 |   headers = Object.assign({\n      10 |     'via-anyproxy': 'true',\n      11 |   }, headers || {});\n\n      at basicProxyRequest (test/util.js:8:3)\n      at Object.<anonymous> (test/basic.spec.js:154:28)\n\n  \u25cf response data formats \u203a GET deflate\n\n    root CA not found. Please run `anyproxy-ca` to generate one first.\n\n      60 |     } else if (config.forceProxyHttps && !certMgr.ifRootCAFileExists()) {\n      61 |       logUtil.printLog('You can run `anyproxy-ca` to generate one root CA and then re-run this command');\n    > 62 |       throw new Error('root CA not found. Please run `anyproxy-ca` to generate one first.');\n         |             ^\n      63 |     } else if (this.proxyType === T_TYPE_HTTPS && !config.hostname) {\n      64 |       throw new Error('hostname is required in https proxy');\n      65 |     } else if (!this.proxyPort) {\n\n      at new ProxyCore (proxy.js:62:13)\n      at new ProxyServer (proxy.js:304:5)\n      at test/util.js:68:22\n      at proxyServerWithRule (test/util.js:67:10)\n      at Object.<anonymous> (test/basic.spec.js:18:17)\n\n  \u25cf response data formats \u203a GET deflate\n\n    assert(received)\n\n    Expected value to be equal to:\n      true\n    Received:\n      undefined\n\n    Message:\n      proxyHost is required\n\n    Difference:\n\n      Comparing two different types of values. Expected boolean but received undefined.\n\n       6 | function basicProxyRequest(proxyHost, method, url, headers, qs, payload) {\n       7 |   assert(method && url, 'method and url are required');\n    >  8 |   assert(proxyHost, 'proxyHost is required');\n         |   ^\n       9 |   headers = Object.assign({\n      10 |     'via-anyproxy': 'true',\n      11 |   }, headers || {});\n\n      at basicProxyRequest (test/util.js:8:3)\n      at Object.<anonymous> (test/basic.spec.js:154:28)\n\n  \u25cf response data formats \u203a GET gzip\n\n    root CA not found. Please run `anyproxy-ca` to generate one first.\n\n      60 |     } else if (config.forceProxyHttps && !certMgr.ifRootCAFileExists()) {\n      61 |       logUtil.printLog('You can run `anyproxy-ca` to generate one root CA and then re-run this command');\n    > 62 |       throw new Error('root CA not found. Please run `anyproxy-ca` to generate one first.');\n         |             ^\n      63 |     } else if (this.proxyType === T_TYPE_HTTPS && !config.hostname) {\n      64 |       throw new Error('hostname is required in https proxy');\n      65 |     } else if (!this.proxyPort) {\n\n      at new ProxyCore (proxy.js:62:13)\n      at new ProxyServer (proxy.js:304:5)\n      at test/util.js:68:22\n      at proxyServerWithRule (test/util.js:67:10)\n      at Object.<anonymous> (test/basic.spec.js:18:17)\n\n  \u25cf response data formats \u203a GET gzip\n\n    assert(received)\n\n    Expected value to be equal to:\n      true\n    Received:\n      undefined\n\n    Message:\n      proxyHost is required\n\n    Difference:\n\n      Comparing two different types of values. Expected boolean but received undefined.\n\n       6 | function basicProxyRequest(proxyHost, method, url, headers, qs, payload) {\n       7 |   assert(method && url, 'method and url are required');\n    >  8 |   assert(proxyHost, 'proxyHost is required');\n         |   ^\n       9 |   headers = Object.assign({\n      10 |     'via-anyproxy': 'true',\n      11 |   }, headers || {});\n\n      at basicProxyRequest (test/util.js:8:3)\n      at Object.<anonymous> (test/basic.spec.js:154:28)\n\n  \u25cf big files \u203a download big file\n\n    root CA not found. Please run `anyproxy-ca` to generate one first.\n\n      60 |     } else if (config.forceProxyHttps && !certMgr.ifRootCAFileExists()) {\n      61 |       logUtil.printLog('You can run `anyproxy-ca` to generate one root CA and then re-run this command');\n    > 62 |       throw new Error('root CA not found. Please run `anyproxy-ca` to generate one first.');\n         |             ^\n      63 |     } else if (this.proxyType === T_TYPE_HTTPS && !config.hostname) {\n      64 |       throw new Error('hostname is required in https proxy');\n      65 |     } else if (!this.proxyPort) {\n\n      at new ProxyCore (proxy.js:62:13)\n      at new ProxyServer (proxy.js:304:5)\n      at test/util.js:68:22\n      at proxyServerWithRule (test/util.js:67:10)\n      at Object.<anonymous> (test/basic.spec.js:18:17)\n\n  \u25cf big files \u203a upload big file\n\n    root CA not found. Please run `anyproxy-ca` to generate one first.\n\n      60 |     } else if (config.forceProxyHttps && !certMgr.ifRootCAFileExists()) {\n      61 |       logUtil.printLog('You can run `anyproxy-ca` to generate one root CA and then re-run this command');\n    > 62 |       throw new Error('root CA not found. Please run `anyproxy-ca` to generate one first.');\n         |             ^\n      63 |     } else if (this.proxyType === T_TYPE_HTTPS && !config.hostname) {\n      64 |       throw new Error('hostname is required in https proxy');\n      65 |     } else if (!this.proxyPort) {\n\n      at new ProxyCore (proxy.js:62:13)\n      at new ProxyServer (proxy.js:304:5)\n      at test/util.js:68:22\n      at proxyServerWithRule (test/util.js:67:10)\n      at Object.<anonymous> (test/basic.spec.js:18:17)\n\n  \u25cf web interface \u203a should be available\n\n    root CA not found. Please run `anyproxy-ca` to generate one first.\n\n      60 |     } else if (config.forceProxyHttps && !certMgr.ifRootCAFileExists()) {\n      61 |       logUtil.printLog('You can run `anyproxy-ca` to generate one root CA and then re-run this command');\n    > 62 |       throw new Error('root CA not found. Please run `anyproxy-ca` to generate one first.');\n         |             ^\n      63 |     } else if (this.proxyType === T_TYPE_HTTPS && !config.hostname) {\n      64 |       throw new Error('hostname is required in https proxy');\n      65 |     } else if (!this.proxyPort) {\n\n      at new ProxyCore (proxy.js:62:13)\n      at new ProxyServer (proxy.js:304:5)\n      at test/util.js:68:22\n      at proxyServerWithRule (test/util.js:67:10)\n      at Object.<anonymous> (test/basic.spec.js:18:17)\n\n  \u25cf web interface \u203a should be available\n\n    expect request url to be a string or a http request options, but got undefined\n\n      241 | describe('web interface', () => {\n      242 |   it('should be available', async () => {\n    > 243 |     await urllib.request(proxyWebInterfaceHost).then((result) => {\n          |                  ^\n      244 |       expect(result.status).toBe(200);\n      245 |     });\n      246 |   });\n\n      at Object.requestWithCallback (node_modules/urllib/lib/urllib.js:205:11)\n      at node_modules/urllib/lib/urllib.js:162:13\n      at Object.request (node_modules/urllib/lib/urllib.js:161:10)\n      at Object.<anonymous> (test/basic.spec.js:243:18)\n",
            "name": "/home/flakie/package/test/basic.spec.js",
            "startTime": 1674634957076,
            "status": "failed",
            "summary": ""
        }
    ],
    "wasInterrupted": false
}