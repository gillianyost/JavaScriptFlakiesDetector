{"numFailedTestSuites":2,"numFailedTests":3,"numPassedTestSuites":236,"numPassedTests":1228,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":238,"numTotalTests":1231,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":2,"total":2,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1674657219667,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should support rendering to a string","location":null,"status":"passed","title":"should support rendering to a string"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should support rendering to static markup","location":null,"status":"passed","title":"should support rendering to static markup"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should render identical content when resetting context between renders","location":null,"status":"passed","title":"should render identical content when resetting context between renders"}],"endTime":1674657274470,"message":"","name":"/home/flakie/package/test/unit/integration/server-side-rendering/server-rendering.spec.js","startTime":1674657229070,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should not allow combining with the dragging item","location":null,"status":"passed","title":"should not allow combining with the dragging item"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should not allow combining with the dragging item","location":null,"status":"passed","title":"should not allow combining with the dragging item"}],"endTime":1674657279377,"message":"","name":"/home/flakie/package/test/unit/state/get-drag-impact/combine/should-not-combine-with-home-draggable.spec.js","startTime":1674657235080,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should create a new element when mounting","location":null,"status":"passed","title":"should create a new element when mounting"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should apply the appropriate aria attributes and non visibility styles","location":null,"status":"passed","title":"should apply the appropriate aria attributes and non visibility styles"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should remove the element when unmounting after a timeout","location":null,"status":"passed","title":"should remove the element when unmounting after a timeout"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should set the text content of the announcement element","location":null,"status":"passed","title":"should set the text content of the announcement element"}],"endTime":1674657286664,"message":"","name":"/home/flakie/package/test/unit/view/announcer.spec.js","startTime":1674657235471,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should allow movement past the last item","location":null,"status":"passed","title":"should allow movement past the last item"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should allow movement past the last item","location":null,"status":"passed","title":"should allow movement past the last item"}],"endTime":1674657287880,"message":"","name":"/home/flakie/package/test/unit/state/get-drag-impact/reorder/over-home-list/move-past-last-item.spec.js","startTime":1674657234774,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should indicate when a displacement is not visible due to being outside of the droppable frame","location":null,"status":"passed","title":"should indicate when a displacement is not visible due to being outside of the droppable frame"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should indicate when a displacement is not visible due to being outside of the viewport","location":null,"status":"passed","title":"should indicate when a displacement is not visible due to being outside of the viewport"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should indicate when a displacement is not visible due to being outside of the droppable frame","location":null,"status":"passed","title":"should indicate when a displacement is not visible due to being outside of the droppable frame"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should indicate when a displacement is not visible due to being outside of the viewport","location":null,"status":"passed","title":"should indicate when a displacement is not visible due to being outside of the viewport"}],"endTime":1674657288574,"message":"","name":"/home/flakie/package/test/unit/state/get-drag-impact/reorder/over-home-list/displacement-visibility.spec.js","startTime":1674657238874,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should throw an error if a drop action occurs while not in a phase where you can drop","location":null,"status":"passed","title":"should throw an error if a drop action occurs while not in a phase where you can drop"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should dispatch a DROP_PENDING action if COLLECTING","location":null,"status":"passed","title":"should dispatch a DROP_PENDING action if COLLECTING"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should throw if a drop action is fired and there is DROP_PENDING and it is waiting for a publish","location":null,"status":"passed","title":"should throw if a drop action is fired and there is DROP_PENDING and it is waiting for a publish"}],"endTime":1674657293964,"message":"","name":"/home/flakie/package/test/unit/state/middleware/drop/timing.spec.js","startTime":1674657235664,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should animate a mount","location":null,"status":"passed","title":"should animate a mount"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not animate a mount if interrupted","location":null,"status":"passed","title":"should not animate a mount if interrupted"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not animate in if unmounted","location":null,"status":"passed","title":"should not animate in if unmounted"}],"endTime":1674657294275,"message":"","name":"/home/flakie/package/test/unit/view/placeholder/animated-mount.spec.js","startTime":1674657279764,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should prevent default on the event that causes a drop","location":null,"status":"passed","title":"should prevent default on the event that causes a drop"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should prevent default on an escape press","location":null,"status":"passed","title":"should prevent default on an escape press"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not prevent the default behaviour for an indirect cancel","location":null,"status":"passed","title":"should not prevent the default behaviour for an indirect cancel"}],"endTime":1674657297078,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/keyboard-sensor/stopping-a-drag.spec.js","startTime":1674657234686,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["home list"],"failureMessages":[],"fullName":"home list should not render a placeholder when not dragging","location":null,"status":"passed","title":"should not render a placeholder when not dragging"},{"ancestorTitles":["home list"],"failureMessages":[],"fullName":"home list should render a placeholder when dragging over","location":null,"status":"passed","title":"should render a placeholder when dragging over"},{"ancestorTitles":["home list"],"failureMessages":[],"fullName":"home list should render a placeholder when dragging over nothing","location":null,"status":"passed","title":"should render a placeholder when dragging over nothing"},{"ancestorTitles":["home list"],"failureMessages":[],"fullName":"home list should render a placeholder when dragging over a foreign list","location":null,"status":"passed","title":"should render a placeholder when dragging over a foreign list"},{"ancestorTitles":["foreign"],"failureMessages":[],"fullName":"foreign should not render a placeholder when not dragging","location":null,"status":"passed","title":"should not render a placeholder when not dragging"},{"ancestorTitles":["foreign"],"failureMessages":[],"fullName":"foreign should render a placeholder when dragging over","location":null,"status":"passed","title":"should render a placeholder when dragging over"},{"ancestorTitles":["foreign"],"failureMessages":[],"fullName":"foreign should not render a placeholder when over nothing","location":null,"status":"passed","title":"should not render a placeholder when over nothing"}],"endTime":1674657297167,"message":"","name":"/home/flakie/package/test/unit/view/droppable/placeholder.spec.js","startTime":1674657235571,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["is totally visible through frame","subject is smaller than frame","completely outside frame"],"failureMessages":[],"fullName":"is totally visible through frame subject is smaller than frame completely outside frame should return false if subject is outside frame on any side","location":null,"status":"passed","title":"should return false if subject is outside frame on any side"},{"ancestorTitles":["is totally visible through frame","subject is smaller than frame","contained in frame"],"failureMessages":[],"fullName":"is totally visible through frame subject is smaller than frame contained in frame should return true when subject is contained within frame","location":null,"status":"passed","title":"should return true when subject is contained within frame"},{"ancestorTitles":["is totally visible through frame","subject is smaller than frame","partially visible"],"failureMessages":[],"fullName":"is totally visible through frame subject is smaller than frame partially visible should return false if partially visible horizontally and vertically","location":null,"status":"passed","title":"should return false if partially visible horizontally and vertically"},{"ancestorTitles":["is totally visible through frame","subject is equal to frame"],"failureMessages":[],"fullName":"is totally visible through frame subject is equal to frame should return true when the frame is equal to the subject","location":null,"status":"passed","title":"should return true when the frame is equal to the subject"},{"ancestorTitles":["is totally visible through frame","subject is bigger than frame"],"failureMessages":[],"fullName":"is totally visible through frame subject is bigger than frame should return false if the subject has no overlap with the frame","location":null,"status":"passed","title":"should return false if the subject has no overlap with the frame"},{"ancestorTitles":["is totally visible through frame","subject is bigger than frame"],"failureMessages":[],"fullName":"is totally visible through frame subject is bigger than frame should return false if subject is bigger on every side","location":null,"status":"passed","title":"should return false if subject is bigger on every side"}],"endTime":1674657298772,"message":"","name":"/home/flakie/package/test/unit/state/visibility/is-totally-visible-through-frame.spec.js","startTime":1674657237769,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should use result for providing data and not the impact","location":null,"status":"passed","title":"should use result for providing data and not the impact"}],"endTime":1674657300764,"message":"","name":"/home/flakie/package/test/unit/view/connected-draggable/dropping-with-result-mismatch.spec.js","startTime":1674657286865,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should trigger an on drag start after in the next cycle","location":null,"status":"passed","title":"should trigger an on drag start after in the next cycle"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should queue a drag start if an action comes in while the timeout is pending","location":null,"status":"passed","title":"should queue a drag start if an action comes in while the timeout is pending"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should flush any pending responders if a drop occurs","location":null,"status":"passed","title":"should flush any pending responders if a drop occurs"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should work across multiple drags","location":null,"status":"passed","title":"should work across multiple drags"}],"endTime":1674657300970,"message":"","name":"/home/flakie/package/test/unit/state/middleware/responders/flushing.spec.js","startTime":1674657289070,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["get draggables inside a droppable"],"failureMessages":[],"fullName":"get draggables inside a droppable should only return dimensions that are inside a droppable","location":null,"status":"passed","title":"should only return dimensions that are inside a droppable"},{"ancestorTitles":["get draggables inside a droppable"],"failureMessages":[],"fullName":"get draggables inside a droppable should order the dimensions by index","location":null,"status":"passed","title":"should order the dimensions by index"},{"ancestorTitles":["get draggables inside a droppable"],"failureMessages":[],"fullName":"get draggables inside a droppable should memoize by the id and not the object reference","location":null,"status":"passed","title":"should memoize by the id and not the object reference"}],"endTime":1674657302475,"message":"","name":"/home/flakie/package/test/unit/state/get-draggables-inside-droppable.spec.js","startTime":1674657288276,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["with: mouse"],"failureMessages":[],"fullName":"with: mouse should not allow starting after the handle is unmounted","location":null,"status":"passed","title":"should not allow starting after the handle is unmounted"},{"ancestorTitles":["with: keyboard"],"failureMessages":[],"fullName":"with: keyboard should not allow starting after the handle is unmounted","location":null,"status":"passed","title":"should not allow starting after the handle is unmounted"},{"ancestorTitles":["with: touch"],"failureMessages":[],"fullName":"with: touch should not allow starting after the handle is unmounted","location":null,"status":"passed","title":"should not allow starting after the handle is unmounted"}],"endTime":1674657303364,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/shared-behaviours/cannot-start-when-unmounted.spec.js","startTime":1674657233277,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should not do anything if there is no destination change","location":null,"status":"passed","title":"should not do anything if there is no destination change"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should not do anything if there is no destination","location":null,"status":"passed","title":"should not do anything if there is no destination"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should add a placeholder if moving to a foreign list","location":null,"status":"passed","title":"should add a placeholder if moving to a foreign list"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should remove a placeholder if moving from a foreign list","location":null,"status":"passed","title":"should remove a placeholder if moving from a foreign list"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should not do anything if there is no destination change","location":null,"status":"passed","title":"should not do anything if there is no destination change"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should not do anything if there is no destination","location":null,"status":"passed","title":"should not do anything if there is no destination"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should add a placeholder if moving to a foreign list","location":null,"status":"passed","title":"should add a placeholder if moving to a foreign list"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should remove a placeholder if moving from a foreign list","location":null,"status":"passed","title":"should remove a placeholder if moving from a foreign list"}],"endTime":1674657304067,"message":"","name":"/home/flakie/package/test/unit/state/recompute-placeholders.spec.js","startTime":1674657293975,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should call the onBeforeDragStart before connected components are updated, and onDragStart after","location":null,"status":"passed","title":"should call the onBeforeDragStart before connected components are updated, and onDragStart after"}],"endTime":1674657304667,"message":"","name":"/home/flakie/package/test/unit/integration/reorder-render-sync.spec.js","startTime":1674657233670,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should return null when over nothing","location":null,"status":"passed","title":"should return null when over nothing"}],"endTime":1674657304766,"message":"","name":"/home/flakie/package/test/unit/state/get-droppable-over/is-over-nothing.spec.js","startTime":1674657297265,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should let a consumer know when a foreign list is being dragged over","location":null,"status":"passed","title":"should let a consumer know when a foreign list is being dragged over"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should update snapshot as dragging over changes","location":null,"status":"passed","title":"should update snapshot as dragging over changes"}],"endTime":1674657306074,"message":"","name":"/home/flakie/package/test/unit/view/droppable/pass-through-snapshot.spec.js","startTime":1674657237971,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should recollect scroll if requested","location":null,"status":"passed","title":"should recollect scroll if requested"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should throw if there is no drag occurring when a recollection is requested","location":null,"status":"passed","title":"should throw if there is no drag occurring when a recollection is requested"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should throw if there if recollecting from droppable that is not a scroll container","location":null,"status":"passed","title":"should throw if there if recollecting from droppable that is not a scroll container"}],"endTime":1674657306368,"message":"","name":"/home/flakie/package/test/unit/view/use-droppable-publisher/recollection.spec.js","startTime":1674657294469,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["with drop reason: DROP"],"failureMessages":[],"fullName":"with drop reason: DROP should fire a complete drop action is no drop animation is required","location":null,"status":"passed","title":"should fire a complete drop action is no drop animation is required"},{"ancestorTitles":["with drop reason: DROP"],"failureMessages":[],"fullName":"with drop reason: DROP should fire an animate drop action if a drop animation movement is required","location":null,"status":"passed","title":"should fire an animate drop action if a drop animation movement is required"},{"ancestorTitles":["with drop reason: DROP"],"failureMessages":[],"fullName":"with drop reason: DROP should fire an animate drop action if combining","location":null,"status":"passed","title":"should fire an animate drop action if combining"},{"ancestorTitles":["with drop reason: CANCEL"],"failureMessages":[],"fullName":"with drop reason: CANCEL should fire a complete drop action is no drop animation is required","location":null,"status":"passed","title":"should fire a complete drop action is no drop animation is required"},{"ancestorTitles":["with drop reason: CANCEL"],"failureMessages":[],"fullName":"with drop reason: CANCEL should fire an animate drop action if a drop animation movement is required","location":null,"status":"passed","title":"should fire an animate drop action if a drop animation movement is required"},{"ancestorTitles":["with drop reason: CANCEL"],"failureMessages":[],"fullName":"with drop reason: CANCEL should fire an animate drop action if combining","location":null,"status":"passed","title":"should fire an animate drop action if combining"}],"endTime":1674657307172,"message":"","name":"/home/flakie/package/test/unit/state/middleware/drop/conditionally-animate-drop.spec.js","startTime":1674657237866,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should call onDragUpdate if the position has changed on move","location":null,"status":"passed","title":"should call onDragUpdate if the position has changed on move"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not call onDragUpdate if there is no movement from the last update","location":null,"status":"passed","title":"should not call onDragUpdate if there is no movement from the last update"}],"endTime":1674657307777,"message":"","name":"/home/flakie/package/test/unit/state/middleware/responders/update.spec.js","startTime":1674657297271,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should not throw when unmounting","location":null,"status":"passed","title":"should not throw when unmounting"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should clean up any window event handlers","location":null,"status":"passed","title":"should clean up any window event handlers"}],"endTime":1674657307776,"message":"","name":"/home/flakie/package/test/unit/integration/drag-drop-context/unmount.spec.js","startTime":1674657239171,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["with: mouse"],"failureMessages":[],"fullName":"with: mouse should not start a drag from an SVG","location":null,"status":"passed","title":"should not start a drag from an SVG"},{"ancestorTitles":["with: mouse"],"failureMessages":[],"fullName":"with: mouse should allow an SVG within a draggable","location":null,"status":"passed","title":"should allow an SVG within a draggable"},{"ancestorTitles":["with: keyboard"],"failureMessages":[],"fullName":"with: keyboard should not start a drag from an SVG","location":null,"status":"passed","title":"should not start a drag from an SVG"},{"ancestorTitles":["with: keyboard"],"failureMessages":[],"fullName":"with: keyboard should allow an SVG within a draggable","location":null,"status":"passed","title":"should allow an SVG within a draggable"},{"ancestorTitles":["with: touch"],"failureMessages":[],"fullName":"with: touch should not start a drag from an SVG","location":null,"status":"passed","title":"should not start a drag from an SVG"},{"ancestorTitles":["with: touch"],"failureMessages":[],"fullName":"with: touch should allow an SVG within a draggable","location":null,"status":"passed","title":"should allow an SVG within a draggable"}],"endTime":1674657308972,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/shared-behaviours/no-dragging-svgs.spec.js","startTime":1674657237569,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should warn a consumer if they have not provided a ref","location":null,"status":"passed","title":"should warn a consumer if they have not provided a ref"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should throw a consumer if they have provided an SVGElement","location":null,"status":"passed","title":"should throw a consumer if they have provided an SVGElement"}],"endTime":1674657309575,"message":"","name":"/home/flakie/package/test/unit/view/droppable/inner-ref-validation.spec.js","startTime":1674657303375,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should displace by the droppable scroll","location":null,"status":"passed","title":"should displace by the droppable scroll"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should increase the subject by a placeholder","location":null,"status":"passed","title":"should increase the subject by a placeholder"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should clip the subject by a frame","location":null,"status":"passed","title":"should clip the subject by a frame"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should do nothing if there is no scroll, placeholder or frame","location":null,"status":"passed","title":"should do nothing if there is no scroll, placeholder or frame"}],"endTime":1674657310476,"message":"","name":"/home/flakie/package/test/unit/state/droppable/get-subject.spec.js","startTime":1674657302576,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on the vertical axis","moving forward to end of droppable"],"failureMessages":[],"fullName":"on the vertical axis moving forward to end of droppable should not scroll if before the start threshold","location":null,"status":"passed","title":"should not scroll if before the start threshold"},{"ancestorTitles":["on the vertical axis","moving forward to end of droppable"],"failureMessages":[],"fullName":"on the vertical axis moving forward to end of droppable should scroll if on the start threshold","location":null,"status":"passed","title":"should scroll if on the start threshold"},{"ancestorTitles":["on the vertical axis","moving forward to end of droppable"],"failureMessages":[],"fullName":"on the vertical axis moving forward to end of droppable should scroll if moving beyond the start threshold","location":null,"status":"passed","title":"should scroll if moving beyond the start threshold"},{"ancestorTitles":["on the vertical axis","moving forward to end of droppable"],"failureMessages":[],"fullName":"on the vertical axis moving forward to end of droppable should get faster the closer to the max speed point","location":null,"status":"passed","title":"should get faster the closer to the max speed point"},{"ancestorTitles":["on the vertical axis","moving forward to end of droppable"],"failureMessages":[],"fullName":"on the vertical axis moving forward to end of droppable should have the top speed at the max speed point","location":null,"status":"passed","title":"should have the top speed at the max speed point"},{"ancestorTitles":["on the vertical axis","moving forward to end of droppable"],"failureMessages":[],"fullName":"on the vertical axis moving forward to end of droppable should have the top speed when moving beyond the max speed point","location":null,"status":"passed","title":"should have the top speed when moving beyond the max speed point"},{"ancestorTitles":["on the vertical axis","moving forward to end of droppable"],"failureMessages":[],"fullName":"on the vertical axis moving forward to end of droppable should throttle multiple scrolls into a single animation frame","location":null,"status":"passed","title":"should throttle multiple scrolls into a single animation frame"},{"ancestorTitles":["on the vertical axis","moving backward to start of droppable"],"failureMessages":[],"fullName":"on the vertical axis moving backward to start of droppable should not scroll if before the start threshold","location":null,"status":"passed","title":"should not scroll if before the start threshold"},{"ancestorTitles":["on the vertical axis","moving backward to start of droppable"],"failureMessages":[],"fullName":"on the vertical axis moving backward to start of droppable should scroll if on the start threshold","location":null,"status":"passed","title":"should scroll if on the start threshold"},{"ancestorTitles":["on the vertical axis","moving backward to start of droppable"],"failureMessages":[],"fullName":"on the vertical axis moving backward to start of droppable should scroll if moving beyond the start threshold","location":null,"status":"passed","title":"should scroll if moving beyond the start threshold"},{"ancestorTitles":["on the vertical axis","moving backward to start of droppable"],"failureMessages":[],"fullName":"on the vertical axis moving backward to start of droppable should get faster the closer to the max speed point","location":null,"status":"passed","title":"should get faster the closer to the max speed point"},{"ancestorTitles":["on the vertical axis","moving backward to start of droppable"],"failureMessages":[],"fullName":"on the vertical axis moving backward to start of droppable should have the top speed at the max speed point","location":null,"status":"passed","title":"should have the top speed at the max speed point"},{"ancestorTitles":["on the vertical axis","moving backward to start of droppable"],"failureMessages":[],"fullName":"on the vertical axis moving backward to start of droppable should have the top speed when moving beyond the max speed point","location":null,"status":"passed","title":"should have the top speed when moving beyond the max speed point"},{"ancestorTitles":["on the vertical axis","moving backward to start of droppable"],"failureMessages":[],"fullName":"on the vertical axis moving backward to start of droppable should throttle multiple scrolls into a single animation frame","location":null,"status":"passed","title":"should throttle multiple scrolls into a single animation frame"},{"ancestorTitles":["on the horizontal axis","moving forward to end of droppable"],"failureMessages":[],"fullName":"on the horizontal axis moving forward to end of droppable should not scroll if before the start threshold","location":null,"status":"passed","title":"should not scroll if before the start threshold"},{"ancestorTitles":["on the horizontal axis","moving forward to end of droppable"],"failureMessages":[],"fullName":"on the horizontal axis moving forward to end of droppable should scroll if on the start threshold","location":null,"status":"passed","title":"should scroll if on the start threshold"},{"ancestorTitles":["on the horizontal axis","moving forward to end of droppable"],"failureMessages":[],"fullName":"on the horizontal axis moving forward to end of droppable should scroll if moving beyond the start threshold","location":null,"status":"passed","title":"should scroll if moving beyond the start threshold"},{"ancestorTitles":["on the horizontal axis","moving forward to end of droppable"],"failureMessages":[],"fullName":"on the horizontal axis moving forward to end of droppable should get faster the closer to the max speed point","location":null,"status":"passed","title":"should get faster the closer to the max speed point"},{"ancestorTitles":["on the horizontal axis","moving forward to end of droppable"],"failureMessages":[],"fullName":"on the horizontal axis moving forward to end of droppable should have the top speed at the max speed point","location":null,"status":"passed","title":"should have the top speed at the max speed point"},{"ancestorTitles":["on the horizontal axis","moving forward to end of droppable"],"failureMessages":[],"fullName":"on the horizontal axis moving forward to end of droppable should have the top speed when moving beyond the max speed point","location":null,"status":"passed","title":"should have the top speed when moving beyond the max speed point"},{"ancestorTitles":["on the horizontal axis","moving forward to end of droppable"],"failureMessages":[],"fullName":"on the horizontal axis moving forward to end of droppable should throttle multiple scrolls into a single animation frame","location":null,"status":"passed","title":"should throttle multiple scrolls into a single animation frame"},{"ancestorTitles":["on the horizontal axis","moving backward to start of droppable"],"failureMessages":[],"fullName":"on the horizontal axis moving backward to start of droppable should not scroll if before the start threshold","location":null,"status":"passed","title":"should not scroll if before the start threshold"},{"ancestorTitles":["on the horizontal axis","moving backward to start of droppable"],"failureMessages":[],"fullName":"on the horizontal axis moving backward to start of droppable should scroll if on the start threshold","location":null,"status":"passed","title":"should scroll if on the start threshold"},{"ancestorTitles":["on the horizontal axis","moving backward to start of droppable"],"failureMessages":[],"fullName":"on the horizontal axis moving backward to start of droppable should scroll if moving beyond the start threshold","location":null,"status":"passed","title":"should scroll if moving beyond the start threshold"},{"ancestorTitles":["on the horizontal axis","moving backward to start of droppable"],"failureMessages":[],"fullName":"on the horizontal axis moving backward to start of droppable should get faster the closer to the max speed point","location":null,"status":"passed","title":"should get faster the closer to the max speed point"},{"ancestorTitles":["on the horizontal axis","moving backward to start of droppable"],"failureMessages":[],"fullName":"on the horizontal axis moving backward to start of droppable should have the top speed at the max speed point","location":null,"status":"passed","title":"should have the top speed at the max speed point"},{"ancestorTitles":["on the horizontal axis","moving backward to start of droppable"],"failureMessages":[],"fullName":"on the horizontal axis moving backward to start of droppable should have the top speed when moving beyond the max speed point","location":null,"status":"passed","title":"should have the top speed when moving beyond the max speed point"},{"ancestorTitles":["on the horizontal axis","moving backward to start of droppable"],"failureMessages":[],"fullName":"on the horizontal axis moving backward to start of droppable should throttle multiple scrolls into a single animation frame","location":null,"status":"passed","title":"should throttle multiple scrolls into a single animation frame"}],"endTime":1674657311572,"message":"","name":"/home/flakie/package/test/unit/state/auto-scroll/fluid-scroller/droppable-scrolling.spec.js","startTime":1674657300770,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should not break memoization across selectors","location":null,"status":"passed","title":"should not break memoization across selectors"}],"endTime":1674657311869,"message":"","name":"/home/flakie/package/test/unit/view/connected-droppable/selector-isolation.spec.js","startTime":1674657300976,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should not break memoization across selectors","location":null,"status":"passed","title":"should not break memoization across selectors"}],"endTime":1674657312070,"message":"","name":"/home/flakie/package/test/unit/view/connected-draggable/selector-isolation.spec.js","startTime":1674657304869,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should convert a draggable list to a map","location":null,"status":"passed","title":"should convert a draggable list to a map"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should convert a droppable list to a map","location":null,"status":"passed","title":"should convert a droppable list to a map"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should convert a draggable map to a list","location":null,"status":"passed","title":"should convert a draggable map to a list"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should convert a droppable map to a list","location":null,"status":"passed","title":"should convert a droppable map to a list"}],"endTime":1674657313669,"message":"","name":"/home/flakie/package/test/unit/state/dimension-structures.spec.js","startTime":1674657304765,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should log a warning if items are added that do not have consecutive indexes","location":null,"status":"passed","title":"should log a warning if items are added that do not have consecutive indexes"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should log a warning if items are added have duplicate indexes","location":null,"status":"passed","title":"should log a warning if items are added have duplicate indexes"}],"endTime":1674657317172,"message":"","name":"/home/flakie/package/test/unit/state/middleware/validate-indexes.spec.js","startTime":1674657308367,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["closest scrollable","no closest scrollable"],"failureMessages":[],"fullName":"closest scrollable no closest scrollable should not have a closest scrollable if there is no closest scrollable","location":null,"status":"passed","title":"should not have a closest scrollable if there is no closest scrollable"},{"ancestorTitles":["closest scrollable","with a closest scrollable"],"failureMessages":[],"fullName":"closest scrollable with a closest scrollable should offset the frame client by the window scroll","location":null,"status":"passed","title":"should offset the frame client by the window scroll"},{"ancestorTitles":["closest scrollable","with a closest scrollable"],"failureMessages":[],"fullName":"closest scrollable with a closest scrollable should capture the frame information","location":null,"status":"passed","title":"should capture the frame information"},{"ancestorTitles":["closest scrollable","frame clipping"],"failureMessages":[],"fullName":"closest scrollable frame clipping should not clip the frame if requested not to","location":null,"status":"passed","title":"should not clip the frame if requested not to"},{"ancestorTitles":["closest scrollable","frame clipping","frame is the same size as the subject"],"failureMessages":[],"fullName":"closest scrollable frame clipping frame is the same size as the subject should not clip the subject","location":null,"status":"passed","title":"should not clip the subject"},{"ancestorTitles":["closest scrollable","frame clipping","frame is smaller than subject"],"failureMessages":[],"fullName":"closest scrollable frame clipping frame is smaller than subject should clip the subject to the size of the frame","location":null,"status":"passed","title":"should clip the subject to the size of the frame"},{"ancestorTitles":["closest scrollable","frame clipping","frame is larger than subject"],"failureMessages":[],"fullName":"closest scrollable frame clipping frame is larger than subject should return a clipped size that is equal to that of the subject","location":null,"status":"passed","title":"should return a clipped size that is equal to that of the subject"},{"ancestorTitles":["closest scrollable","frame clipping","subject clipped on one side by frame"],"failureMessages":[],"fullName":"closest scrollable frame clipping subject clipped on one side by frame should clip on all sides","location":null,"status":"passed","title":"should clip on all sides"}],"endTime":1674657317177,"message":"","name":"/home/flakie/package/test/unit/state/droppable/get-droppable.spec.js","startTime":1674657293274,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should render the child function when the parent renders","location":null,"status":"passed","title":"should render the child function when the parent renders"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should render the child function when the parent re-renders","location":null,"status":"passed","title":"should render the child function when the parent re-renders"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should render the child function when the parents props changes that cause a re-render","location":null,"status":"passed","title":"should render the child function when the parents props changes that cause a re-render"}],"endTime":1674657318671,"message":"","name":"/home/flakie/package/test/unit/view/connected-droppable/child-render-behaviour.spec.js","startTime":1674657299668,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["is partially visible through frame","subject is smaller than frame","completely outside frame"],"failureMessages":[],"fullName":"is partially visible through frame subject is smaller than frame completely outside frame should return false if subject is outside frame on any side","location":null,"status":"passed","title":"should return false if subject is outside frame on any side"},{"ancestorTitles":["is partially visible through frame","subject is smaller than frame","contained in frame"],"failureMessages":[],"fullName":"is partially visible through frame subject is smaller than frame contained in frame should return true when subject is contained within frame","location":null,"status":"passed","title":"should return true when subject is contained within frame"},{"ancestorTitles":["is partially visible through frame","subject is smaller than frame","partially visible"],"failureMessages":[],"fullName":"is partially visible through frame subject is smaller than frame partially visible should return true if partially visible horizontally and vertically","location":null,"status":"passed","title":"should return true if partially visible horizontally and vertically"},{"ancestorTitles":["is partially visible through frame","subject is equal to frame"],"failureMessages":[],"fullName":"is partially visible through frame subject is equal to frame should return true when the frame is equal to the subject","location":null,"status":"passed","title":"should return true when the frame is equal to the subject"},{"ancestorTitles":["is partially visible through frame","subject is bigger than frame"],"failureMessages":[],"fullName":"is partially visible through frame subject is bigger than frame should return false if the subject has no overlap with the frame","location":null,"status":"passed","title":"should return false if the subject has no overlap with the frame"},{"ancestorTitles":["is partially visible through frame","subject is bigger than frame"],"failureMessages":[],"fullName":"is partially visible through frame subject is bigger than frame should return true if subject is bigger on every side","location":null,"status":"passed","title":"should return true if subject is bigger on every side"},{"ancestorTitles":["is partially visible through frame","subject is bigger than frame","partially visible"],"failureMessages":[],"fullName":"is partially visible through frame subject is bigger than frame partially visible should return true if partially visible horizontally and vertically on any side","location":null,"status":"passed","title":"should return true if partially visible horizontally and vertically on any side"},{"ancestorTitles":["is partially visible through frame","subject is bigger than frame","partially visible"],"failureMessages":[],"fullName":"is partially visible through frame subject is bigger than frame partially visible should return false when only partially visible horizontally","location":null,"status":"passed","title":"should return false when only partially visible horizontally"},{"ancestorTitles":["is partially visible through frame","subject is bigger than frame","partially visible"],"failureMessages":[],"fullName":"is partially visible through frame subject is bigger than frame partially visible should return false when only partially visible vertically","location":null,"status":"passed","title":"should return false when only partially visible vertically"}],"endTime":1674657319172,"message":"","name":"/home/flakie/package/test/unit/state/visibility/is-partially-visible-through-frame.spec.js","startTime":1674657309675,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should not mount style tags until mounted","location":null,"status":"passed","title":"should not mount style tags until mounted"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should apply the resting dyanmic styles by default","location":null,"status":"passed","title":"should apply the resting dyanmic styles by default"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should apply the resting always styles by default","location":null,"status":"passed","title":"should apply the resting always styles by default"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should apply the dragging styles when asked","location":null,"status":"passed","title":"should apply the dragging styles when asked"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should apply the drop animating styles when asked","location":null,"status":"passed","title":"should apply the drop animating styles when asked"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should apply the user cancel styles when asked","location":null,"status":"passed","title":"should apply the user cancel styles when asked"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should remove the style tag from the head when unmounting","location":null,"status":"passed","title":"should remove the style tag from the head when unmounting"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should allow subsequent updates","location":null,"status":"passed","title":"should allow subsequent updates"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should insert nonce into tag attribute","location":null,"status":"passed","title":"should insert nonce into tag attribute"}],"endTime":1674657320668,"message":"","name":"/home/flakie/package/test/unit/view/style-marshal/style-marshal.spec.js","startTime":1674657309171,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should not allow pre drag actions when in a dragging phase","location":null,"status":"passed","title":"should not allow pre drag actions when in a dragging phase"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not allow drag actions after a drop","location":null,"status":"passed","title":"should not allow drag actions after a drop"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not allow drag actions after lock lost","location":null,"status":"passed","title":"should not allow drag actions after lock lost"}],"endTime":1674657323075,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/sensor-marshal/outdated-locks.spec.js","startTime":1674657304079,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["with: mouse"],"failureMessages":[],"fullName":"with: mouse should not start a drag if disabled","location":null,"status":"passed","title":"should not start a drag if disabled"},{"ancestorTitles":["with: keyboard"],"failureMessages":[],"fullName":"with: keyboard should not start a drag if disabled","location":null,"status":"passed","title":"should not start a drag if disabled"},{"ancestorTitles":["with: touch"],"failureMessages":[],"fullName":"with: touch should not start a drag if disabled","location":null,"status":"passed","title":"should not start a drag if disabled"}],"endTime":1674657323274,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/shared-behaviours/cannot-start-when-disabled.spec.js","startTime":1674657308371,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should align before the target","location":null,"status":"passed","title":"should align before the target"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should align after the target","location":null,"status":"passed","title":"should align after the target"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should move into the start of the context box of the target","location":null,"status":"passed","title":"should move into the start of the context box of the target"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should align before the target","location":null,"status":"passed","title":"should align before the target"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should align after the target","location":null,"status":"passed","title":"should align after the target"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should move into the start of the context box of the target","location":null,"status":"passed","title":"should move into the start of the context box of the target"}],"endTime":1674657325367,"message":"","name":"/home/flakie/package/test/unit/state/get-center-from-impact/move-relative-to.spec.js","startTime":1674657312466,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should register itself when mounting","location":null,"status":"passed","title":"should register itself when mounting"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should unregister itself when unmounting","location":null,"status":"passed","title":"should unregister itself when unmounting"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should update its registration when a descriptor property changes","location":null,"status":"passed","title":"should update its registration when a descriptor property changes"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not update its registration when a descriptor property does not change on an update","location":null,"status":"passed","title":"should not update its registration when a descriptor property does not change on an update"}],"endTime":1674657331374,"message":"","name":"/home/flakie/package/test/unit/view/use-droppable-publisher/registration.spec.js","startTime":1674657319666,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should not allow double lifting","location":null,"status":"passed","title":"should not allow double lifting"}],"endTime":1674657331666,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/sensor-marshal/no-double-lift.spec.js","startTime":1674657306968,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["in phase: DRAGGING"],"failureMessages":[],"fullName":"in phase: DRAGGING should move the dragging item to the current offset","location":null,"status":"passed","title":"should move the dragging item to the current offset"},{"ancestorTitles":["in phase: DRAGGING"],"failureMessages":[],"fullName":"in phase: DRAGGING should allow force control of drag animation","location":null,"status":"passed","title":"should allow force control of drag animation"},{"ancestorTitles":["in phase: DRAGGING"],"failureMessages":[],"fullName":"in phase: DRAGGING should indicate when over a droppable","location":null,"status":"passed","title":"should indicate when over a droppable"},{"ancestorTitles":["in phase: DRAGGING"],"failureMessages":[],"fullName":"in phase: DRAGGING should not break memoization on multiple calls to the same offset","location":null,"status":"passed","title":"should not break memoization on multiple calls to the same offset"},{"ancestorTitles":["in phase: DRAGGING"],"failureMessages":[],"fullName":"in phase: DRAGGING should break memoization on multiple calls if moving to a new offset","location":null,"status":"passed","title":"should break memoization on multiple calls if moving to a new offset"},{"ancestorTitles":["in phase: COLLECTING"],"failureMessages":[],"fullName":"in phase: COLLECTING should move the dragging item to the current offset","location":null,"status":"passed","title":"should move the dragging item to the current offset"},{"ancestorTitles":["in phase: COLLECTING"],"failureMessages":[],"fullName":"in phase: COLLECTING should allow force control of drag animation","location":null,"status":"passed","title":"should allow force control of drag animation"},{"ancestorTitles":["in phase: COLLECTING"],"failureMessages":[],"fullName":"in phase: COLLECTING should indicate when over a droppable","location":null,"status":"passed","title":"should indicate when over a droppable"},{"ancestorTitles":["in phase: COLLECTING"],"failureMessages":[],"fullName":"in phase: COLLECTING should not break memoization on multiple calls to the same offset","location":null,"status":"passed","title":"should not break memoization on multiple calls to the same offset"},{"ancestorTitles":["in phase: COLLECTING"],"failureMessages":[],"fullName":"in phase: COLLECTING should break memoization on multiple calls if moving to a new offset","location":null,"status":"passed","title":"should break memoization on multiple calls if moving to a new offset"},{"ancestorTitles":["in phase: DROP_PENDING"],"failureMessages":[],"fullName":"in phase: DROP_PENDING should move the dragging item to the current offset","location":null,"status":"passed","title":"should move the dragging item to the current offset"},{"ancestorTitles":["in phase: DROP_PENDING"],"failureMessages":[],"fullName":"in phase: DROP_PENDING should allow force control of drag animation","location":null,"status":"passed","title":"should allow force control of drag animation"},{"ancestorTitles":["in phase: DROP_PENDING"],"failureMessages":[],"fullName":"in phase: DROP_PENDING should indicate when over a droppable","location":null,"status":"passed","title":"should indicate when over a droppable"},{"ancestorTitles":["in phase: DROP_PENDING"],"failureMessages":[],"fullName":"in phase: DROP_PENDING should not break memoization on multiple calls to the same offset","location":null,"status":"passed","title":"should not break memoization on multiple calls to the same offset"},{"ancestorTitles":["in phase: DROP_PENDING"],"failureMessages":[],"fullName":"in phase: DROP_PENDING should break memoization on multiple calls if moving to a new offset","location":null,"status":"passed","title":"should break memoization on multiple calls if moving to a new offset"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not break memoization when moving between dragging phases","location":null,"status":"passed","title":"should not break memoization when moving between dragging phases"}],"endTime":1674657331971,"message":"","name":"/home/flakie/package/test/unit/view/connected-draggable/dragging.spec.js","startTime":1674657314373,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["draggable additions"],"failureMessages":[],"fullName":"draggable additions should collect and publish the draggables","location":null,"status":"passed","title":"should collect and publish the draggables"},{"ancestorTitles":["draggable additions"],"failureMessages":[],"fullName":"draggable additions should not do anything if trying to add a draggable that does not have the same type as the dragging item","location":null,"status":"passed","title":"should not do anything if trying to add a draggable that does not have the same type as the dragging item"},{"ancestorTitles":["draggable additions"],"failureMessages":[],"fullName":"draggable additions should order published draggables by their index","location":null,"status":"passed","title":"should order published draggables by their index"},{"ancestorTitles":["draggable additions"],"failureMessages":[],"fullName":"draggable additions should log a warning if trying to add or remove a draggable from a non-virtual list","location":null,"status":"passed","title":"should log a warning if trying to add or remove a draggable from a non-virtual list"},{"ancestorTitles":["draggable removals"],"failureMessages":[],"fullName":"draggable removals should publish a removal","location":null,"status":"passed","title":"should publish a removal"},{"ancestorTitles":["draggable removals"],"failureMessages":[],"fullName":"draggable removals should do nothing if tying to remove a draggable of a different type","location":null,"status":"passed","title":"should do nothing if tying to remove a draggable of a different type"},{"ancestorTitles":["draggable removals"],"failureMessages":[],"fullName":"draggable removals should do nothing if removing the critical draggable","location":null,"status":"passed","title":"should do nothing if removing the critical draggable"},{"ancestorTitles":["droppables"],"failureMessages":[],"fullName":"droppables should not do anything if a droppable is added","location":null,"status":"passed","title":"should not do anything if a droppable is added"},{"ancestorTitles":["droppables"],"failureMessages":[],"fullName":"droppables should not do anything if a droppable is removed","location":null,"status":"passed","title":"should not do anything if a droppable is removed"},{"ancestorTitles":["droppables"],"failureMessages":[],"fullName":"droppables should recollect the scroll from droppables that had draggable additions","location":null,"status":"passed","title":"should recollect the scroll from droppables that had draggable additions"},{"ancestorTitles":["droppables"],"failureMessages":[],"fullName":"droppables should recollect the scroll from droppables that had draggable removals","location":null,"status":"passed","title":"should recollect the scroll from droppables that had draggable removals"},{"ancestorTitles":["cancelling mid publish"],"failureMessages":[],"fullName":"cancelling mid publish should cancel any pending collections","location":null,"status":"passed","title":"should cancel any pending collections"},{"ancestorTitles":["subsequent"],"failureMessages":[],"fullName":"subsequent should allow subsequent publishes in the same drag","location":null,"status":"passed","title":"should allow subsequent publishes in the same drag"},{"ancestorTitles":["subsequent"],"failureMessages":[],"fullName":"subsequent should allow subsequent publishes between drags","location":null,"status":"passed","title":"should allow subsequent publishes between drags"}],"endTime":1674657332067,"message":"","name":"/home/flakie/package/test/unit/view/dimension-marshal/publish-while-dragging.spec.js","startTime":1674657317668,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should displace items when moving backwards past their bottom edge","location":null,"status":"passed","title":"should displace items when moving backwards past their bottom edge"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should end displacement if moving forward over the displaced center","location":null,"status":"passed","title":"should end displacement if moving forward over the displaced center"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should displace items when moving backwards past their bottom edge","location":null,"status":"passed","title":"should displace items when moving backwards past their bottom edge"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should end displacement if moving forward over the displaced center","location":null,"status":"passed","title":"should end displacement if moving forward over the displaced center"}],"endTime":1674657334766,"message":"","name":"/home/flakie/package/test/unit/state/get-drag-impact/reorder/over-foreign-list/did-not-start-displaced.spec.js","startTime":1674657318676,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["home list","was being dragged over"],"failureMessages":[],"fullName":"home list was being dragged over should not break memoization from a reorder","location":null,"status":"passed","title":"should not break memoization from a reorder"},{"ancestorTitles":["home list","was being dragged over"],"failureMessages":[],"fullName":"home list was being dragged over should not break memoization from a combine","location":null,"status":"passed","title":"should not break memoization from a combine"},{"ancestorTitles":["home list","was being dragged over"],"failureMessages":[],"fullName":"home list was being dragged over should use the completed.result and not the completed.impact for determining if over","location":null,"status":"passed","title":"should use the completed.result and not the completed.impact for determining if over"},{"ancestorTitles":["home list","was not being dragged over"],"failureMessages":[],"fullName":"home list was not being dragged over should maintain a placeholder and not break memoization","location":null,"status":"passed","title":"should maintain a placeholder and not break memoization"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should return the dragging props for every dragging phase for a foreign list","location":null,"status":"passed","title":"should return the dragging props for every dragging phase for a foreign list"}],"endTime":1674657335271,"message":"","name":"/home/flakie/package/test/unit/view/connected-droppable/dropping.spec.js","startTime":1674657317774,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should return the droppableId of a reorder impact","location":null,"status":"passed","title":"should return the droppableId of a reorder impact"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should return the droppableId from a merge impact","location":null,"status":"passed","title":"should return the droppableId from a merge impact"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should return null when there is no destination or merge impact","location":null,"status":"passed","title":"should return null when there is no destination or merge impact"}],"endTime":1674657335375,"message":"","name":"/home/flakie/package/test/unit/state/droppable/what-is-dragged-over.spec.js","startTime":1674657323375,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should move up when pressing the up arrow","location":null,"status":"passed","title":"should move up when pressing the up arrow"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should move down when pressing the down arrow","location":null,"status":"passed","title":"should move down when pressing the down arrow"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should move right when pressing the right arrow","location":null,"status":"passed","title":"should move right when pressing the right arrow"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should move left when pressing the left arrow","location":null,"status":"passed","title":"should move left when pressing the left arrow"}],"endTime":1674657335772,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/keyboard-sensor/directional-movement.spec.js","startTime":1674657307570,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should prevent the default keyboard action when lifting","location":null,"status":"passed","title":"should prevent the default keyboard action when lifting"}],"endTime":1674657336276,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/keyboard-sensor/starting-a-drag.spec.js","startTime":1674657320674,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should move to a provided offset","location":null,"status":"passed","title":"should move to a provided offset"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should pass on the snapshot","location":null,"status":"passed","title":"should pass on the snapshot"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should animate movements when in snap mode","location":null,"status":"passed","title":"should animate movements when in snap mode"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should update the snapshot and opacity when combining with another item","location":null,"status":"passed","title":"should update the snapshot and opacity when combining with another item"}],"endTime":1674657336570,"message":"","name":"/home/flakie/package/test/unit/integration/draggable/dragging.spec.js","startTime":1674657306271,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["for responder: onDragStart"],"failureMessages":[],"fullName":"for responder: onDragStart should announce with the default message if no responder is provided","location":null,"status":"passed","title":"should announce with the default message if no responder is provided"},{"ancestorTitles":["for responder: onDragStart"],"failureMessages":[],"fullName":"for responder: onDragStart should announce with the default message if the responder does not announce","location":null,"status":"passed","title":"should announce with the default message if the responder does not announce"},{"ancestorTitles":["for responder: onDragStart"],"failureMessages":[],"fullName":"for responder: onDragStart should not announce twice if the responder makes an announcement","location":null,"status":"passed","title":"should not announce twice if the responder makes an announcement"},{"ancestorTitles":["for responder: onDragStart"],"failureMessages":[],"fullName":"for responder: onDragStart should prevent async announcements","location":null,"status":"passed","title":"should prevent async announcements"},{"ancestorTitles":["for responder: onDragStart"],"failureMessages":[],"fullName":"for responder: onDragStart should prevent multiple announcement calls from a consumer","location":null,"status":"passed","title":"should prevent multiple announcement calls from a consumer"},{"ancestorTitles":["for responder: onDragUpdate: a reorder update"],"failureMessages":[],"fullName":"for responder: onDragUpdate: a reorder update should announce with the default message if no responder is provided","location":null,"status":"passed","title":"should announce with the default message if no responder is provided"},{"ancestorTitles":["for responder: onDragUpdate: a reorder update"],"failureMessages":[],"fullName":"for responder: onDragUpdate: a reorder update should announce with the default message if the responder does not announce","location":null,"status":"passed","title":"should announce with the default message if the responder does not announce"},{"ancestorTitles":["for responder: onDragUpdate: a reorder update"],"failureMessages":[],"fullName":"for responder: onDragUpdate: a reorder update should not announce twice if the responder makes an announcement","location":null,"status":"passed","title":"should not announce twice if the responder makes an announcement"},{"ancestorTitles":["for responder: onDragUpdate: a reorder update"],"failureMessages":[],"fullName":"for responder: onDragUpdate: a reorder update should prevent async announcements","location":null,"status":"passed","title":"should prevent async announcements"},{"ancestorTitles":["for responder: onDragUpdate: a reorder update"],"failureMessages":[],"fullName":"for responder: onDragUpdate: a reorder update should prevent multiple announcement calls from a consumer","location":null,"status":"passed","title":"should prevent multiple announcement calls from a consumer"},{"ancestorTitles":["for responder: onDragUpdate: a combine update"],"failureMessages":[],"fullName":"for responder: onDragUpdate: a combine update should announce with the default message if no responder is provided","location":null,"status":"passed","title":"should announce with the default message if no responder is provided"},{"ancestorTitles":["for responder: onDragUpdate: a combine update"],"failureMessages":[],"fullName":"for responder: onDragUpdate: a combine update should announce with the default message if the responder does not announce","location":null,"status":"passed","title":"should announce with the default message if the responder does not announce"},{"ancestorTitles":["for responder: onDragUpdate: a combine update"],"failureMessages":[],"fullName":"for responder: onDragUpdate: a combine update should not announce twice if the responder makes an announcement","location":null,"status":"passed","title":"should not announce twice if the responder makes an announcement"},{"ancestorTitles":["for responder: onDragUpdate: a combine update"],"failureMessages":[],"fullName":"for responder: onDragUpdate: a combine update should prevent async announcements","location":null,"status":"passed","title":"should prevent async announcements"},{"ancestorTitles":["for responder: onDragUpdate: a combine update"],"failureMessages":[],"fullName":"for responder: onDragUpdate: a combine update should prevent multiple announcement calls from a consumer","location":null,"status":"passed","title":"should prevent multiple announcement calls from a consumer"},{"ancestorTitles":["for responder: onDragEnd"],"failureMessages":[],"fullName":"for responder: onDragEnd should announce with the default message if no responder is provided","location":null,"status":"passed","title":"should announce with the default message if no responder is provided"},{"ancestorTitles":["for responder: onDragEnd"],"failureMessages":[],"fullName":"for responder: onDragEnd should announce with the default message if the responder does not announce","location":null,"status":"passed","title":"should announce with the default message if the responder does not announce"},{"ancestorTitles":["for responder: onDragEnd"],"failureMessages":[],"fullName":"for responder: onDragEnd should not announce twice if the responder makes an announcement","location":null,"status":"passed","title":"should not announce twice if the responder makes an announcement"},{"ancestorTitles":["for responder: onDragEnd"],"failureMessages":[],"fullName":"for responder: onDragEnd should prevent async announcements","location":null,"status":"passed","title":"should prevent async announcements"},{"ancestorTitles":["for responder: onDragEnd"],"failureMessages":[],"fullName":"for responder: onDragEnd should prevent multiple announcement calls from a consumer","location":null,"status":"passed","title":"should prevent multiple announcement calls from a consumer"}],"endTime":1674657337266,"message":"","name":"/home/flakie/package/test/unit/state/middleware/responders/announcements.spec.js","startTime":1674657323270,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should start dragging after a long press","location":null,"status":"passed","title":"should start dragging after a long press"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not start dragging if finished before a long press","location":null,"status":"passed","title":"should not start dragging if finished before a long press"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should allow a false start","location":null,"status":"passed","title":"should allow a false start"}],"endTime":1674657337969,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/touch-sensor/starting-a-drag.spec.js","startTime":1674657310771,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should render children","location":null,"status":"passed","title":"should render children"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should allow children not to be rendered","location":null,"status":"passed","title":"should allow children not to be rendered"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should allow children not to be rendered after a close animation","location":null,"status":"passed","title":"should allow children not to be rendered after a close animation"}],"endTime":1674657338467,"message":"","name":"/home/flakie/package/test/unit/view/animate-in-out/child-rendering.spec.js","startTime":1674657332174,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should unwind window scroll changes","location":null,"status":"passed","title":"should unwind window scroll changes"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should account for manual offsets","location":null,"status":"passed","title":"should account for manual offsets"}],"endTime":1674657338476,"message":"","name":"/home/flakie/package/test/unit/state/get-center-from-impact/get-client-from-page-border-box-center.spec.js","startTime":1674657334778,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should allow children not to be rendered (no animation allowed)","location":null,"status":"passed","title":"should allow children not to be rendered (no animation allowed)"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should allow children not to be rendered (even when animation is allowed)","location":null,"status":"passed","title":"should allow children not to be rendered (even when animation is allowed)"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should pass data through to children","location":null,"status":"passed","title":"should pass data through to children"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should open instantly if required","location":null,"status":"passed","title":"should open instantly if required"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should animate open if requested","location":null,"status":"passed","title":"should animate open if requested"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should close instantly if required","location":null,"status":"passed","title":"should close instantly if required"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should animate closed if required","location":null,"status":"passed","title":"should animate closed if required"}],"endTime":1674657339074,"message":"","name":"/home/flakie/package/test/unit/view/animate-in-out/animate-in-out.spec.js","startTime":1674657332171,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["with: mouse"],"failureMessages":[],"fullName":"with: mouse should remove all window listeners when unmounting","location":null,"status":"passed","title":"should remove all window listeners when unmounting"},{"ancestorTitles":["with: mouse"],"failureMessages":[],"fullName":"with: mouse should remove all window listeners when unmounting mid drag","location":null,"status":"passed","title":"should remove all window listeners when unmounting mid drag"},{"ancestorTitles":["with: keyboard"],"failureMessages":[],"fullName":"with: keyboard should remove all window listeners when unmounting","location":null,"status":"passed","title":"should remove all window listeners when unmounting"},{"ancestorTitles":["with: keyboard"],"failureMessages":[],"fullName":"with: keyboard should remove all window listeners when unmounting mid drag","location":null,"status":"passed","title":"should remove all window listeners when unmounting mid drag"},{"ancestorTitles":["with: touch"],"failureMessages":[],"fullName":"with: touch should remove all window listeners when unmounting","location":null,"status":"passed","title":"should remove all window listeners when unmounting"},{"ancestorTitles":["with: touch"],"failureMessages":[],"fullName":"with: touch should remove all window listeners when unmounting mid drag","location":null,"status":"passed","title":"should remove all window listeners when unmounting mid drag"}],"endTime":1674657339266,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/shared-behaviours/cleanup.spec.js","startTime":1674657311672,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should account for any scroll in the droppable being dropped into (into foreign list)","location":null,"status":"passed","title":"should account for any scroll in the droppable being dropped into (into foreign list)"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should account for any scroll in the droppable being dropped into (into foreign list)","location":null,"status":"passed","title":"should account for any scroll in the droppable being dropped into (into foreign list)"}],"endTime":1674657339376,"message":"","name":"/home/flakie/package/test/unit/state/get-center-from-impact/get-page-border-box-center/combine/with-droppable-scroll.spec.js","startTime":1674657335968,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should not to anything if there is not target (can happen if invisible)","location":null,"status":"passed","title":"should not to anything if there is not target (can happen if invisible)"},{"ancestorTitles":["on vertical axis","moving back into original index"],"failureMessages":[],"fullName":"on vertical axis moving back into original index should return a home impact with the original location","location":null,"status":"passed","title":"should return a home impact with the original location"},{"ancestorTitles":["on vertical axis","moving before the original index"],"failureMessages":[],"fullName":"on vertical axis moving before the original index should move the everything after the target index forward","location":null,"status":"passed","title":"should move the everything after the target index forward"},{"ancestorTitles":["on vertical axis","moving after the original index"],"failureMessages":[],"fullName":"on vertical axis moving after the original index should move the everything from the target index to the original index forward","location":null,"status":"passed","title":"should move the everything from the target index to the original index forward"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should not to anything if there is not target (can happen if invisible)","location":null,"status":"passed","title":"should not to anything if there is not target (can happen if invisible)"},{"ancestorTitles":["on horizontal axis","moving back into original index"],"failureMessages":[],"fullName":"on horizontal axis moving back into original index should return a home impact with the original location","location":null,"status":"passed","title":"should return a home impact with the original location"},{"ancestorTitles":["on horizontal axis","moving before the original index"],"failureMessages":[],"fullName":"on horizontal axis moving before the original index should move the everything after the target index forward","location":null,"status":"passed","title":"should move the everything after the target index forward"},{"ancestorTitles":["on horizontal axis","moving after the original index"],"failureMessages":[],"fullName":"on horizontal axis moving after the original index should move the everything from the target index to the original index forward","location":null,"status":"passed","title":"should move the everything from the target index to the original index forward"}],"endTime":1674657342068,"message":"","name":"/home/flakie/package/test/unit/state/move-in-direction/move-cross-axis/move-to-new-droppable/to-home-list.spec.js","startTime":1674657331965,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["is partially visible","viewport","without changes in droppable scroll"],"failureMessages":[],"fullName":"is partially visible viewport without changes in droppable scroll should return false if the item is not in the viewport","location":null,"status":"passed","title":"should return false if the item is not in the viewport"},{"ancestorTitles":["is partially visible","viewport","without changes in droppable scroll"],"failureMessages":[],"fullName":"is partially visible viewport without changes in droppable scroll should return true if item takes up entire viewport","location":null,"status":"passed","title":"should return true if item takes up entire viewport"},{"ancestorTitles":["is partially visible","viewport","without changes in droppable scroll"],"failureMessages":[],"fullName":"is partially visible viewport without changes in droppable scroll should return true if the item is totally visible in the viewport","location":null,"status":"passed","title":"should return true if the item is totally visible in the viewport"},{"ancestorTitles":["is partially visible","viewport","without changes in droppable scroll"],"failureMessages":[],"fullName":"is partially visible viewport without changes in droppable scroll should return true if the item is partially visible in the viewport","location":null,"status":"passed","title":"should return true if the item is partially visible in the viewport"},{"ancestorTitles":["is partially visible","viewport","with changes in droppable scroll","originally invisible but now invisible"],"failureMessages":[],"fullName":"is partially visible viewport with changes in droppable scroll originally invisible but now invisible should take into account the droppable scroll when detecting visibility","location":null,"status":"passed","title":"should take into account the droppable scroll when detecting visibility"},{"ancestorTitles":["is partially visible","viewport","with changes in droppable scroll","originally visible but now visible"],"failureMessages":[],"fullName":"is partially visible viewport with changes in droppable scroll originally visible but now visible should take into account the droppable scroll when detecting visibility","location":null,"status":"passed","title":"should take into account the droppable scroll when detecting visibility"},{"ancestorTitles":["is partially visible","droppable","without changes in droppable scroll"],"failureMessages":[],"fullName":"is partially visible droppable without changes in droppable scroll should return false if outside the droppable","location":null,"status":"passed","title":"should return false if outside the droppable"},{"ancestorTitles":["is partially visible","droppable","without changes in droppable scroll"],"failureMessages":[],"fullName":"is partially visible droppable without changes in droppable scroll should return true if the target is bigger than the droppable","location":null,"status":"passed","title":"should return true if the target is bigger than the droppable"},{"ancestorTitles":["is partially visible","droppable","without changes in droppable scroll"],"failureMessages":[],"fullName":"is partially visible droppable without changes in droppable scroll should return true if the same size of the droppable","location":null,"status":"passed","title":"should return true if the same size of the droppable"},{"ancestorTitles":["is partially visible","droppable","without changes in droppable scroll"],"failureMessages":[],"fullName":"is partially visible droppable without changes in droppable scroll should return true if within the droppable","location":null,"status":"passed","title":"should return true if within the droppable"},{"ancestorTitles":["is partially visible","droppable","without changes in droppable scroll"],"failureMessages":[],"fullName":"is partially visible droppable without changes in droppable scroll should return true if partially within the droppable","location":null,"status":"passed","title":"should return true if partially within the droppable"},{"ancestorTitles":["is partially visible","droppable","without changes in droppable scroll"],"failureMessages":[],"fullName":"is partially visible droppable without changes in droppable scroll should return false if falling on clipped area of droppable","location":null,"status":"passed","title":"should return false if falling on clipped area of droppable"},{"ancestorTitles":["is partially visible","droppable","with changes in droppable scroll","originally invisible but now invisible"],"failureMessages":[],"fullName":"is partially visible droppable with changes in droppable scroll originally invisible but now invisible should take into account the droppable scroll when detecting visibility","location":null,"status":"passed","title":"should take into account the droppable scroll when detecting visibility"},{"ancestorTitles":["is partially visible","droppable","with changes in droppable scroll","originally visible but now visible"],"failureMessages":[],"fullName":"is partially visible droppable with changes in droppable scroll originally visible but now visible should take into account the droppable scroll when detecting visibility","location":null,"status":"passed","title":"should take into account the droppable scroll when detecting visibility"},{"ancestorTitles":["is partially visible","droppable","with changes in droppable scroll"],"failureMessages":[],"fullName":"is partially visible droppable with changes in droppable scroll should not consider droppable scroll changes if asked to ignore them","location":null,"status":"passed","title":"should not consider droppable scroll changes if asked to ignore them"},{"ancestorTitles":["is partially visible","droppable","with invisible subject"],"failureMessages":[],"fullName":"is partially visible droppable with invisible subject should return false when subject is totally invisible","location":null,"status":"passed","title":"should return false when subject is totally invisible"},{"ancestorTitles":["is partially visible","viewport + droppable"],"failureMessages":[],"fullName":"is partially visible viewport + droppable should return true if visible in the viewport and the droppable","location":null,"status":"passed","title":"should return true if visible in the viewport and the droppable"},{"ancestorTitles":["is partially visible","viewport + droppable"],"failureMessages":[],"fullName":"is partially visible viewport + droppable should return false if not visible in the droppable even if visible in the viewport","location":null,"status":"passed","title":"should return false if not visible in the droppable even if visible in the viewport"},{"ancestorTitles":["is partially visible","viewport + droppable"],"failureMessages":[],"fullName":"is partially visible viewport + droppable should return false if not visible in the viewport even if visible in the droppable","location":null,"status":"passed","title":"should return false if not visible in the viewport even if visible in the droppable"}],"endTime":1674657342266,"message":"","name":"/home/flakie/package/test/unit/state/visibility/is-partially-visible.spec.js","startTime":1674657336470,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should opt of a context menu","location":null,"status":"passed","title":"should opt of a context menu"}],"endTime":1674657342372,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/touch-sensor/context-menu-opt-out.spec.js","startTime":1674657331780,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should do not modify the dimensions when nothing has changed","location":null,"status":"passed","title":"should do not modify the dimensions when nothing has changed"}],"endTime":1674657343967,"message":"","name":"/home/flakie/package/test/unit/state/publish-while-dragging/nothing-changed.spec.js","startTime":1674657335767,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should log a warning to the console","location":null,"status":"passed","title":"should log a warning to the console"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not log a warning if warnings are disabled","location":null,"status":"passed","title":"should not log a warning if warnings are disabled"}],"endTime":1674657345572,"message":"","name":"/home/flakie/package/test/unit/dev-warning.spec.js","startTime":1674657337370,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should hit when dragging cross axis end edge is over the list center","location":null,"status":"passed","title":"should hit when dragging cross axis end edge is over the list center"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should hit when dragging cross axis start edge is over the list center","location":null,"status":"passed","title":"should hit when dragging cross axis start edge is over the list center"}],"endTime":1674657348066,"message":"","name":"/home/flakie/package/test/unit/state/get-droppable-over/item-edge-is-over-list-center.spec.js","startTime":1674657338581,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should throw an error if trying to add a placeholder to a home list","location":null,"status":"passed","title":"should throw an error if trying to add a placeholder to a home list"},{"ancestorTitles":["on vertical axis","without frame","adding placeholder"],"failureMessages":[],"fullName":"on vertical axis without frame adding placeholder should not grow the subject if not required","location":null,"status":"passed","title":"should not grow the subject if not required"},{"ancestorTitles":["on vertical axis","without frame","adding placeholder"],"failureMessages":[],"fullName":"on vertical axis without frame adding placeholder should grow the subject if required","location":null,"status":"passed","title":"should grow the subject if required"},{"ancestorTitles":["on vertical axis","without frame"],"failureMessages":[],"fullName":"on vertical axis without frame should restore the subject to its original size when placeholder is no longer needed","location":null,"status":"passed","title":"should restore the subject to its original size when placeholder is no longer needed"},{"ancestorTitles":["on vertical axis","with frame"],"failureMessages":[],"fullName":"on vertical axis with frame should not grow the subject if not required","location":null,"status":"passed","title":"should not grow the subject if not required"},{"ancestorTitles":["on vertical axis","with frame"],"failureMessages":[],"fullName":"on vertical axis with frame should grow the subject if required","location":null,"status":"passed","title":"should grow the subject if required"},{"ancestorTitles":["on vertical axis","with frame"],"failureMessages":[],"fullName":"on vertical axis with frame should restore the original frame when placeholder is no longer needed","location":null,"status":"passed","title":"should restore the original frame when placeholder is no longer needed"},{"ancestorTitles":["on vertical axis","virtual list"],"failureMessages":[],"fullName":"on vertical axis virtual list should always grow the subject required","location":null,"status":"passed","title":"should always grow the subject required"},{"ancestorTitles":["on vertical axis","virtual list"],"failureMessages":[],"fullName":"on vertical axis virtual list should restore the original frame when placeholder is no longer needed","location":null,"status":"passed","title":"should restore the original frame when placeholder is no longer needed"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should throw an error if trying to add a placeholder to a home list","location":null,"status":"passed","title":"should throw an error if trying to add a placeholder to a home list"},{"ancestorTitles":["on horizontal axis","without frame","adding placeholder"],"failureMessages":[],"fullName":"on horizontal axis without frame adding placeholder should not grow the subject if not required","location":null,"status":"passed","title":"should not grow the subject if not required"},{"ancestorTitles":["on horizontal axis","without frame","adding placeholder"],"failureMessages":[],"fullName":"on horizontal axis without frame adding placeholder should grow the subject if required","location":null,"status":"passed","title":"should grow the subject if required"},{"ancestorTitles":["on horizontal axis","without frame"],"failureMessages":[],"fullName":"on horizontal axis without frame should restore the subject to its original size when placeholder is no longer needed","location":null,"status":"passed","title":"should restore the subject to its original size when placeholder is no longer needed"},{"ancestorTitles":["on horizontal axis","with frame"],"failureMessages":[],"fullName":"on horizontal axis with frame should not grow the subject if not required","location":null,"status":"passed","title":"should not grow the subject if not required"},{"ancestorTitles":["on horizontal axis","with frame"],"failureMessages":[],"fullName":"on horizontal axis with frame should grow the subject if required","location":null,"status":"passed","title":"should grow the subject if required"},{"ancestorTitles":["on horizontal axis","with frame"],"failureMessages":[],"fullName":"on horizontal axis with frame should restore the original frame when placeholder is no longer needed","location":null,"status":"passed","title":"should restore the original frame when placeholder is no longer needed"},{"ancestorTitles":["on horizontal axis","virtual list"],"failureMessages":[],"fullName":"on horizontal axis virtual list should always grow the subject required","location":null,"status":"passed","title":"should always grow the subject required"},{"ancestorTitles":["on horizontal axis","virtual list"],"failureMessages":[],"fullName":"on horizontal axis virtual list should restore the original frame when placeholder is no longer needed","location":null,"status":"passed","title":"should restore the original frame when placeholder is no longer needed"}],"endTime":1674657348068,"message":"","name":"/home/flakie/package/test/unit/state/droppable/with-placeholder.spec.js","startTime":1674657339372,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should move out of the way when requested","location":null,"status":"passed","title":"should move out of the way when requested"}],"endTime":1674657348770,"message":"","name":"/home/flakie/package/test/unit/integration/draggable/moving-out-of-the-way.spec.js","startTime":1674657337975,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should start a drag after sufficient movement","location":null,"status":"passed","title":"should start a drag after sufficient movement"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should allow standard click events","location":null,"status":"passed","title":"should allow standard click events"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not call preventDefault on mouse movements while we are not sure if a drag is starting","location":null,"status":"passed","title":"should not call preventDefault on mouse movements while we are not sure if a drag is starting"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should call preventDefault on the initial mousedown event to prevent the element gaining focus","location":null,"status":"passed","title":"should call preventDefault on the initial mousedown event to prevent the element gaining focus"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should allow multiple false starts","location":null,"status":"passed","title":"should allow multiple false starts"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not start a drag if there was too little mouse movement while mouse was pressed","location":null,"status":"passed","title":"should not start a drag if there was too little mouse movement while mouse was pressed"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not start a drag if not using the primary mouse button","location":null,"status":"passed","title":"should not start a drag if not using the primary mouse button"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not start a drag if a modifier key was used while pressing the mouse down","location":null,"status":"passed","title":"should not start a drag if a modifier key was used while pressing the mouse down"}],"endTime":1674657349568,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/mouse-sensor/starting-a-dragging.spec.js","startTime":1674657325377,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should allow an exclusive lock for drag actions","location":null,"status":"passed","title":"should allow an exclusive lock for drag actions"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should allow a lock to be released","location":null,"status":"passed","title":"should allow a lock to be released"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not allow a sensor to obtain a on a dropping item, but can claim one on something else while dragging","location":null,"status":"passed","title":"should not allow a sensor to obtain a on a dropping item, but can claim one on something else while dragging"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should release a lock when aborting a pre drag","location":null,"status":"passed","title":"should release a lock when aborting a pre drag"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should release a lock when cancelling or dropping a drag","location":null,"status":"passed","title":"should release a lock when cancelling or dropping a drag"}],"endTime":1674657349769,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/sensor-marshal/obtaining-lock.spec.js","startTime":1674657336576,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should account for the scroll of the droppable you are over when reordering","location":null,"status":"passed","title":"should account for the scroll of the droppable you are over when reordering"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should account for the scroll of the droppable you are over when combining","location":null,"status":"passed","title":"should account for the scroll of the droppable you are over when combining"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should account for any changes in the window scroll","location":null,"status":"passed","title":"should account for any changes in the window scroll"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should account for the scroll of the droppable you are over when reordering","location":null,"status":"passed","title":"should account for the scroll of the droppable you are over when reordering"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should account for the scroll of the droppable you are over when combining","location":null,"status":"passed","title":"should account for the scroll of the droppable you are over when combining"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should account for any changes in the window scroll","location":null,"status":"passed","title":"should account for any changes in the window scroll"}],"endTime":1674657351063,"message":"","name":"/home/flakie/package/test/unit/state/get-center-from-impact/get-client-border-box-center.spec.js","startTime":1674657342468,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should use the fluid scroller when in fluid mode","location":null,"status":"passed","title":"should use the fluid scroller when in fluid mode"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should use the jump scroller when in SNAP mode and there is a jumpScrollerRequest","location":null,"status":"passed","title":"should use the jump scroller when in SNAP mode and there is a jumpScrollerRequest"}],"endTime":1674657351164,"message":"","name":"/home/flakie/package/test/unit/state/auto-scroll/choosing-the-right-scroller.spec.js","startTime":1674657339370,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should allow registration","location":null,"status":"passed","title":"should allow registration"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should allow unregistration","location":null,"status":"passed","title":"should allow unregistration"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should allow for entry overwriting","location":null,"status":"passed","title":"should allow for entry overwriting"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not unregister with an outdated uniqueId","location":null,"status":"passed","title":"should not unregister with an outdated uniqueId"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should allow unregistrations when there is no entry","location":null,"status":"passed","title":"should allow unregistrations when there is no entry"}],"endTime":1674657352165,"message":"","name":"/home/flakie/package/test/unit/state/registry/droppable-registration.spec.js","startTime":1674657342375,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should trigger a drop on a dynamic publish if a drop pending is waiting","location":null,"status":"passed","title":"should trigger a drop on a dynamic publish if a drop pending is waiting"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not trigger a drop on a publish if a drop is not pending","location":null,"status":"passed","title":"should not trigger a drop on a publish if a drop is not pending"}],"endTime":1674657353971,"message":"","name":"/home/flakie/package/test/unit/state/middleware/pending-drop.spec.js","startTime":1674657344276,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis","closest displaced started displaced"],"failureMessages":[],"fullName":"on vertical axis closest displaced started displaced should go before the visible (displaced) position of the item","location":null,"status":"passed","title":"should go before the visible (displaced) position of the item"},{"ancestorTitles":["on vertical axis","closest displaced did not start displaced"],"failureMessages":[],"fullName":"on vertical axis closest displaced did not start displaced should go before the displaced position of the item","location":null,"status":"passed","title":"should go before the displaced position of the item"},{"ancestorTitles":["on horizontal axis","closest displaced started displaced"],"failureMessages":[],"fullName":"on horizontal axis closest displaced started displaced should go before the visible (displaced) position of the item","location":null,"status":"passed","title":"should go before the visible (displaced) position of the item"},{"ancestorTitles":["on horizontal axis","closest displaced did not start displaced"],"failureMessages":[],"fullName":"on horizontal axis closest displaced did not start displaced should go before the displaced position of the item","location":null,"status":"passed","title":"should go before the displaced position of the item"}],"endTime":1674657354865,"message":"","name":"/home/flakie/package/test/unit/state/get-center-from-impact/get-page-border-box-center/reorder/there-is-displacement.spec.js","startTime":1674657342278,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should call onDragEnd with the last published critical descriptor","location":null,"status":"passed","title":"should call onDragEnd with the last published critical descriptor"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should publish an onDragEnd with no destination even if there is a current destination","location":null,"status":"passed","title":"should publish an onDragEnd with no destination even if there is a current destination"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not publish an onDragEnd if aborted after a drop","location":null,"status":"passed","title":"should not publish an onDragEnd if aborted after a drop"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should publish an on drag end if aborted before the publish of an onDragStart","location":null,"status":"passed","title":"should publish an on drag end if aborted before the publish of an onDragStart"}],"endTime":1674657356569,"message":"","name":"/home/flakie/package/test/unit/state/middleware/responders/abort.spec.js","startTime":1674657348072,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should prevent default on the event that causes a drop","location":null,"status":"passed","title":"should prevent default on the event that causes a drop"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should prevent default on an escape press","location":null,"status":"passed","title":"should prevent default on an escape press"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should prevent default on a touchcancel","location":null,"status":"passed","title":"should prevent default on a touchcancel"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not prevent the default behaviour for an indirect cancel","location":null,"status":"passed","title":"should not prevent the default behaviour for an indirect cancel"}],"endTime":1674657358367,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/touch-sensor/stopping-a-drag.spec.js","startTime":1674657335679,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should update the impact when moving with items that started displaced","location":null,"status":"passed","title":"should update the impact when moving with items that started displaced"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should update the impact when moving with items that did not start displaced","location":null,"status":"passed","title":"should update the impact when moving with items that did not start displaced"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should update the impact when moving with items that started displaced","location":null,"status":"passed","title":"should update the impact when moving with items that started displaced"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should update the impact when moving with items that did not start displaced","location":null,"status":"passed","title":"should update the impact when moving with items that did not start displaced"}],"endTime":1674657358673,"message":"","name":"/home/flakie/package/test/unit/state/move-in-direction/move-to-next-place/move-to-next-index/from-reorder/in-home-list.spec.js","startTime":1674657345769,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["force press is not respected"],"failureMessages":[],"fullName":"force press is not respected should prevent the default of a `webkitmouseforcewillbegin` event","location":null,"status":"passed","title":"should prevent the default of a `webkitmouseforcewillbegin` event"},{"ancestorTitles":["force press is not respected"],"failureMessages":[],"fullName":"force press is not respected should prevent the default of a `webkitmouseforcedown` event","location":null,"status":"passed","title":"should prevent the default of a `webkitmouseforcedown` event"},{"ancestorTitles":["force press is respected"],"failureMessages":[],"fullName":"force press is respected should not prevent the default of a `webkitmouseforcewillbegin` event","location":null,"status":"passed","title":"should not prevent the default of a `webkitmouseforcewillbegin` event"},{"ancestorTitles":["force press is respected"],"failureMessages":[],"fullName":"force press is respected should cancel a pending drag with a webkitmouseforcedown event","location":null,"status":"passed","title":"should cancel a pending drag with a webkitmouseforcedown event"},{"ancestorTitles":["force press is respected"],"failureMessages":[],"fullName":"force press is respected should cancel an active drag with a webkitmouseforcedown event","location":null,"status":"passed","title":"should cancel an active drag with a webkitmouseforcedown event"}],"endTime":1674657359567,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/mouse-sensor/force-press.spec.js","startTime":1674657338564,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should shift added draggables to account for change in page scroll since start of drag","location":null,"status":"passed","title":"should shift added draggables to account for change in page scroll since start of drag"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should shift added draggables to account for change in droppable scroll since start of drag","location":null,"status":"passed","title":"should shift added draggables to account for change in droppable scroll since start of drag"}],"endTime":1674657360078,"message":"","name":"/home/flakie/package/test/unit/state/publish-while-dragging/adjust-additions-for-scroll-change.spec.js","startTime":1674657349066,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should stop a collection if a drag is aborted","location":null,"status":"passed","title":"should stop a collection if a drag is aborted"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not stop a collection if a drop is pending","location":null,"status":"passed","title":"should not stop a collection if a drop is pending"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should stop a collection if a drag is complete","location":null,"status":"passed","title":"should stop a collection if a drag is complete"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should stop a collection if a drop animation starts","location":null,"status":"passed","title":"should stop a collection if a drop animation starts"}],"endTime":1674657360370,"message":"","name":"/home/flakie/package/test/unit/state/middleware/dimension-marshal-stopper.spec.js","startTime":1674657349778,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should account for any scroll in the droppable being dropped into (into foreign list)","location":null,"status":"passed","title":"should account for any scroll in the droppable being dropped into (into foreign list)"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should account for any scroll in the droppable being dropped into (into foreign list)","location":null,"status":"passed","title":"should account for any scroll in the droppable being dropped into (into foreign list)"}],"endTime":1674657362076,"message":"","name":"/home/flakie/package/test/unit/state/get-center-from-impact/get-page-border-box-center/reorder/with-droppable-scroll.spec.js","startTime":1674657348076,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should prevent enter or tab being pressed during a drag","location":null,"status":"passed","title":"should prevent enter or tab being pressed during a drag"}],"endTime":1674657362270,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/keyboard-sensor/prevent-standard-keys-while-dragging.spec.js","startTime":1674657349670,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should prefer the furthest away droppable when multiple lists are hit","location":null,"status":"passed","title":"should prefer the furthest away droppable when multiple lists are hit"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should prefer the second furthest away droppable when multiple lists are hit","location":null,"status":"passed","title":"should prefer the second furthest away droppable when multiple lists are hit"}],"endTime":1674657362774,"message":"","name":"/home/flakie/package/test/unit/state/get-droppable-over/preferencing.spec.js","startTime":1674657351170,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should allow the disabling of a droppable in onDragStart","location":null,"status":"passed","title":"should allow the disabling of a droppable in onDragStart"}],"endTime":1674657366474,"message":"","name":"/home/flakie/package/test/unit/integration/disable-on-start.spec.js","startTime":1674657358664,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should return null if there are draggables in a destination list but none are visible","location":null,"status":"passed","title":"should return null if there are draggables in a destination list but none are visible"}],"endTime":1674657367066,"message":"","name":"/home/flakie/package/test/unit/state/move-in-direction/move-cross-axis/no-visible-targets-in-list.spec.js","startTime":1674657351669,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["force scrolling a droppable"],"failureMessages":[],"fullName":"force scrolling a droppable should scroll the droppable","location":null,"status":"passed","title":"should scroll the droppable"},{"ancestorTitles":["force scrolling a droppable"],"failureMessages":[],"fullName":"force scrolling a droppable should throw if the droppable cannot be found","location":null,"status":"passed","title":"should throw if the droppable cannot be found"},{"ancestorTitles":["force scrolling a droppable"],"failureMessages":[],"fullName":"force scrolling a droppable should not scroll the droppable if no collection is occurring","location":null,"status":"passed","title":"should not scroll the droppable if no collection is occurring"},{"ancestorTitles":["responding to scroll changes"],"failureMessages":[],"fullName":"responding to scroll changes should let consumers know","location":null,"status":"passed","title":"should let consumers know"},{"ancestorTitles":["responding to scroll changes"],"failureMessages":[],"fullName":"responding to scroll changes should throw if the droppable cannot be found","location":null,"status":"passed","title":"should throw if the droppable cannot be found"},{"ancestorTitles":["responding to scroll changes"],"failureMessages":[],"fullName":"responding to scroll changes should not let consumers know if know drag is occurring","location":null,"status":"passed","title":"should not let consumers know if know drag is occurring"},{"ancestorTitles":["is enabled changes"],"failureMessages":[],"fullName":"is enabled changes should let consumers know","location":null,"status":"passed","title":"should let consumers know"},{"ancestorTitles":["is enabled changes"],"failureMessages":[],"fullName":"is enabled changes should throw if the droppable cannot be found","location":null,"status":"passed","title":"should throw if the droppable cannot be found"},{"ancestorTitles":["is enabled changes"],"failureMessages":[],"fullName":"is enabled changes should not let consumers know if no collection is occurring","location":null,"status":"passed","title":"should not let consumers know if no collection is occurring"}],"endTime":1674657368075,"message":"","name":"/home/flakie/package/test/unit/view/dimension-marshal/droppable-passthrough.spec.js","startTime":1674657352665,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["with: mouse"],"failureMessages":[],"fullName":"with: mouse should control a successful drag through the sensor","location":null,"status":"passed","title":"should control a successful drag through the sensor"},{"ancestorTitles":["with: mouse"],"failureMessages":[],"fullName":"with: mouse should control a cancel through the sensor","location":null,"status":"passed","title":"should control a cancel through the sensor"},{"ancestorTitles":["with: keyboard"],"failureMessages":[],"fullName":"with: keyboard should control a successful drag through the sensor","location":null,"status":"passed","title":"should control a successful drag through the sensor"},{"ancestorTitles":["with: keyboard"],"failureMessages":[],"fullName":"with: keyboard should control a cancel through the sensor","location":null,"status":"passed","title":"should control a cancel through the sensor"},{"ancestorTitles":["with: touch"],"failureMessages":[],"fullName":"with: touch should control a successful drag through the sensor","location":null,"status":"passed","title":"should control a successful drag through the sensor"},{"ancestorTitles":["with: touch"],"failureMessages":[],"fullName":"with: touch should control a cancel through the sensor","location":null,"status":"passed","title":"should control a cancel through the sensor"}],"endTime":1674657368472,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/shared-behaviours/validate-controls.spec.js","startTime":1674657313173,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should calculate visibility as if in original location","location":null,"status":"passed","title":"should calculate visibility as if in original location"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should calculate visibility as if in original location","location":null,"status":"passed","title":"should calculate visibility as if in original location"}],"endTime":1674657369570,"message":"","name":"/home/flakie/package/test/unit/state/get-displacement-groups/use-initial-position-not-displaced.spec.js","startTime":1674657360478,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should pass if using a html doctype","location":null,"status":"passed","title":"should pass if using a html doctype"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should fail if there is no doctype","location":null,"status":"passed","title":"should fail if there is no doctype"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should fail if there is a non-html5 doctype","location":null,"status":"passed","title":"should fail if there is a non-html5 doctype"}],"endTime":1674657369769,"message":"","name":"/home/flakie/package/test/unit/integration/drag-drop-context/check-doctype.spec.js","startTime":1674657339564,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should avoid clashes with parent redux applications","location":null,"status":"passed","title":"should avoid clashes with parent redux applications"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should avoid clashes with child redux applications","location":null,"status":"passed","title":"should avoid clashes with child redux applications"}],"endTime":1674657370170,"message":"","name":"/home/flakie/package/test/unit/integration/drag-drop-context/clashing-with-consumers-redux.spec.js","startTime":1674657360777,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis","combining with displaced item","item is displaced forward"],"failureMessages":[],"fullName":"on vertical axis combining with displaced item item is displaced forward should combine when moving forward past the displaced start threshold","location":null,"status":"passed","title":"should combine when moving forward past the displaced start threshold"},{"ancestorTitles":["on vertical axis","combining with displaced item","item is displaced forward"],"failureMessages":[],"fullName":"on vertical axis combining with displaced item item is displaced forward should no longer merge when moving onto 4/5 of the target","location":null,"status":"passed","title":"should no longer merge when moving onto 4/5 of the target"},{"ancestorTitles":["on vertical axis","combining with non-displaced item"],"failureMessages":[],"fullName":"on vertical axis combining with non-displaced item should combine with an item when moving backwards past 1 / 5 of the items size","location":null,"status":"passed","title":"should combine with an item when moving backwards past 1 / 5 of the items size"},{"ancestorTitles":["on vertical axis","combining with non-displaced item"],"failureMessages":[],"fullName":"on vertical axis combining with non-displaced item should stop combining when going back onto 2/3 of the size","location":null,"status":"passed","title":"should stop combining when going back onto 2/3 of the size"},{"ancestorTitles":["on horizontal axis","combining with displaced item","item is displaced forward"],"failureMessages":[],"fullName":"on horizontal axis combining with displaced item item is displaced forward should combine when moving forward past the displaced start threshold","location":null,"status":"passed","title":"should combine when moving forward past the displaced start threshold"},{"ancestorTitles":["on horizontal axis","combining with displaced item","item is displaced forward"],"failureMessages":[],"fullName":"on horizontal axis combining with displaced item item is displaced forward should no longer merge when moving onto 4/5 of the target","location":null,"status":"passed","title":"should no longer merge when moving onto 4/5 of the target"},{"ancestorTitles":["on horizontal axis","combining with non-displaced item"],"failureMessages":[],"fullName":"on horizontal axis combining with non-displaced item should combine with an item when moving backwards past 1 / 5 of the items size","location":null,"status":"passed","title":"should combine with an item when moving backwards past 1 / 5 of the items size"},{"ancestorTitles":["on horizontal axis","combining with non-displaced item"],"failureMessages":[],"fullName":"on horizontal axis combining with non-displaced item should stop combining when going back onto 2/3 of the size","location":null,"status":"passed","title":"should stop combining when going back onto 2/3 of the size"}],"endTime":1674657370375,"message":"","name":"/home/flakie/package/test/unit/state/get-drag-impact/combine/started-before-critical.spec.js","startTime":1674657356769,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should not animate any displacement","location":null,"status":"passed","title":"should not animate any displacement"}],"endTime":1674657371065,"message":"","name":"/home/flakie/package/test/unit/state/publish-while-dragging/displacement-animation.spec.js","startTime":1674657359769,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on the vertical axis","moving forward to end of window"],"failureMessages":[],"fullName":"on the vertical axis moving forward to end of window should not scroll if before the start threshold","location":null,"status":"passed","title":"should not scroll if before the start threshold"},{"ancestorTitles":["on the vertical axis","moving forward to end of window"],"failureMessages":[],"fullName":"on the vertical axis moving forward to end of window should scroll if on the start threshold","location":null,"status":"passed","title":"should scroll if on the start threshold"},{"ancestorTitles":["on the vertical axis","moving forward to end of window"],"failureMessages":[],"fullName":"on the vertical axis moving forward to end of window should scroll if moving beyond the start threshold","location":null,"status":"passed","title":"should scroll if moving beyond the start threshold"},{"ancestorTitles":["on the vertical axis","moving forward to end of window"],"failureMessages":[],"fullName":"on the vertical axis moving forward to end of window should get faster the closer to the max speed point","location":null,"status":"passed","title":"should get faster the closer to the max speed point"},{"ancestorTitles":["on the vertical axis","moving forward to end of window"],"failureMessages":[],"fullName":"on the vertical axis moving forward to end of window should have the top speed at the max speed point","location":null,"status":"passed","title":"should have the top speed at the max speed point"},{"ancestorTitles":["on the vertical axis","moving forward to end of window"],"failureMessages":[],"fullName":"on the vertical axis moving forward to end of window should have the top speed when moving beyond the max speed point","location":null,"status":"passed","title":"should have the top speed when moving beyond the max speed point"},{"ancestorTitles":["on the vertical axis","moving forward to end of window"],"failureMessages":[],"fullName":"on the vertical axis moving forward to end of window should throttle multiple scrolls into a single animation frame","location":null,"status":"passed","title":"should throttle multiple scrolls into a single animation frame"},{"ancestorTitles":["on the vertical axis","moving backward to start of window"],"failureMessages":[],"fullName":"on the vertical axis moving backward to start of window should not scroll if before the start threshold","location":null,"status":"passed","title":"should not scroll if before the start threshold"},{"ancestorTitles":["on the vertical axis","moving backward to start of window"],"failureMessages":[],"fullName":"on the vertical axis moving backward to start of window should scroll if on the start threshold","location":null,"status":"passed","title":"should scroll if on the start threshold"},{"ancestorTitles":["on the vertical axis","moving backward to start of window"],"failureMessages":[],"fullName":"on the vertical axis moving backward to start of window should scroll if moving beyond the start threshold","location":null,"status":"passed","title":"should scroll if moving beyond the start threshold"},{"ancestorTitles":["on the vertical axis","moving backward to start of window"],"failureMessages":[],"fullName":"on the vertical axis moving backward to start of window should get faster the closer to the max speed point","location":null,"status":"passed","title":"should get faster the closer to the max speed point"},{"ancestorTitles":["on the vertical axis","moving backward to start of window"],"failureMessages":[],"fullName":"on the vertical axis moving backward to start of window should have the top speed at the max speed point","location":null,"status":"passed","title":"should have the top speed at the max speed point"},{"ancestorTitles":["on the vertical axis","moving backward to start of window"],"failureMessages":[],"fullName":"on the vertical axis moving backward to start of window should have the top speed when moving beyond the max speed point","location":null,"status":"passed","title":"should have the top speed when moving beyond the max speed point"},{"ancestorTitles":["on the vertical axis","moving backward to start of window"],"failureMessages":[],"fullName":"on the vertical axis moving backward to start of window should throttle multiple scrolls into a single animation frame","location":null,"status":"passed","title":"should throttle multiple scrolls into a single animation frame"},{"ancestorTitles":["on the horizontal axis","moving forward to end of window"],"failureMessages":[],"fullName":"on the horizontal axis moving forward to end of window should not scroll if before the start threshold","location":null,"status":"passed","title":"should not scroll if before the start threshold"},{"ancestorTitles":["on the horizontal axis","moving forward to end of window"],"failureMessages":[],"fullName":"on the horizontal axis moving forward to end of window should scroll if on the start threshold","location":null,"status":"passed","title":"should scroll if on the start threshold"},{"ancestorTitles":["on the horizontal axis","moving forward to end of window"],"failureMessages":[],"fullName":"on the horizontal axis moving forward to end of window should scroll if moving beyond the start threshold","location":null,"status":"passed","title":"should scroll if moving beyond the start threshold"},{"ancestorTitles":["on the horizontal axis","moving forward to end of window"],"failureMessages":[],"fullName":"on the horizontal axis moving forward to end of window should get faster the closer to the max speed point","location":null,"status":"passed","title":"should get faster the closer to the max speed point"},{"ancestorTitles":["on the horizontal axis","moving forward to end of window"],"failureMessages":[],"fullName":"on the horizontal axis moving forward to end of window should have the top speed at the max speed point","location":null,"status":"passed","title":"should have the top speed at the max speed point"},{"ancestorTitles":["on the horizontal axis","moving forward to end of window"],"failureMessages":[],"fullName":"on the horizontal axis moving forward to end of window should have the top speed when moving beyond the max speed point","location":null,"status":"passed","title":"should have the top speed when moving beyond the max speed point"},{"ancestorTitles":["on the horizontal axis","moving forward to end of window"],"failureMessages":[],"fullName":"on the horizontal axis moving forward to end of window should throttle multiple scrolls into a single animation frame","location":null,"status":"passed","title":"should throttle multiple scrolls into a single animation frame"},{"ancestorTitles":["on the horizontal axis","moving backward to start of window"],"failureMessages":[],"fullName":"on the horizontal axis moving backward to start of window should not scroll if before the start threshold","location":null,"status":"passed","title":"should not scroll if before the start threshold"},{"ancestorTitles":["on the horizontal axis","moving backward to start of window"],"failureMessages":[],"fullName":"on the horizontal axis moving backward to start of window should scroll if on the start threshold","location":null,"status":"passed","title":"should scroll if on the start threshold"},{"ancestorTitles":["on the horizontal axis","moving backward to start of window"],"failureMessages":[],"fullName":"on the horizontal axis moving backward to start of window should scroll if moving beyond the start threshold","location":null,"status":"passed","title":"should scroll if moving beyond the start threshold"},{"ancestorTitles":["on the horizontal axis","moving backward to start of window"],"failureMessages":[],"fullName":"on the horizontal axis moving backward to start of window should get faster the closer to the max speed point","location":null,"status":"passed","title":"should get faster the closer to the max speed point"},{"ancestorTitles":["on the horizontal axis","moving backward to start of window"],"failureMessages":[],"fullName":"on the horizontal axis moving backward to start of window should have the top speed at the max speed point","location":null,"status":"passed","title":"should have the top speed at the max speed point"},{"ancestorTitles":["on the horizontal axis","moving backward to start of window"],"failureMessages":[],"fullName":"on the horizontal axis moving backward to start of window should have the top speed when moving beyond the max speed point","location":null,"status":"passed","title":"should have the top speed when moving beyond the max speed point"},{"ancestorTitles":["on the horizontal axis","moving backward to start of window"],"failureMessages":[],"fullName":"on the horizontal axis moving backward to start of window should throttle multiple scrolls into a single animation frame","location":null,"status":"passed","title":"should throttle multiple scrolls into a single animation frame"}],"endTime":1674657371368,"message":"","name":"/home/flakie/package/test/unit/state/auto-scroll/fluid-scroller/window-scrolling.spec.js","startTime":1674657362368,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should prevent default on the event that causes a drop","location":null,"status":"passed","title":"should prevent default on the event that causes a drop"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should prevent default on an escape press","location":null,"status":"passed","title":"should prevent default on an escape press"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not prevent the default behaviour for an indirect cancel","location":null,"status":"passed","title":"should not prevent the default behaviour for an indirect cancel"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should cancel and prevent default on mousedown during a drag as it might be from a different button","location":null,"status":"passed","title":"should cancel and prevent default on mousedown during a drag as it might be from a different button"}],"endTime":1674657371564,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/mouse-sensor/stopping-a-drag.spec.js","startTime":1674657353977,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should allow different locks in different DragDropContexts","location":null,"status":"passed","title":"should allow different locks in different DragDropContexts"}],"endTime":1674657371672,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/sensor-marshal/lock-context-isolation.spec.js","startTime":1674657362669,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should throttle move events by request animation frame","location":null,"status":"passed","title":"should throttle move events by request animation frame"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should cancel any pending moves after a lock is released","location":null,"status":"passed","title":"should cancel any pending moves after a lock is released"}],"endTime":1674657371778,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/sensor-marshal/move-throttling.spec.js","startTime":1674657358772,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should block a click after a drag","location":null,"status":"passed","title":"should block a click after a drag"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not block a click after an aborted pending drag","location":null,"status":"passed","title":"should not block a click after an aborted pending drag"}],"endTime":1674657373570,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/touch-sensor/click-blocking.spec.js","startTime":1674657354871,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should render the child function when the parent renders","location":null,"status":"passed","title":"should render the child function when the parent renders"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should render the child function when the parent re-renders","location":null,"status":"passed","title":"should render the child function when the parent re-renders"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should render the child function when the parents props changes that cause a re-render","location":null,"status":"passed","title":"should render the child function when the parents props changes that cause a re-render"}],"endTime":1674657375376,"message":"","name":"/home/flakie/package/test/unit/view/connected-draggable/child-render-behaviour.spec.js","startTime":1674657366768,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["can start drag"],"failureMessages":[],"fullName":"can start drag should allow lifting if in IDLE phase","location":null,"status":"passed","title":"should allow lifting if in IDLE phase"},{"ancestorTitles":["can start drag"],"failureMessages":[],"fullName":"can start drag should not allow lifting in the COLLECTING phase","location":null,"status":"passed","title":"should not allow lifting in the COLLECTING phase"},{"ancestorTitles":["can start drag"],"failureMessages":[],"fullName":"can start drag should not allow lifting in the DRAGGING phase","location":null,"status":"passed","title":"should not allow lifting in the DRAGGING phase"},{"ancestorTitles":["can start drag"],"failureMessages":[],"fullName":"can start drag should not allow lifting in the DROP_PENDING phase","location":null,"status":"passed","title":"should not allow lifting in the DROP_PENDING phase"},{"ancestorTitles":["can start drag","while animating drop"],"failureMessages":[],"fullName":"can start drag while animating drop should allow lifting if dropping another item","location":null,"status":"passed","title":"should allow lifting if dropping another item"},{"ancestorTitles":["can start drag","while animating drop"],"failureMessages":[],"fullName":"can start drag while animating drop should disallow lifting if dropping the same item","location":null,"status":"passed","title":"should disallow lifting if dropping the same item"},{"ancestorTitles":["can start drag","while animating drop"],"failureMessages":[],"fullName":"can start drag while animating drop should disallow lifting while animating user cancel","location":null,"status":"passed","title":"should disallow lifting while animating user cancel"}],"endTime":1674657376270,"message":"","name":"/home/flakie/package/test/unit/state/can-start-drag.spec.js","startTime":1674657369668,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should hit when inside subject, but outside the frame","location":null,"status":"passed","title":"should hit when inside subject, but outside the frame"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not hit when inside subject, but outside the frame","location":null,"status":"passed","title":"should not hit when inside subject, but outside the frame"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not hit when outside subject and inside the frame (partially visible subject)","location":null,"status":"passed","title":"should not hit when outside subject and inside the frame (partially visible subject)"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not hit when outside subject and inside the frame (invisible subject)","location":null,"status":"passed","title":"should not hit when outside subject and inside the frame (invisible subject)"}],"endTime":1674657376271,"message":"","name":"/home/flakie/package/test/unit/state/get-droppable-over/is-not-visible.spec.js","startTime":1674657370476,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should support hydrating a server side rendered application","location":null,"status":"passed","title":"should support hydrating a server side rendered application"}],"endTime":1674657377571,"message":"","name":"/home/flakie/package/test/unit/integration/server-side-rendering/client-hydration.spec.js","startTime":1674657371770,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should not prevent clicks after a drag","location":null,"status":"passed","title":"should not prevent clicks after a drag"}],"endTime":1674657377772,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/keyboard-sensor/no-click-blocking.spec.js","startTime":1674657368873,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on the vertical axis"],"failureMessages":[],"fullName":"on the vertical axis should throw if a scroll occurs before a drag as started","location":null,"status":"passed","title":"should throw if a scroll occurs before a drag as started"},{"ancestorTitles":["on the vertical axis"],"failureMessages":[],"fullName":"on the vertical axis should allow subsequent drags","location":null,"status":"passed","title":"should allow subsequent drags"},{"ancestorTitles":["on the vertical axis"],"failureMessages":[],"fullName":"on the vertical axis should allow defensive stop calls","location":null,"status":"passed","title":"should allow defensive stop calls"},{"ancestorTitles":["on the vertical axis"],"failureMessages":[],"fullName":"on the vertical axis should throw if started multiple times","location":null,"status":"passed","title":"should throw if started multiple times"},{"ancestorTitles":["on the horizontal axis"],"failureMessages":[],"fullName":"on the horizontal axis should throw if a scroll occurs before a drag as started","location":null,"status":"passed","title":"should throw if a scroll occurs before a drag as started"},{"ancestorTitles":["on the horizontal axis"],"failureMessages":[],"fullName":"on the horizontal axis should allow subsequent drags","location":null,"status":"passed","title":"should allow subsequent drags"},{"ancestorTitles":["on the horizontal axis"],"failureMessages":[],"fullName":"on the horizontal axis should allow defensive stop calls","location":null,"status":"passed","title":"should allow defensive stop calls"},{"ancestorTitles":["on the horizontal axis"],"failureMessages":[],"fullName":"on the horizontal axis should throw if started multiple times","location":null,"status":"passed","title":"should throw if started multiple times"}],"endTime":1674657378676,"message":"","name":"/home/flakie/package/test/unit/state/auto-scroll/fluid-scroller/lifecycle.spec.js","startTime":1674657371375,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should return true if destination is home of draggable","location":null,"status":"passed","title":"should return true if destination is home of draggable"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should return false if destination is not home of draggable","location":null,"status":"passed","title":"should return false if destination is not home of draggable"}],"endTime":1674657380372,"message":"","name":"/home/flakie/package/test/unit/state/droppable/is-home-of.spec.js","startTime":1674657370963,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should abort any active drag (rbd error)","location":null,"status":"passed","title":"should abort any active drag (rbd error)"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should abort any active drag (non-rbd error)","location":null,"status":"passed","title":"should abort any active drag (non-rbd error)"}],"endTime":1674657382576,"message":"","name":"/home/flakie/package/test/unit/integration/drag-drop-context/error-handling/error-on-window.spec.js","startTime":1674657368272,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["in phase DRAGGING","was displaced before drop"],"failureMessages":[],"fullName":"in phase DRAGGING was displaced before drop should continue to be moved out of the way","location":null,"status":"passed","title":"should continue to be moved out of the way"},{"ancestorTitles":["in phase DRAGGING","was displaced before drop"],"failureMessages":[],"fullName":"in phase DRAGGING was displaced before drop should not break memoization from the dragging phase","location":null,"status":"passed","title":"should not break memoization from the dragging phase"},{"ancestorTitles":["in phase DRAGGING","was not displaced before drop"],"failureMessages":[],"fullName":"in phase DRAGGING was not displaced before drop should not break memoization","location":null,"status":"passed","title":"should not break memoization"},{"ancestorTitles":["in phase COLLECTING","was displaced before drop"],"failureMessages":[],"fullName":"in phase COLLECTING was displaced before drop should continue to be moved out of the way","location":null,"status":"passed","title":"should continue to be moved out of the way"},{"ancestorTitles":["in phase COLLECTING","was displaced before drop"],"failureMessages":[],"fullName":"in phase COLLECTING was displaced before drop should not break memoization from the dragging phase","location":null,"status":"passed","title":"should not break memoization from the dragging phase"},{"ancestorTitles":["in phase COLLECTING","was not displaced before drop"],"failureMessages":[],"fullName":"in phase COLLECTING was not displaced before drop should not break memoization","location":null,"status":"passed","title":"should not break memoization"},{"ancestorTitles":["in phase DROP_PENDING","was displaced before drop"],"failureMessages":[],"fullName":"in phase DROP_PENDING was displaced before drop should continue to be moved out of the way","location":null,"status":"passed","title":"should continue to be moved out of the way"},{"ancestorTitles":["in phase DROP_PENDING","was displaced before drop"],"failureMessages":[],"fullName":"in phase DROP_PENDING was displaced before drop should not break memoization from the dragging phase","location":null,"status":"passed","title":"should not break memoization from the dragging phase"},{"ancestorTitles":["in phase DROP_PENDING","was not displaced before drop"],"failureMessages":[],"fullName":"in phase DROP_PENDING was not displaced before drop should not break memoization","location":null,"status":"passed","title":"should not break memoization"}],"endTime":1674657383967,"message":"","name":"/home/flakie/package/test/unit/view/connected-draggable/dropping-something-else.spec.js","startTime":1674657374763,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should call the onDragStart responder when a initial publish occurs","location":null,"status":"passed","title":"should call the onDragStart responder when a initial publish occurs"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should call the onBeforeDragState and onDragStart in the correct order","location":null,"status":"passed","title":"should call the onBeforeDragState and onDragStart in the correct order"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should throw an exception if an initial publish is called before a drag ends","location":null,"status":"passed","title":"should throw an exception if an initial publish is called before a drag ends"}],"endTime":1674657384367,"message":"","name":"/home/flakie/package/test/unit/state/middleware/responders/start.spec.js","startTime":1674657375471,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["home list"],"failureMessages":[],"fullName":"home list should have the expected disabled props while resting","location":null,"status":"passed","title":"should have the expected disabled props while resting"},{"ancestorTitles":["home list"],"failureMessages":[],"fullName":"home list should display a placeholder even when disabled","location":null,"status":"passed","title":"should display a placeholder even when disabled"},{"ancestorTitles":["in foreign list"],"failureMessages":[],"fullName":"in foreign list should have the expected disabled props while resting","location":null,"status":"passed","title":"should have the expected disabled props while resting"},{"ancestorTitles":["in foreign list"],"failureMessages":[],"fullName":"in foreign list should return disabled map props when in phase IDLE","location":null,"status":"passed","title":"should return disabled map props when in phase IDLE"},{"ancestorTitles":["in foreign list"],"failureMessages":[],"fullName":"in foreign list should return disabled map props when in phase DRAGGING","location":null,"status":"passed","title":"should return disabled map props when in phase DRAGGING"},{"ancestorTitles":["in foreign list"],"failureMessages":[],"fullName":"in foreign list should return disabled map props when in phase DROP_ANIMATING","location":null,"status":"passed","title":"should return disabled map props when in phase DROP_ANIMATING"},{"ancestorTitles":["in foreign list"],"failureMessages":[],"fullName":"in foreign list should return disabled map props when in phase DROP_ANIMATING","location":null,"status":"passed","title":"should return disabled map props when in phase DROP_ANIMATING"}],"endTime":1674657384677,"message":"","name":"/home/flakie/package/test/unit/view/connected-droppable/disabled.spec.js","startTime":1674657371763,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should cancel a pending drag on events: [orientationchange, keydown, resize, visibilitychange, touchmove]","location":null,"status":"passed","title":"should cancel a pending drag on events: [orientationchange, keydown, resize, visibilitychange, touchmove]"}],"endTime":1674657385370,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/touch-sensor/cancel-while-pending.spec.js","startTime":1674657372065,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should publish updates to the enabled state when dragging","location":null,"status":"passed","title":"should publish updates to the enabled state when dragging"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not publish updates to the enabled state when there is no drag","location":null,"status":"passed","title":"should not publish updates to the enabled state when there is no drag"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not publish updates when there is no change","location":null,"status":"passed","title":"should not publish updates when there is no change"}],"endTime":1674657385767,"message":"","name":"/home/flakie/package/test/unit/view/use-droppable-publisher/is-enabled-change.spec.js","startTime":1674657370278,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should move backward off combining with an item that is displaced","location":null,"status":"passed","title":"should move backward off combining with an item that is displaced"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should move forward past a combining an item that is displaced","location":null,"status":"passed","title":"should move forward past a combining an item that is displaced"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should move backwards past combining with an item that started displaced - but now is not","location":null,"status":"passed","title":"should move backwards past combining with an item that started displaced - but now is not"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should move forwards past combining with an item that started displaced - but now is not","location":null,"status":"passed","title":"should move forwards past combining with an item that started displaced - but now is not"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should move backward off combining with an item that is displaced","location":null,"status":"passed","title":"should move backward off combining with an item that is displaced"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should move forward past a combining an item that is displaced","location":null,"status":"passed","title":"should move forward past a combining an item that is displaced"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should move backwards past combining with an item that started displaced - but now is not","location":null,"status":"passed","title":"should move backwards past combining with an item that started displaced - but now is not"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should move forwards past combining with an item that started displaced - but now is not","location":null,"status":"passed","title":"should move forwards past combining with an item that started displaced - but now is not"}],"endTime":1674657385868,"message":"","name":"/home/flakie/package/test/unit/state/move-in-direction/move-to-next-place/move-to-next-index/from-combine/started-after-critical.spec.js","startTime":1674657376576,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should adjust the current droppable scroll in response to a change","location":null,"status":"passed","title":"should adjust the current droppable scroll in response to a change"}],"endTime":1674657386570,"message":"","name":"/home/flakie/package/test/unit/state/publish-while-dragging/droppable-scroll-change.spec.js","startTime":1674657378863,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[": Timeout - Async callback was not invoked within the 5000ms timeout specified by jest.setTimeout.Timeout - Async callback was not invoked within the 5000ms timeout specified by jest.setTimeout.Error: \n    at new Spec (/home/flakie/package/node_modules/jest-jasmine2/build/jasmine/Spec.js:116:22)\n    at new Spec (/home/flakie/package/node_modules/jest-jasmine2/build/setup_jest_globals.js:78:9)\n    at specFactory (/home/flakie/package/node_modules/jest-jasmine2/build/jasmine/Env.js:523:24)\n    at Env.it (/home/flakie/package/node_modules/jest-jasmine2/build/jasmine/Env.js:592:24)\n    at Env.it (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:128:23)\n    at it (/home/flakie/package/node_modules/jest-jasmine2/build/jasmine/jasmineLight.js:100:21)\n    at Object.<anonymous> (/home/flakie/package/test/unit/docs/no-broken-links.spec.js:70:1)\n    at Runtime._execModule (/home/flakie/package/node_modules/jest-runtime/build/index.js:1205:24)\n    at Runtime._loadModule (/home/flakie/package/node_modules/jest-runtime/build/index.js:805:12)\n    at Runtime.requireModule (/home/flakie/package/node_modules/jest-runtime/build/index.js:662:10)\n    at jasmine2 (/home/flakie/package/node_modules/jest-jasmine2/build/index.js:228:13)\n    at runTestInternal (/home/flakie/package/node_modules/jest-runner/build/runTest.js:385:22)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at runTest (/home/flakie/package/node_modules/jest-runner/build/runTest.js:465:34)\n    at Object.worker (/home/flakie/package/node_modules/jest-runner/build/testWorker.js:129:12)"],"fullName":"should use have no dead links","location":null,"status":"failed","title":"should use have no dead links"}],"endTime":1674657387368,"message":"  ● should use have no dead links\n\n    : Timeout - Async callback was not invoked within the 5000ms timeout specified by jest.setTimeout.Timeout - Async callback was not invoked within the 5000ms timeout specified by jest.setTimeout.Error:\n\n      68 | };\n      69 |\n    > 70 | it('should use have no dead links', async () => {\n         | ^\n      71 |   const files: string[] = await globby(['**/*.md', '!node_modules/']);\n      72 |   expect(files.length).toBeGreaterThan(0);\n      73 |\n\n      at new Spec (node_modules/jest-jasmine2/build/jasmine/Spec.js:116:22)\n      at Object.<anonymous> (test/unit/docs/no-broken-links.spec.js:70:1)\n","name":"/home/flakie/package/test/unit/docs/no-broken-links.spec.js","startTime":1674657371076,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["responders integration","before capture"],"failureMessages":[],"fullName":"responders integration before capture should call the onBeforeDragCapture responder just before the drag starts","location":null,"status":"passed","title":"should call the onBeforeDragCapture responder just before the drag starts"},{"ancestorTitles":["responders integration","before drag start"],"failureMessages":[],"fullName":"responders integration before drag start should call the onBeforeDragStart responder just before the drag starts","location":null,"status":"passed","title":"should call the onBeforeDragStart responder just before the drag starts"},{"ancestorTitles":["responders integration","before drag start"],"failureMessages":[],"fullName":"responders integration before drag start should not call onDragStart while the drag is occurring","location":null,"status":"passed","title":"should not call onDragStart while the drag is occurring"},{"ancestorTitles":["responders integration","drag start"],"failureMessages":[],"fullName":"responders integration drag start should call the onDragStart responder when a drag starts","location":null,"status":"passed","title":"should call the onDragStart responder when a drag starts"},{"ancestorTitles":["responders integration","drag start"],"failureMessages":[],"fullName":"responders integration drag start should not call onDragStart while the drag is occurring","location":null,"status":"passed","title":"should not call onDragStart while the drag is occurring"},{"ancestorTitles":["responders integration","drag end"],"failureMessages":[],"fullName":"responders integration drag end should call the onDragEnd responder when a drag ends","location":null,"status":"passed","title":"should call the onDragEnd responder when a drag ends"},{"ancestorTitles":["responders integration","drag end"],"failureMessages":[],"fullName":"responders integration drag end should call the onDragEnd responder when a drag ends when instantly stopped","location":null,"status":"passed","title":"should call the onDragEnd responder when a drag ends when instantly stopped"},{"ancestorTitles":["responders integration","drag cancel"],"failureMessages":[],"fullName":"responders integration drag cancel should call onDragEnd when a drag is canceled","location":null,"status":"passed","title":"should call onDragEnd when a drag is canceled"},{"ancestorTitles":["responders integration","drag cancel"],"failureMessages":[],"fullName":"responders integration drag cancel should call onDragEnd when a drag is canceled instantly","location":null,"status":"passed","title":"should call onDragEnd when a drag is canceled instantly"},{"ancestorTitles":["responders integration","unmounted mid drag"],"failureMessages":[],"fullName":"responders integration unmounted mid drag should cancel a drag if unmounted mid drag","location":null,"status":"passed","title":"should cancel a drag if unmounted mid drag"},{"ancestorTitles":["responders integration","subsequent drags"],"failureMessages":[],"fullName":"responders integration subsequent drags should publish subsequent drags","location":null,"status":"passed","title":"should publish subsequent drags"},{"ancestorTitles":["responders integration","subsequent drags"],"failureMessages":[],"fullName":"responders integration subsequent drags should publish subsequent drags after a cancel","location":null,"status":"passed","title":"should publish subsequent drags after a cancel"},{"ancestorTitles":["responders integration","dynamic responders"],"failureMessages":[],"fullName":"responders integration dynamic responders should allow you to change responders before a drag started","location":null,"status":"passed","title":"should allow you to change responders before a drag started"},{"ancestorTitles":["responders integration","dynamic responders"],"failureMessages":[],"fullName":"responders integration dynamic responders should allow you to change onDragEnd during a drag","location":null,"status":"passed","title":"should allow you to change onDragEnd during a drag"},{"ancestorTitles":["responders integration","dynamic responders"],"failureMessages":[],"fullName":"responders integration dynamic responders should allow you to change responders between drags","location":null,"status":"passed","title":"should allow you to change responders between drags"}],"endTime":1674657387969,"message":"","name":"/home/flakie/package/test/unit/integration/responders-integration.spec.js","startTime":1674657363868,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["was over - reordering"],"failureMessages":[],"fullName":"was over - reordering should immediately remove a placeholder","location":null,"status":"passed","title":"should immediately remove a placeholder"},{"ancestorTitles":["was over - merging"],"failureMessages":[],"fullName":"was over - merging should animate a placeholder closed","location":null,"status":"passed","title":"should animate a placeholder closed"},{"ancestorTitles":["was not over"],"failureMessages":[],"fullName":"was not over should animate a placeholder closed","location":null,"status":"passed","title":"should animate a placeholder closed"},{"ancestorTitles":["flushed"],"failureMessages":[],"fullName":"flushed should cut an animation","location":null,"status":"passed","title":"should cut an animation"},{"ancestorTitles":["flushed"],"failureMessages":[],"fullName":"flushed should cut animation in a list that was not animating","location":null,"status":"passed","title":"should cut animation in a list that was not animating"}],"endTime":1674657389068,"message":"","name":"/home/flakie/package/test/unit/view/connected-droppable/post-drop.spec.js","startTime":1674657377967,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should do nothing when there is no displacement","location":null,"status":"passed","title":"should do nothing when there is no displacement"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should increase the visible displacement in the window by the amount of the max scroll change","location":null,"status":"passed","title":"should increase the visible displacement in the window by the amount of the max scroll change"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should increase the visible displacement in the droppable by the amount of the max scroll change","location":null,"status":"passed","title":"should increase the visible displacement in the droppable by the amount of the max scroll change"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should do nothing when there is no displacement","location":null,"status":"passed","title":"should do nothing when there is no displacement"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should increase the visible displacement in the window by the amount of the max scroll change","location":null,"status":"passed","title":"should increase the visible displacement in the window by the amount of the max scroll change"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should increase the visible displacement in the droppable by the amount of the max scroll change","location":null,"status":"passed","title":"should increase the visible displacement in the droppable by the amount of the max scroll change"}],"endTime":1674657389975,"message":"","name":"/home/flakie/package/test/unit/state/update-displacement-visibility/speculative-displacement.spec.js","startTime":1674657380670,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should pass if the react peer dep version is met","location":null,"status":"passed","title":"should pass if the react peer dep version is met"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should pass if the react peer dep version is passed","location":null,"status":"passed","title":"should pass if the react peer dep version is passed"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should fail if the react peer dep version is not met","location":null,"status":"passed","title":"should fail if the react peer dep version is not met"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should throw if unable to parse the react version","location":null,"status":"passed","title":"should throw if unable to parse the react version"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should throw if unable to parse the peer dep version","location":null,"status":"passed","title":"should throw if unable to parse the peer dep version"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should allow pre release provided versions","location":null,"status":"passed","title":"should allow pre release provided versions"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should pass on the current repo setup","location":null,"status":"passed","title":"should pass on the current repo setup"}],"endTime":1674657390363,"message":"","name":"/home/flakie/package/test/unit/integration/drag-drop-context/check-react-version.spec.js","startTime":1674657378876,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should hit when dragging element completely covers the list (end edge +1)","location":null,"status":"passed","title":"should hit when dragging element completely covers the list (end edge +1)"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should hit when dragging element completely covers the list (start edge -1)","location":null,"status":"passed","title":"should hit when dragging element completely covers the list (start edge -1)"}],"endTime":1674657392980,"message":"","name":"/home/flakie/package/test/unit/state/get-droppable-over/item-is-totally-over.spec.js","startTime":1674657386873,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should not consider lists that are disabled","location":null,"status":"passed","title":"should not consider lists that are disabled"}],"endTime":1674657393168,"message":"","name":"/home/flakie/package/test/unit/state/get-droppable-over/is-disabled.spec.js","startTime":1674657385470,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should return no impact when home is disabled","location":null,"status":"passed","title":"should return no impact when home is disabled"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should return no impact when foreign is disabled","location":null,"status":"passed","title":"should return no impact when foreign is disabled"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should return no impact when home is disabled","location":null,"status":"passed","title":"should return no impact when home is disabled"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should return no impact when foreign is disabled","location":null,"status":"passed","title":"should return no impact when foreign is disabled"}],"endTime":1674657395372,"message":"","name":"/home/flakie/package/test/unit/state/get-drag-impact/is-disabled.spec.js","startTime":1674657384277,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should not fail an aXe audit","location":null,"status":"passed","title":"should not fail an aXe audit"}],"endTime":1674657395587,"message":"","name":"/home/flakie/package/test/unit/integration/accessibility/axe-audit.spec.js","startTime":1674657376276,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on the vertical axis"],"failureMessages":[],"fullName":"on the vertical axis should move forward on a MOVE_DOWN","location":null,"status":"passed","title":"should move forward on a MOVE_DOWN"},{"ancestorTitles":["on the vertical axis"],"failureMessages":[],"fullName":"on the vertical axis should move backwards on a MOVE_UP","location":null,"status":"passed","title":"should move backwards on a MOVE_UP"},{"ancestorTitles":["on the vertical axis"],"failureMessages":[],"fullName":"on the vertical axis should move cross axis forwards on a MOVE_RIGHT","location":null,"status":"passed","title":"should move cross axis forwards on a MOVE_RIGHT"},{"ancestorTitles":["on the vertical axis"],"failureMessages":[],"fullName":"on the vertical axis should move cross axis backwards on a MOVE_LEFT","location":null,"status":"passed","title":"should move cross axis backwards on a MOVE_LEFT"},{"ancestorTitles":["on the horizontal axis"],"failureMessages":[],"fullName":"on the horizontal axis should move forward on a MOVE_RIGHT","location":null,"status":"passed","title":"should move forward on a MOVE_RIGHT"},{"ancestorTitles":["on the horizontal axis"],"failureMessages":[],"fullName":"on the horizontal axis should move backwards on a MOVE_LEFT","location":null,"status":"passed","title":"should move backwards on a MOVE_LEFT"},{"ancestorTitles":["on the horizontal axis"],"failureMessages":[],"fullName":"on the horizontal axis should move cross axis forwards on a MOVE_DOWN","location":null,"status":"passed","title":"should move cross axis forwards on a MOVE_DOWN"},{"ancestorTitles":["on the horizontal axis"],"failureMessages":[],"fullName":"on the horizontal axis should move cross axis backwards on a MOVE_UP","location":null,"status":"passed","title":"should move cross axis backwards on a MOVE_UP"},{"ancestorTitles":["main axis blocking in the vertical direction"],"failureMessages":[],"fullName":"main axis blocking in the vertical direction should not allow movement on the main axis if lifting in a disabled droppable","location":null,"status":"passed","title":"should not allow movement on the main axis if lifting in a disabled droppable"},{"ancestorTitles":["main axis blocking in the horizontal direction"],"failureMessages":[],"fullName":"main axis blocking in the horizontal direction should not allow movement on the main axis if lifting in a disabled droppable","location":null,"status":"passed","title":"should not allow movement on the main axis if lifting in a disabled droppable"}],"endTime":1674657395966,"message":"","name":"/home/flakie/package/test/unit/state/move-in-direction/move-in-direction.spec.js","startTime":1674657384466,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis","moving beyond start position with own scroll"],"failureMessages":[],"fullName":"on vertical axis moving beyond start position with own scroll should move past other draggables","location":null,"status":"passed","title":"should move past other draggables"},{"ancestorTitles":["on vertical axis","moving back past start position with own scroll"],"failureMessages":[],"fullName":"on vertical axis moving back past start position with own scroll should move back past inHome2","location":null,"status":"passed","title":"should move back past inHome2"},{"ancestorTitles":["on horizontal axis","moving beyond start position with own scroll"],"failureMessages":[],"fullName":"on horizontal axis moving beyond start position with own scroll should move past other draggables","location":null,"status":"passed","title":"should move past other draggables"},{"ancestorTitles":["on horizontal axis","moving back past start position with own scroll"],"failureMessages":[],"fullName":"on horizontal axis moving back past start position with own scroll should move back past inHome2","location":null,"status":"passed","title":"should move back past inHome2"}],"endTime":1674657397574,"message":"","name":"/home/flakie/package/test/unit/state/get-drag-impact/reorder/over-home-list/with-droppable-scroll.spec.js","startTime":1674657383074,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["get best cross axis droppable","on the vertical axis"],"failureMessages":[],"fullName":"get best cross axis droppable on the vertical axis should return the first droppable on the cross axis when moving forward","location":null,"status":"passed","title":"should return the first droppable on the cross axis when moving forward"},{"ancestorTitles":["get best cross axis droppable","on the vertical axis"],"failureMessages":[],"fullName":"get best cross axis droppable on the vertical axis should return the first droppable on the cross axis when moving backward","location":null,"status":"passed","title":"should return the first droppable on the cross axis when moving backward"},{"ancestorTitles":["get best cross axis droppable","on the vertical axis"],"failureMessages":[],"fullName":"get best cross axis droppable on the vertical axis should exclude options that are not in the desired direction","location":null,"status":"passed","title":"should exclude options that are not in the desired direction"},{"ancestorTitles":["get best cross axis droppable","on the vertical axis"],"failureMessages":[],"fullName":"get best cross axis droppable on the vertical axis should exclude options that are not enabled","location":null,"status":"passed","title":"should exclude options that are not enabled"},{"ancestorTitles":["get best cross axis droppable","on the vertical axis"],"failureMessages":[],"fullName":"get best cross axis droppable on the vertical axis should exclude options that are not in the viewport","location":null,"status":"passed","title":"should exclude options that are not in the viewport"},{"ancestorTitles":["get best cross axis droppable","on the vertical axis"],"failureMessages":[],"fullName":"get best cross axis droppable on the vertical axis should exclude options that do not overlap on the main axis","location":null,"status":"passed","title":"should exclude options that do not overlap on the main axis"},{"ancestorTitles":["get best cross axis droppable","on the vertical axis","more than one option share the same crossAxisStart value"],"failureMessages":[],"fullName":"get best cross axis droppable on the vertical axis more than one option share the same crossAxisStart value should return a droppable where the center position (axis.line) of the draggable draggable sits within the size of a droppable","location":null,"status":"passed","title":"should return a droppable where the center position (axis.line) of the draggable draggable sits within the size of a droppable"},{"ancestorTitles":["get best cross axis droppable","on the vertical axis","more than one option share the same crossAxisStart value"],"failureMessages":[],"fullName":"get best cross axis droppable on the vertical axis more than one option share the same crossAxisStart value should account for container clipping","location":null,"status":"passed","title":"should account for container clipping"},{"ancestorTitles":["get best cross axis droppable","on the vertical axis","more than one option share the same crossAxisStart value","center point is not contained within a droppable"],"failureMessages":[],"fullName":"get best cross axis droppable on the vertical axis more than one option share the same crossAxisStart value center point is not contained within a droppable should return the droppable that has the closest corner","location":null,"status":"passed","title":"should return the droppable that has the closest corner"},{"ancestorTitles":["get best cross axis droppable","on the vertical axis","more than one option share the same crossAxisStart value","center point is not contained within a droppable"],"failureMessages":[],"fullName":"get best cross axis droppable on the vertical axis more than one option share the same crossAxisStart value center point is not contained within a droppable should choose the droppable that is furthest back (closest to {x: 0, y: 0} on the screen) in the event of a tie","location":null,"status":"passed","title":"should choose the droppable that is furthest back (closest to {x: 0, y: 0} on the screen) in the event of a tie"},{"ancestorTitles":["get best cross axis droppable","on the horizontal axis"],"failureMessages":[],"fullName":"get best cross axis droppable on the horizontal axis should return the first droppable on the cross axis when moving forward","location":null,"status":"passed","title":"should return the first droppable on the cross axis when moving forward"},{"ancestorTitles":["get best cross axis droppable","on the horizontal axis"],"failureMessages":[],"fullName":"get best cross axis droppable on the horizontal axis should return the first droppable on the cross axis when moving backward","location":null,"status":"passed","title":"should return the first droppable on the cross axis when moving backward"},{"ancestorTitles":["get best cross axis droppable","on the horizontal axis"],"failureMessages":[],"fullName":"get best cross axis droppable on the horizontal axis should exclude options that are not in the desired direction","location":null,"status":"passed","title":"should exclude options that are not in the desired direction"},{"ancestorTitles":["get best cross axis droppable","on the horizontal axis"],"failureMessages":[],"fullName":"get best cross axis droppable on the horizontal axis should exclude options that are not enabled","location":null,"status":"passed","title":"should exclude options that are not enabled"},{"ancestorTitles":["get best cross axis droppable","on the horizontal axis"],"failureMessages":[],"fullName":"get best cross axis droppable on the horizontal axis should exclude options that are not visible in their frame","location":null,"status":"passed","title":"should exclude options that are not visible in their frame"},{"ancestorTitles":["get best cross axis droppable","on the horizontal axis"],"failureMessages":[],"fullName":"get best cross axis droppable on the horizontal axis should exclude options that are not in the viewport","location":null,"status":"passed","title":"should exclude options that are not in the viewport"},{"ancestorTitles":["get best cross axis droppable","on the horizontal axis"],"failureMessages":[],"fullName":"get best cross axis droppable on the horizontal axis should exclude options that do not overlap on the main axis","location":null,"status":"passed","title":"should exclude options that do not overlap on the main axis"},{"ancestorTitles":["get best cross axis droppable","on the horizontal axis","more than one option share the same crossAxisStart value"],"failureMessages":[],"fullName":"get best cross axis droppable on the horizontal axis more than one option share the same crossAxisStart value should return a droppable where the center position (axis.line) of the draggable draggable sits within the size of a droppable","location":null,"status":"passed","title":"should return a droppable where the center position (axis.line) of the draggable draggable sits within the size of a droppable"},{"ancestorTitles":["get best cross axis droppable","on the horizontal axis","more than one option share the same crossAxisStart value","center point is not contained within a droppable"],"failureMessages":[],"fullName":"get best cross axis droppable on the horizontal axis more than one option share the same crossAxisStart value center point is not contained within a droppable should return the droppable that has the closest corner","location":null,"status":"passed","title":"should return the droppable that has the closest corner"},{"ancestorTitles":["get best cross axis droppable","on the horizontal axis","more than one option share the same crossAxisStart value","center point is not contained within a droppable"],"failureMessages":[],"fullName":"get best cross axis droppable on the horizontal axis more than one option share the same crossAxisStart value center point is not contained within a droppable should choose the droppable that is furthest back (closest to {x: 0, y: 0} on the screen) in the event of a tie","location":null,"status":"passed","title":"should choose the droppable that is furthest back (closest to {x: 0, y: 0} on the screen) in the event of a tie"},{"ancestorTitles":["get best cross axis droppable","overlap","moving forward"],"failureMessages":[],"fullName":"get best cross axis droppable overlap moving forward allow overlap as long as the end of the target is after the end of the source","location":null,"status":"passed","title":"allow overlap as long as the end of the target is after the end of the source"},{"ancestorTitles":["get best cross axis droppable","overlap","moving forward"],"failureMessages":[],"fullName":"get best cross axis droppable overlap moving forward should not allow movement when the droppables are on top of each other","location":null,"status":"passed","title":"should not allow movement when the droppables are on top of each other"},{"ancestorTitles":["get best cross axis droppable","overlap","moving forward"],"failureMessages":[],"fullName":"get best cross axis droppable overlap moving forward should not allow movement the right edge of the source is not greater than the right edge of the target","location":null,"status":"passed","title":"should not allow movement the right edge of the source is not greater than the right edge of the target"},{"ancestorTitles":["get best cross axis droppable","overlap","moving backwards"],"failureMessages":[],"fullName":"get best cross axis droppable overlap moving backwards should allow overlap as long as the start of the target is before the start of the source","location":null,"status":"passed","title":"should allow overlap as long as the start of the target is before the start of the source"},{"ancestorTitles":["get best cross axis droppable","overlap","moving backwards"],"failureMessages":[],"fullName":"get best cross axis droppable overlap moving backwards should not allow movement when the droppables are on top of each other","location":null,"status":"passed","title":"should not allow movement when the droppables are on top of each other"},{"ancestorTitles":["get best cross axis droppable","overlap","moving backwards"],"failureMessages":[],"fullName":"get best cross axis droppable overlap moving backwards should not allow movement left edge of the source is not greater than the left edge of the target","location":null,"status":"passed","title":"should not allow movement left edge of the source is not greater than the left edge of the target"}],"endTime":1674657400475,"message":"","name":"/home/flakie/package/test/unit/state/move-in-direction/move-cross-axis/get-best-cross-axis-droppable.spec.js","startTime":1674657388667,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should update the frame scroll and the subject","location":null,"status":"passed","title":"should update the frame scroll and the subject"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should allow scrolling beyond the max position","location":null,"status":"passed","title":"should allow scrolling beyond the max position"}],"endTime":1674657400766,"message":"","name":"/home/flakie/package/test/unit/state/droppable/scroll-droppable.spec.js","startTime":1674657387469,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should have no movement when at rest","location":null,"status":"passed","title":"should have no movement when at rest"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should have a resting snapshot","location":null,"status":"passed","title":"should have a resting snapshot"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should be provided with its rubric","location":null,"status":"passed","title":"should be provided with its rubric"}],"endTime":1674657400866,"message":"","name":"/home/flakie/package/test/unit/integration/draggable/resting.spec.js","startTime":1674657389870,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should only fire a single onClose event","location":null,"status":"passed","title":"should only fire a single onClose event"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not fire an onClose if not closing when a transitionend occurs","location":null,"status":"passed","title":"should not fire an onClose if not closing when a transitionend occurs"}],"endTime":1674657400964,"message":"","name":"/home/flakie/package/test/unit/view/placeholder/on-close.spec.js","startTime":1674657393068,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should throw if no droppableId is provided","location":null,"status":"passed","title":"should throw if no droppableId is provided"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should throw if isDropDisabled is set to null","location":null,"status":"passed","title":"should throw if isDropDisabled is set to null"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should throw if isCombineEnabled is set to null","location":null,"status":"passed","title":"should throw if isCombineEnabled is set to null"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should throw if ignoreContainerClipping is set to null","location":null,"status":"passed","title":"should throw if ignoreContainerClipping is set to null"}],"endTime":1674657400966,"message":"","name":"/home/flakie/package/test/unit/view/droppable/own-props-validation.spec.js","startTime":1674657390464,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["dimension registration"],"failureMessages":[],"fullName":"dimension registration should register itself when mounting","location":null,"status":"passed","title":"should register itself when mounting"},{"ancestorTitles":["dimension registration"],"failureMessages":[],"fullName":"dimension registration should unregister itself when unmounting","location":null,"status":"passed","title":"should unregister itself when unmounting"},{"ancestorTitles":["dimension registration"],"failureMessages":[],"fullName":"dimension registration should update its registration when a descriptor property changes","location":null,"status":"passed","title":"should update its registration when a descriptor property changes"},{"ancestorTitles":["dimension registration"],"failureMessages":[],"fullName":"dimension registration should not update its registration when a descriptor property does not change on an update","location":null,"status":"passed","title":"should not update its registration when a descriptor property does not change on an update"},{"ancestorTitles":["dimension publishing"],"failureMessages":[],"fullName":"dimension publishing should publish the dimensions of the target when requested","location":null,"status":"passed","title":"should publish the dimensions of the target when requested"},{"ancestorTitles":["dimension publishing"],"failureMessages":[],"fullName":"dimension publishing should consider any margins when calculating dimensions","location":null,"status":"passed","title":"should consider any margins when calculating dimensions"},{"ancestorTitles":["dimension publishing"],"failureMessages":[],"fullName":"dimension publishing should consider the window scroll when calculating dimensions","location":null,"status":"passed","title":"should consider the window scroll when calculating dimensions"},{"ancestorTitles":["dimension publishing"],"failureMessages":[],"fullName":"dimension publishing should throw an error if no ref is provided when attempting to get a dimension","location":null,"status":"passed","title":"should throw an error if no ref is provided when attempting to get a dimension"}],"endTime":1674657401076,"message":"","name":"/home/flakie/package/test/unit/view/use-draggable-publisher.spec.js","startTime":1674657387088,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on the vertical axis"],"failureMessages":[],"fullName":"on the vertical axis should find the closest draggable based on the items visible position (without initial displacement)","location":null,"status":"passed","title":"should find the closest draggable based on the items visible position (without initial displacement)"},{"ancestorTitles":["on the vertical axis"],"failureMessages":[],"fullName":"on the vertical axis should ignore draggables backward that have no total visibility","location":null,"status":"passed","title":"should ignore draggables backward that have no total visibility"},{"ancestorTitles":["on the horizontal axis"],"failureMessages":[],"fullName":"on the horizontal axis should find the closest draggable based on the items visible position (without initial displacement)","location":null,"status":"passed","title":"should find the closest draggable based on the items visible position (without initial displacement)"},{"ancestorTitles":["on the horizontal axis"],"failureMessages":[],"fullName":"on the horizontal axis should ignore draggables backward that have no total visibility","location":null,"status":"passed","title":"should ignore draggables backward that have no total visibility"}],"endTime":1674657401275,"message":"","name":"/home/flakie/package/test/unit/state/move-in-direction/move-cross-axis/get-closest-draggable/with-starting-displacement.spec.js","startTime":1674657390070,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis","moving forward"],"failureMessages":[],"fullName":"on vertical axis moving forward should be setup correctly","location":null,"status":"passed","title":"should be setup correctly"},{"ancestorTitles":["on vertical axis","moving forward"],"failureMessages":[],"fullName":"on vertical axis moving forward should request a jump scroll for movement that is outside of the viewport","location":null,"status":"passed","title":"should request a jump scroll for movement that is outside of the viewport"},{"ancestorTitles":["on vertical axis","moving backward"],"failureMessages":[],"fullName":"on vertical axis moving backward should be setup correctly","location":null,"status":"passed","title":"should be setup correctly"},{"ancestorTitles":["on vertical axis","moving backward"],"failureMessages":[],"fullName":"on vertical axis moving backward should request a jump scroll for movement that is outside of the viewport","location":null,"status":"passed","title":"should request a jump scroll for movement that is outside of the viewport"},{"ancestorTitles":["on horizontal axis","moving forward"],"failureMessages":[],"fullName":"on horizontal axis moving forward should be setup correctly","location":null,"status":"passed","title":"should be setup correctly"},{"ancestorTitles":["on horizontal axis","moving forward"],"failureMessages":[],"fullName":"on horizontal axis moving forward should request a jump scroll for movement that is outside of the viewport","location":null,"status":"passed","title":"should request a jump scroll for movement that is outside of the viewport"},{"ancestorTitles":["on horizontal axis","moving backward"],"failureMessages":[],"fullName":"on horizontal axis moving backward should be setup correctly","location":null,"status":"passed","title":"should be setup correctly"},{"ancestorTitles":["on horizontal axis","moving backward"],"failureMessages":[],"fullName":"on horizontal axis moving backward should request a jump scroll for movement that is outside of the viewport","location":null,"status":"passed","title":"should request a jump scroll for movement that is outside of the viewport"}],"endTime":1674657402568,"message":"","name":"/home/flakie/package/test/unit/state/move-in-direction/move-to-next-place/moving-to-invisible-place/not-visible-in-viewport.spec.js","startTime":1674657395469,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should not create a combine impact when combining is disabled","location":null,"status":"passed","title":"should not create a combine impact when combining is disabled"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should not create a combine impact when combining is disabled","location":null,"status":"passed","title":"should not create a combine impact when combining is disabled"}],"endTime":1674657402769,"message":"","name":"/home/flakie/package/test/unit/state/get-drag-impact/combine/is-combine-disabled.spec.js","startTime":1674657395771,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should update the window details scroll","location":null,"status":"passed","title":"should update the window details scroll"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should correctly update scroll across multiple movements (forwards)","location":null,"status":"passed","title":"should correctly update scroll across multiple movements (forwards)"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should correctly update scroll across multiple movements (backwards)","location":null,"status":"passed","title":"should correctly update scroll across multiple movements (backwards)"}],"endTime":1674657404365,"message":"","name":"/home/flakie/package/test/unit/state/scroll-viewport.spec.js","startTime":1674657396166,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should no longer render the original draggable while dragging","location":null,"status":"passed","title":"should no longer render the original draggable while dragging"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should render a dragging item into the container","location":null,"status":"passed","title":"should render a dragging item into the container"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should give the clone the starting location","location":null,"status":"passed","title":"should give the clone the starting location"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should allow reordering other items when dropping","location":null,"status":"passed","title":"should allow reordering other items when dropping"}],"endTime":1674657404770,"message":"","name":"/home/flakie/package/test/unit/integration/droppable/clone.spec.js","startTime":1674657385066,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should move to the new home offset","location":null,"status":"passed","title":"should move to the new home offset"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should maintain combine information","location":null,"status":"passed","title":"should maintain combine information"}],"endTime":1674657404772,"message":"","name":"/home/flakie/package/test/unit/view/connected-draggable/dropping.spec.js","startTime":1674657400775,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should insert nonce into style tag","location":null,"status":"passed","title":"should insert nonce into style tag"}],"endTime":1674657404964,"message":"","name":"/home/flakie/package/test/unit/view/drag-drop-context/content-security-protection-nonce.spec.js","startTime":1674657398164,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["with: mouse"],"failureMessages":[],"fullName":"with: mouse should not start a drag on a parent if a child drag handle has already received the event","location":null,"status":"passed","title":"should not start a drag on a parent if a child drag handle has already received the event"},{"ancestorTitles":["with: mouse"],"failureMessages":[],"fullName":"with: mouse should start a drag on a pare~nt the event is trigged on the parent","location":null,"status":"passed","title":"should start a drag on a pare~nt the event is trigged on the parent"},{"ancestorTitles":["with: keyboard"],"failureMessages":[],"fullName":"with: keyboard should not start a drag on a parent if a child drag handle has already received the event","location":null,"status":"passed","title":"should not start a drag on a parent if a child drag handle has already received the event"},{"ancestorTitles":["with: keyboard"],"failureMessages":[],"fullName":"with: keyboard should start a drag on a pare~nt the event is trigged on the parent","location":null,"status":"passed","title":"should start a drag on a pare~nt the event is trigged on the parent"},{"ancestorTitles":["with: touch"],"failureMessages":[],"fullName":"with: touch should not start a drag on a parent if a child drag handle has already received the event","location":null,"status":"passed","title":"should not start a drag on a parent if a child drag handle has already received the event"},{"ancestorTitles":["with: touch"],"failureMessages":[],"fullName":"with: touch should start a drag on a pare~nt the event is trigged on the parent","location":null,"status":"passed","title":"should start a drag on a pare~nt the event is trigged on the parent"}],"endTime":1674657405866,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/shared-behaviours/nested-handles.spec.js","startTime":1674657385777,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should update when a placeholder animation finishes","location":null,"status":"passed","title":"should update when a placeholder animation finishes"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should update when a placeholder finishes and the list is not dragged over","location":null,"status":"passed","title":"should update when a placeholder finishes and the list is not dragged over"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not update when dropping","location":null,"status":"passed","title":"should not update when dropping"}],"endTime":1674657406276,"message":"","name":"/home/flakie/package/test/unit/view/droppable/update-max-window-scroll.spec.js","startTime":1674657402574,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should select clip a subject in a frame","location":null,"status":"passed","title":"should select clip a subject in a frame"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should return null when the subject it outside the frame on any side","location":null,"status":"passed","title":"should return null when the subject it outside the frame on any side"}],"endTime":1674657408665,"message":"","name":"/home/flakie/package/test/unit/state/droppable/clip.spec.js","startTime":1674657404777,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should animate a drop to the required offset","location":null,"status":"passed","title":"should animate a drop to the required offset"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should provide the correct snapshot to consumers","location":null,"status":"passed","title":"should provide the correct snapshot to consumers"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should animate scale and opacity when combining","location":null,"status":"passed","title":"should animate scale and opacity when combining"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not trigger a drop animation finished if a transitionend occurs that is a non-primary property","location":null,"status":"passed","title":"should not trigger a drop animation finished if a transitionend occurs that is a non-primary property"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not trigger a drop if a transitionend event occurs when not dropping","location":null,"status":"passed","title":"should not trigger a drop if a transitionend event occurs when not dropping"}],"endTime":1674657408666,"message":"","name":"/home/flakie/package/test/unit/integration/draggable/dropping.spec.js","startTime":1674657393268,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should return the a small amount if not moving anywhere","location":null,"status":"passed","title":"should return the a small amount if not moving anywhere"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should return higher drop times the further away you are","location":null,"status":"passed","title":"should return higher drop times the further away you are"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should return faster drop times if cancelling","location":null,"status":"passed","title":"should return faster drop times if cancelling"}],"endTime":1674657408667,"message":"","name":"/home/flakie/package/test/unit/state/middleware/drop/get-drop-duration.spec.js","startTime":1674657402967,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should stop the auto scroller when a DROP_ANIMATE is fired","location":null,"status":"passed","title":"should stop the auto scroller when a DROP_ANIMATE is fired"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should stop the auto scroller when a DROP_ANIMATE is fired","location":null,"status":"passed","title":"should stop the auto scroller when a DROP_ANIMATE is fired"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should stop the auto scroller when a DROP_COMPLETE is fired","location":null,"status":"passed","title":"should stop the auto scroller when a DROP_COMPLETE is fired"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should stop the auto scroller when a DROP_COMPLETE is fired","location":null,"status":"passed","title":"should stop the auto scroller when a DROP_COMPLETE is fired"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should stop the auto scroller when a FLUSH is fired","location":null,"status":"passed","title":"should stop the auto scroller when a FLUSH is fired"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should fire a scroll when there is an update","location":null,"status":"passed","title":"should fire a scroll when there is an update"}],"endTime":1674657408670,"message":"","name":"/home/flakie/package/test/unit/state/middleware/auto-scroll.spec.js","startTime":1674657401167,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["can partially scroll"],"failureMessages":[],"fullName":"can partially scroll should return true if not scrolling anywhere","location":null,"status":"passed","title":"should return true if not scrolling anywhere"},{"ancestorTitles":["can partially scroll"],"failureMessages":[],"fullName":"can partially scroll should return true if scrolling to a boundary","location":null,"status":"passed","title":"should return true if scrolling to a boundary"},{"ancestorTitles":["can partially scroll"],"failureMessages":[],"fullName":"can partially scroll should return true if moving in any direction within the allowable scroll region","location":null,"status":"passed","title":"should return true if moving in any direction within the allowable scroll region"},{"ancestorTitles":["can partially scroll"],"failureMessages":[],"fullName":"can partially scroll should return true if able to partially move in both directions","location":null,"status":"passed","title":"should return true if able to partially move in both directions"},{"ancestorTitles":["can partially scroll"],"failureMessages":[],"fullName":"can partially scroll should return true if can only partially move in one direction","location":null,"status":"passed","title":"should return true if can only partially move in one direction"},{"ancestorTitles":["can partially scroll"],"failureMessages":[],"fullName":"can partially scroll should return false if on the min point and move backward in any direction","location":null,"status":"passed","title":"should return false if on the min point and move backward in any direction"},{"ancestorTitles":["can partially scroll"],"failureMessages":[],"fullName":"can partially scroll should return false if on the max point and move forward in any direction","location":null,"status":"passed","title":"should return false if on the max point and move forward in any direction"},{"ancestorTitles":["can partially scroll"],"failureMessages":[],"fullName":"can partially scroll should return true if moving backwards and the current scroll is greater than the max scroll","location":null,"status":"passed","title":"should return true if moving backwards and the current scroll is greater than the max scroll"},{"ancestorTitles":["can partially scroll"],"failureMessages":[],"fullName":"can partially scroll should return false if moving forwards and the current scroll is greater than the max scroll","location":null,"status":"passed","title":"should return false if moving forwards and the current scroll is greater than the max scroll"},{"ancestorTitles":["get overlap","returning the remainder"],"failureMessages":[],"fullName":"get overlap returning the remainder should return overlap on a single axis","location":null,"status":"passed","title":"should return overlap on a single axis"},{"ancestorTitles":["get overlap","returning the remainder"],"failureMessages":[],"fullName":"get overlap returning the remainder should return overlap on two axis in the same direction","location":null,"status":"passed","title":"should return overlap on two axis in the same direction"},{"ancestorTitles":["get overlap","returning the remainder"],"failureMessages":[],"fullName":"get overlap returning the remainder should return overlap on two axis in different directions","location":null,"status":"passed","title":"should return overlap on two axis in different directions"},{"ancestorTitles":["get overlap","returning the remainder"],"failureMessages":[],"fullName":"get overlap returning the remainder should trim values that can be scrolled","location":null,"status":"passed","title":"should trim values that can be scrolled"},{"ancestorTitles":["can scroll droppable"],"failureMessages":[],"fullName":"can scroll droppable should return false if the droppable is not scrollable","location":null,"status":"passed","title":"should return false if the droppable is not scrollable"},{"ancestorTitles":["can scroll droppable"],"failureMessages":[],"fullName":"can scroll droppable should return true if the droppable is able to be scrolled","location":null,"status":"passed","title":"should return true if the droppable is able to be scrolled"},{"ancestorTitles":["can scroll droppable"],"failureMessages":[],"fullName":"can scroll droppable should return false if the droppable is not able to be scrolled","location":null,"status":"passed","title":"should return false if the droppable is not able to be scrolled"},{"ancestorTitles":["can scroll window"],"failureMessages":[],"fullName":"can scroll window should return true if the window is able to be scrolled","location":null,"status":"passed","title":"should return true if the window is able to be scrolled"},{"ancestorTitles":["can scroll window"],"failureMessages":[],"fullName":"can scroll window should return false if the window is not able to be scrolled","location":null,"status":"passed","title":"should return false if the window is not able to be scrolled"},{"ancestorTitles":["get droppable overlap"],"failureMessages":[],"fullName":"get droppable overlap should return null if there is no scroll container","location":null,"status":"passed","title":"should return null if there is no scroll container"},{"ancestorTitles":["get droppable overlap"],"failureMessages":[],"fullName":"get droppable overlap should return null if the droppable cannot be scrolled","location":null,"status":"passed","title":"should return null if the droppable cannot be scrolled"},{"ancestorTitles":["get droppable overlap"],"failureMessages":[],"fullName":"get droppable overlap should return the overlap","location":null,"status":"passed","title":"should return the overlap"},{"ancestorTitles":["get droppable overlap"],"failureMessages":[],"fullName":"get droppable overlap should return null if there is no overlap","location":null,"status":"passed","title":"should return null if there is no overlap"},{"ancestorTitles":["get window overlap"],"failureMessages":[],"fullName":"get window overlap should return null if the window cannot be scrolled","location":null,"status":"passed","title":"should return null if the window cannot be scrolled"},{"ancestorTitles":["get window overlap"],"failureMessages":[],"fullName":"get window overlap should return the overlap","location":null,"status":"passed","title":"should return the overlap"},{"ancestorTitles":["get window overlap"],"failureMessages":[],"fullName":"get window overlap should return null if there is no overlap","location":null,"status":"passed","title":"should return null if there is no overlap"}],"endTime":1674657409270,"message":"","name":"/home/flakie/package/test/unit/state/auto-scroll/can-scroll.spec.js","startTime":1674657401965,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should log an error if draggableId is not a string","location":null,"status":"passed","title":"should log an error if draggableId is not a string"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should log an error if index is not an integer","location":null,"status":"passed","title":"should log an error if index is not an integer"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should log an error if innerRef is not provided","location":null,"status":"passed","title":"should log an error if innerRef is not provided"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should log an error if innerRef is an SVG","location":null,"status":"passed","title":"should log an error if innerRef is an SVG"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should log an error if no drag handle props are applied","location":null,"status":"passed","title":"should log an error if no drag handle props are applied"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should log an error if the draggable is disabled as there will be no drag handle","location":null,"status":"passed","title":"should log an error if the draggable is disabled as there will be no drag handle"}],"endTime":1674657410370,"message":"","name":"/home/flakie/package/test/unit/integration/draggable/validation.spec.js","startTime":1674657400969,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["should immediately publish updates"],"failureMessages":[],"fullName":"should immediately publish updates should immediately publish the scroll offset of the closest scrollable","location":null,"status":"passed","title":"should immediately publish the scroll offset of the closest scrollable"},{"ancestorTitles":["should immediately publish updates"],"failureMessages":[],"fullName":"should immediately publish updates should not fire a scroll if the value has not changed since the previous call","location":null,"status":"passed","title":"should not fire a scroll if the value has not changed since the previous call"},{"ancestorTitles":["should schedule publish updates"],"failureMessages":[],"fullName":"should schedule publish updates should publish the scroll offset of the closest scrollable","location":null,"status":"passed","title":"should publish the scroll offset of the closest scrollable"},{"ancestorTitles":["should schedule publish updates"],"failureMessages":[],"fullName":"should schedule publish updates should throttle multiple scrolls into a animation frame","location":null,"status":"passed","title":"should throttle multiple scrolls into a animation frame"},{"ancestorTitles":["should schedule publish updates"],"failureMessages":[],"fullName":"should schedule publish updates should not fire a scroll if the value has not changed since the previous frame","location":null,"status":"passed","title":"should not fire a scroll if the value has not changed since the previous frame"},{"ancestorTitles":["should schedule publish updates"],"failureMessages":[],"fullName":"should schedule publish updates should not publish a scroll update after requested not to update while an animation frame is occurring","location":null,"status":"passed","title":"should not publish a scroll update after requested not to update while an animation frame is occurring"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should stop watching scroll when no longer required to publish","location":null,"status":"passed","title":"should stop watching scroll when no longer required to publish"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should stop watching for scroll events when the component is unmounted","location":null,"status":"passed","title":"should stop watching for scroll events when the component is unmounted"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should throw an error if asked to watch a scroll when already listening for scroll changes","location":null,"status":"passed","title":"should throw an error if asked to watch a scroll when already listening for scroll changes"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should add and remove events with the same event options","location":null,"status":"passed","title":"should add and remove events with the same event options"}],"endTime":1674657412464,"message":"","name":"/home/flakie/package/test/unit/view/use-droppable-publisher/scroll-watching.spec.js","startTime":1674657400968,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on the vertical axis"],"failureMessages":[],"fullName":"on the vertical axis should return the closest draggable","location":null,"status":"passed","title":"should return the closest draggable"},{"ancestorTitles":["on the vertical axis"],"failureMessages":[],"fullName":"on the vertical axis should return null if there are no draggables in the droppable","location":null,"status":"passed","title":"should return null if there are no draggables in the droppable"},{"ancestorTitles":["on the vertical axis"],"failureMessages":[],"fullName":"on the vertical axis should take into account the change in droppable scroll","location":null,"status":"passed","title":"should take into account the change in droppable scroll"},{"ancestorTitles":["on the vertical axis","removal of draggables that are visible"],"failureMessages":[],"fullName":"on the vertical axis removal of draggables that are visible should ignore draggables backward that have no total visiblity","location":null,"status":"passed","title":"should ignore draggables backward that have no total visiblity"},{"ancestorTitles":["on the vertical axis","removal of draggables that are visible"],"failureMessages":[],"fullName":"on the vertical axis removal of draggables that are visible should ignore draggables that have backwards partial visiblility","location":null,"status":"passed","title":"should ignore draggables that have backwards partial visiblility"},{"ancestorTitles":["on the vertical axis","removal of draggables that are visible"],"failureMessages":[],"fullName":"on the vertical axis removal of draggables that are visible should ignore draggables that have forward partial visiblility","location":null,"status":"passed","title":"should ignore draggables that have forward partial visiblility"},{"ancestorTitles":["on the vertical axis","removal of draggables that are visible"],"failureMessages":[],"fullName":"on the vertical axis removal of draggables that are visible should ignore draggables forward that have no visiblity","location":null,"status":"passed","title":"should ignore draggables forward that have no visiblity"},{"ancestorTitles":["on the vertical axis","removal of draggables that are visible"],"failureMessages":[],"fullName":"on the vertical axis removal of draggables that are visible should ignore draggables that are outside of the viewport","location":null,"status":"passed","title":"should ignore draggables that are outside of the viewport"},{"ancestorTitles":["on the vertical axis","removal of draggables that are visible"],"failureMessages":[],"fullName":"on the vertical axis removal of draggables that are visible should return null if there are no visible targets","location":null,"status":"passed","title":"should return null if there are no visible targets"},{"ancestorTitles":["on the vertical axis"],"failureMessages":[],"fullName":"on the vertical axis should return the draggable that is first on the main axis in the event of a tie","location":null,"status":"passed","title":"should return the draggable that is first on the main axis in the event of a tie"},{"ancestorTitles":["on the horizontal axis"],"failureMessages":[],"fullName":"on the horizontal axis should return the closest draggable","location":null,"status":"passed","title":"should return the closest draggable"},{"ancestorTitles":["on the horizontal axis"],"failureMessages":[],"fullName":"on the horizontal axis should return null if there are no draggables in the droppable","location":null,"status":"passed","title":"should return null if there are no draggables in the droppable"},{"ancestorTitles":["on the horizontal axis"],"failureMessages":[],"fullName":"on the horizontal axis should take into account the change in droppable scroll","location":null,"status":"passed","title":"should take into account the change in droppable scroll"},{"ancestorTitles":["on the horizontal axis","removal of draggables that are visible"],"failureMessages":[],"fullName":"on the horizontal axis removal of draggables that are visible should ignore draggables backward that have no total visiblity","location":null,"status":"passed","title":"should ignore draggables backward that have no total visiblity"},{"ancestorTitles":["on the horizontal axis","removal of draggables that are visible"],"failureMessages":[],"fullName":"on the horizontal axis removal of draggables that are visible should ignore draggables that have backwards partial visiblility","location":null,"status":"passed","title":"should ignore draggables that have backwards partial visiblility"},{"ancestorTitles":["on the horizontal axis","removal of draggables that are visible"],"failureMessages":[],"fullName":"on the horizontal axis removal of draggables that are visible should ignore draggables that have forward partial visiblility","location":null,"status":"passed","title":"should ignore draggables that have forward partial visiblility"},{"ancestorTitles":["on the horizontal axis","removal of draggables that are visible"],"failureMessages":[],"fullName":"on the horizontal axis removal of draggables that are visible should ignore draggables forward that have no visiblity","location":null,"status":"passed","title":"should ignore draggables forward that have no visiblity"},{"ancestorTitles":["on the horizontal axis","removal of draggables that are visible"],"failureMessages":[],"fullName":"on the horizontal axis removal of draggables that are visible should ignore draggables that are outside of the viewport","location":null,"status":"passed","title":"should ignore draggables that are outside of the viewport"},{"ancestorTitles":["on the horizontal axis","removal of draggables that are visible"],"failureMessages":[],"fullName":"on the horizontal axis removal of draggables that are visible should return null if there are no visible targets","location":null,"status":"passed","title":"should return null if there are no visible targets"},{"ancestorTitles":["on the horizontal axis"],"failureMessages":[],"fullName":"on the horizontal axis should return the draggable that is first on the main axis in the event of a tie","location":null,"status":"passed","title":"should return the draggable that is first on the main axis in the event of a tie"}],"endTime":1674657413169,"message":"","name":"/home/flakie/package/test/unit/state/move-in-direction/move-cross-axis/get-closest-draggable/without-starting-displacement.spec.js","startTime":1674657401367,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should only fire a single transitionend event a single time when transitioning multiple properties","location":null,"status":"passed","title":"should only fire a single transitionend event a single time when transitioning multiple properties"}],"endTime":1674657413572,"message":"","name":"/home/flakie/package/test/unit/view/placeholder/on-transition-end.spec.js","startTime":1674657406476,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should take into account droppable scroll","location":null,"status":"passed","title":"should take into account droppable scroll"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should take into account droppable scroll","location":null,"status":"passed","title":"should take into account droppable scroll"}],"endTime":1674657413768,"message":"","name":"/home/flakie/package/test/unit/state/get-drag-impact/combine/with-droppable-scroll.spec.js","startTime":1674657404970,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should recalculate after critical (something added)","location":null,"status":"passed","title":"should recalculate after critical (something added)"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should recalculate after critical (something removed)","location":null,"status":"passed","title":"should recalculate after critical (something removed)"}],"endTime":1674657413769,"message":"","name":"/home/flakie/package/test/unit/state/publish-while-dragging/recompute-after-critical.spec.js","startTime":1674657404370,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["is over foreign"],"failureMessages":[],"fullName":"is over foreign should log a warning when mounting","location":null,"status":"passed","title":"should log a warning when mounting"},{"ancestorTitles":["is over foreign"],"failureMessages":[],"fullName":"is over foreign should log a warning when updating","location":null,"status":"passed","title":"should log a warning when updating"},{"ancestorTitles":["is not over foreign"],"failureMessages":[],"fullName":"is not over foreign should not log a warning when mounting","location":null,"status":"passed","title":"should not log a warning when mounting"},{"ancestorTitles":["is not over foreign"],"failureMessages":[],"fullName":"is not over foreign should not log a warning when updating","location":null,"status":"passed","title":"should not log a warning when updating"}],"endTime":1674657417867,"message":"","name":"/home/flakie/package/test/unit/view/droppable/placeholder-setup-warning.spec.js","startTime":1674657408676,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should recompute a displacement","location":null,"status":"passed","title":"should recompute a displacement"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should allow the displacement animation to be forced","location":null,"status":"passed","title":"should allow the displacement animation to be forced"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should recompute a displacement","location":null,"status":"passed","title":"should recompute a displacement"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should allow the displacement animation to be forced","location":null,"status":"passed","title":"should allow the displacement animation to be forced"}],"endTime":1674657418370,"message":"","name":"/home/flakie/package/test/unit/state/update-displacement-visibility/recompute.spec.js","startTime":1674657412470,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should move to the DRAGGING phase if was in the COLLECTING phase","location":null,"status":"passed","title":"should move to the DRAGGING phase if was in the COLLECTING phase"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should move into a non-waiting DROP_PENDING phase if was in a DROP_PENDING phase","location":null,"status":"passed","title":"should move into a non-waiting DROP_PENDING phase if was in a DROP_PENDING phase"}],"endTime":1674657418474,"message":"","name":"/home/flakie/package/test/unit/state/publish-while-dragging/phase-change.spec.js","startTime":1674657408673,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should return nothing if already over the home","location":null,"status":"passed","title":"should return nothing if already over the home"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should return the difference between the current client position and where it needs to be","location":null,"status":"passed","title":"should return the difference between the current client position and where it needs to be"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should account for a collapsing home draggable when merging","location":null,"status":"passed","title":"should account for a collapsing home draggable when merging"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should account for the scroll of your home list if you are not over any list","location":null,"status":"passed","title":"should account for the scroll of your home list if you are not over any list"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should return nothing if already over the home","location":null,"status":"passed","title":"should return nothing if already over the home"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should return the difference between the current client position and where it needs to be","location":null,"status":"passed","title":"should return the difference between the current client position and where it needs to be"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should account for a collapsing home draggable when merging","location":null,"status":"passed","title":"should account for a collapsing home draggable when merging"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should account for the scroll of your home list if you are not over any list","location":null,"status":"passed","title":"should account for the scroll of your home list if you are not over any list"}],"endTime":1674657418971,"message":"","name":"/home/flakie/package/test/unit/state/middleware/drop/drop-position.spec.js","startTime":1674657409878,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis","moving onto displaced item"],"failureMessages":[],"fullName":"on vertical axis moving onto displaced item should move onto a target once it hits (1/5) of the targets size ","location":null,"status":"passed","title":"should move onto a target once it hits (1/5) of the targets size "},{"ancestorTitles":["on vertical axis","moving onto displaced item"],"failureMessages":[],"fullName":"on vertical axis moving onto displaced item should remain displaced until the bottom of the dragging item goes onto the (4/5) mark","location":null,"status":"passed","title":"should remain displaced until the bottom of the dragging item goes onto the (4/5) mark"},{"ancestorTitles":["on vertical axis","moving backwards onto un displaced item"],"failureMessages":[],"fullName":"on vertical axis moving backwards onto un displaced item should move backwards onto an item that has shifted backwards","location":null,"status":"passed","title":"should move backwards onto an item that has shifted backwards"},{"ancestorTitles":["on vertical axis","moving backwards onto un displaced item"],"failureMessages":[],"fullName":"on vertical axis moving backwards onto un displaced item should no longer combine with an item once it hits the top threshold","location":null,"status":"passed","title":"should no longer combine with an item once it hits the top threshold"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should understand that when re-entering a list, items that started displaced no longer are","location":null,"status":"passed","title":"should understand that when re-entering a list, items that started displaced no longer are"},{"ancestorTitles":["on horizontal axis","moving onto displaced item"],"failureMessages":[],"fullName":"on horizontal axis moving onto displaced item should move onto a target once it hits (1/5) of the targets size ","location":null,"status":"passed","title":"should move onto a target once it hits (1/5) of the targets size "},{"ancestorTitles":["on horizontal axis","moving onto displaced item"],"failureMessages":[],"fullName":"on horizontal axis moving onto displaced item should remain displaced until the bottom of the dragging item goes onto the (4/5) mark","location":null,"status":"passed","title":"should remain displaced until the bottom of the dragging item goes onto the (4/5) mark"},{"ancestorTitles":["on horizontal axis","moving backwards onto un displaced item"],"failureMessages":[],"fullName":"on horizontal axis moving backwards onto un displaced item should move backwards onto an item that has shifted backwards","location":null,"status":"passed","title":"should move backwards onto an item that has shifted backwards"},{"ancestorTitles":["on horizontal axis","moving backwards onto un displaced item"],"failureMessages":[],"fullName":"on horizontal axis moving backwards onto un displaced item should no longer combine with an item once it hits the top threshold","location":null,"status":"passed","title":"should no longer combine with an item once it hits the top threshold"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should understand that when re-entering a list, items that started displaced no longer are","location":null,"status":"passed","title":"should understand that when re-entering a list, items that started displaced no longer are"}],"endTime":1674657419671,"message":"","name":"/home/flakie/package/test/unit/state/get-drag-impact/combine/started-after-critical.spec.js","startTime":1674657408768,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["with: mouse"],"failureMessages":[],"fullName":"with: mouse should not abort a drag if a parent render occurs","location":null,"status":"passed","title":"should not abort a drag if a parent render occurs"},{"ancestorTitles":["with: keyboard"],"failureMessages":[],"fullName":"with: keyboard should not abort a drag if a parent render occurs","location":null,"status":"passed","title":"should not abort a drag if a parent render occurs"},{"ancestorTitles":["with: touch"],"failureMessages":[],"fullName":"with: touch should not abort a drag if a parent render occurs","location":null,"status":"passed","title":"should not abort a drag if a parent render occurs"}],"endTime":1674657420364,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/shared-behaviours/parent-rendering-should-not-kill-drag.spec.js","startTime":1674657404965,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should publish updates to the enabled state when dragging","location":null,"status":"passed","title":"should publish updates to the enabled state when dragging"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not publish updates to the enabled state when there is no drag","location":null,"status":"passed","title":"should not publish updates to the enabled state when there is no drag"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not publish updates when there is no change","location":null,"status":"passed","title":"should not publish updates when there is no change"}],"endTime":1674657421066,"message":"","name":"/home/flakie/package/test/unit/view/use-droppable-publisher/is-combined-enabled-change.spec.js","startTime":1674657408768,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis","moving into an unpopulated list"],"failureMessages":[],"fullName":"on vertical axis moving into an unpopulated list should move into the first position of the list","location":null,"status":"passed","title":"should move into the first position of the list"},{"ancestorTitles":["on vertical axis","moving into an unpopulated list","only move into first position if it is visible"],"failureMessages":[],"fullName":"on vertical axis moving into an unpopulated list only move into first position if it is visible should not move into the start of list if the position is not visible due to droppable scroll","location":null,"status":"passed","title":"should not move into the start of list if the position is not visible due to droppable scroll"},{"ancestorTitles":["on vertical axis","moving into an unpopulated list","only move into first position if it is visible"],"failureMessages":[],"fullName":"on vertical axis moving into an unpopulated list only move into first position if it is visible should not move into the start of list if the position is not visible due to page scroll","location":null,"status":"passed","title":"should not move into the start of list if the position is not visible due to page scroll"},{"ancestorTitles":["on vertical axis","moving into an unpopulated list","only move into first position if it is visible"],"failureMessages":[],"fullName":"on vertical axis moving into an unpopulated list only move into first position if it is visible should allow a big item to move into a smaller list","location":null,"status":"passed","title":"should allow a big item to move into a smaller list"},{"ancestorTitles":["on vertical axis","is going before a target"],"failureMessages":[],"fullName":"on vertical axis is going before a target should move the target and everything below it forward","location":null,"status":"passed","title":"should move the target and everything below it forward"},{"ancestorTitles":["on vertical axis","is going after a target"],"failureMessages":[],"fullName":"on vertical axis is going after a target should move the target and everything below it forward","location":null,"status":"passed","title":"should move the target and everything below it forward"},{"ancestorTitles":["on vertical axis","is moving after the last position of a list"],"failureMessages":[],"fullName":"on vertical axis is moving after the last position of a list should go after the non-displaced last item in the list","location":null,"status":"passed","title":"should go after the non-displaced last item in the list"},{"ancestorTitles":["on horizontal axis","moving into an unpopulated list"],"failureMessages":[],"fullName":"on horizontal axis moving into an unpopulated list should move into the first position of the list","location":null,"status":"passed","title":"should move into the first position of the list"},{"ancestorTitles":["on horizontal axis","moving into an unpopulated list","only move into first position if it is visible"],"failureMessages":[],"fullName":"on horizontal axis moving into an unpopulated list only move into first position if it is visible should not move into the start of list if the position is not visible due to droppable scroll","location":null,"status":"passed","title":"should not move into the start of list if the position is not visible due to droppable scroll"},{"ancestorTitles":["on horizontal axis","moving into an unpopulated list","only move into first position if it is visible"],"failureMessages":[],"fullName":"on horizontal axis moving into an unpopulated list only move into first position if it is visible should not move into the start of list if the position is not visible due to page scroll","location":null,"status":"passed","title":"should not move into the start of list if the position is not visible due to page scroll"},{"ancestorTitles":["on horizontal axis","moving into an unpopulated list","only move into first position if it is visible"],"failureMessages":[],"fullName":"on horizontal axis moving into an unpopulated list only move into first position if it is visible should allow a big item to move into a smaller list","location":null,"status":"passed","title":"should allow a big item to move into a smaller list"},{"ancestorTitles":["on horizontal axis","is going before a target"],"failureMessages":[],"fullName":"on horizontal axis is going before a target should move the target and everything below it forward","location":null,"status":"passed","title":"should move the target and everything below it forward"},{"ancestorTitles":["on horizontal axis","is going after a target"],"failureMessages":[],"fullName":"on horizontal axis is going after a target should move the target and everything below it forward","location":null,"status":"passed","title":"should move the target and everything below it forward"},{"ancestorTitles":["on horizontal axis","is moving after the last position of a list"],"failureMessages":[],"fullName":"on horizontal axis is moving after the last position of a list should go after the non-displaced last item in the list","location":null,"status":"passed","title":"should go after the non-displaced last item in the list"}],"endTime":1674657421177,"message":"","name":"/home/flakie/package/test/unit/state/move-in-direction/move-cross-axis/move-to-new-droppable/to-foreign-list.spec.js","startTime":1674657413664,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["draggable","getById"],"failureMessages":[],"fullName":"draggable getById should return an item","location":null,"status":"passed","title":"should return an item"},{"ancestorTitles":["draggable","getById"],"failureMessages":[],"fullName":"draggable getById should throw if no item exists","location":null,"status":"passed","title":"should throw if no item exists"},{"ancestorTitles":["draggable","findById"],"failureMessages":[],"fullName":"draggable findById should return an item if it exists","location":null,"status":"passed","title":"should return an item if it exists"},{"ancestorTitles":["draggable","findById"],"failureMessages":[],"fullName":"draggable findById should return null if an item does not exist","location":null,"status":"passed","title":"should return null if an item does not exist"},{"ancestorTitles":["draggable","exists"],"failureMessages":[],"fullName":"draggable exists should return true if an item exists","location":null,"status":"passed","title":"should return true if an item exists"},{"ancestorTitles":["draggable","exists"],"failureMessages":[],"fullName":"draggable exists should return null if an item does not exist","location":null,"status":"passed","title":"should return null if an item does not exist"},{"ancestorTitles":["draggable","getAllByType"],"failureMessages":[],"fullName":"draggable getAllByType should only return items of the correct type","location":null,"status":"passed","title":"should only return items of the correct type"},{"ancestorTitles":["droppable","getById"],"failureMessages":[],"fullName":"droppable getById should return an item","location":null,"status":"passed","title":"should return an item"},{"ancestorTitles":["droppable","getById"],"failureMessages":[],"fullName":"droppable getById should throw if no item exists","location":null,"status":"passed","title":"should throw if no item exists"},{"ancestorTitles":["droppable","findById"],"failureMessages":[],"fullName":"droppable findById should return an item if it exists","location":null,"status":"passed","title":"should return an item if it exists"},{"ancestorTitles":["droppable","findById"],"failureMessages":[],"fullName":"droppable findById should return null if an item does not exist","location":null,"status":"passed","title":"should return null if an item does not exist"},{"ancestorTitles":["droppable","exists"],"failureMessages":[],"fullName":"droppable exists should return true if an item exists","location":null,"status":"passed","title":"should return true if an item exists"},{"ancestorTitles":["droppable","exists"],"failureMessages":[],"fullName":"droppable exists should return null if an item does not exist","location":null,"status":"passed","title":"should return null if an item does not exist"},{"ancestorTitles":["droppable","getAllByType"],"failureMessages":[],"fullName":"droppable getAllByType should only return items of the correct type","location":null,"status":"passed","title":"should only return items of the correct type"}],"endTime":1674657421576,"message":"","name":"/home/flakie/package/test/unit/state/registry/queries.spec.js","startTime":1674657414065,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["with: mouse"],"failureMessages":[],"fullName":"with: mouse should block the drag if the drag handle is itself contenteditable","location":null,"status":"passed","title":"should block the drag if the drag handle is itself contenteditable"},{"ancestorTitles":["with: mouse"],"failureMessages":[],"fullName":"with: mouse should block the drag if originated from a child contenteditable","location":null,"status":"passed","title":"should block the drag if originated from a child contenteditable"},{"ancestorTitles":["with: mouse"],"failureMessages":[],"fullName":"with: mouse should block the drag if originated from a child of a child contenteditable","location":null,"status":"passed","title":"should block the drag if originated from a child of a child contenteditable"},{"ancestorTitles":["with: mouse"],"failureMessages":[],"fullName":"with: mouse should not block if contenteditable is set to false","location":null,"status":"passed","title":"should not block if contenteditable is set to false"},{"ancestorTitles":["with: mouse"],"failureMessages":[],"fullName":"with: mouse should not block a drag if dragging interactive elements is allowed","location":null,"status":"passed","title":"should not block a drag if dragging interactive elements is allowed"},{"ancestorTitles":["with: keyboard"],"failureMessages":[],"fullName":"with: keyboard should block the drag if the drag handle is itself contenteditable","location":null,"status":"passed","title":"should block the drag if the drag handle is itself contenteditable"},{"ancestorTitles":["with: keyboard"],"failureMessages":[],"fullName":"with: keyboard should block the drag if originated from a child contenteditable","location":null,"status":"passed","title":"should block the drag if originated from a child contenteditable"},{"ancestorTitles":["with: keyboard"],"failureMessages":[],"fullName":"with: keyboard should block the drag if originated from a child of a child contenteditable","location":null,"status":"passed","title":"should block the drag if originated from a child of a child contenteditable"},{"ancestorTitles":["with: keyboard"],"failureMessages":[],"fullName":"with: keyboard should not block if contenteditable is set to false","location":null,"status":"passed","title":"should not block if contenteditable is set to false"},{"ancestorTitles":["with: keyboard"],"failureMessages":[],"fullName":"with: keyboard should not block a drag if dragging interactive elements is allowed","location":null,"status":"passed","title":"should not block a drag if dragging interactive elements is allowed"},{"ancestorTitles":["with: touch"],"failureMessages":[],"fullName":"with: touch should block the drag if the drag handle is itself contenteditable","location":null,"status":"passed","title":"should block the drag if the drag handle is itself contenteditable"},{"ancestorTitles":["with: touch"],"failureMessages":[],"fullName":"with: touch should block the drag if originated from a child contenteditable","location":null,"status":"passed","title":"should block the drag if originated from a child contenteditable"},{"ancestorTitles":["with: touch"],"failureMessages":[],"fullName":"with: touch should block the drag if originated from a child of a child contenteditable","location":null,"status":"passed","title":"should block the drag if originated from a child of a child contenteditable"},{"ancestorTitles":["with: touch"],"failureMessages":[],"fullName":"with: touch should not block if contenteditable is set to false","location":null,"status":"passed","title":"should not block if contenteditable is set to false"},{"ancestorTitles":["with: touch"],"failureMessages":[],"fullName":"with: touch should not block a drag if dragging interactive elements is allowed","location":null,"status":"passed","title":"should not block a drag if dragging interactive elements is allowed"}],"endTime":1674657424073,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/shared-behaviours/contenteditable.spec.js","startTime":1674657400666,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should return the default map props and not break memoization","location":null,"status":"passed","title":"should return the default map props and not break memoization"}],"endTime":1674657425366,"message":"","name":"/home/flakie/package/test/unit/view/connected-draggable/nothing-is-dragging.spec.js","startTime":1674657414165,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should publish the dimensions of the target","location":null,"status":"passed","title":"should publish the dimensions of the target"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should consider the window scroll when calculating dimensions","location":null,"status":"passed","title":"should consider the window scroll when calculating dimensions"},{"ancestorTitles":["no closest scrollable"],"failureMessages":[],"fullName":"no closest scrollable should return null for the closest scrollable if there is no scroll container","location":null,"status":"passed","title":"should return null for the closest scrollable if there is no scroll container"},{"ancestorTitles":["droppable is scrollable"],"failureMessages":[],"fullName":"droppable is scrollable should collect information about the scrollable","location":null,"status":"passed","title":"should collect information about the scrollable"},{"ancestorTitles":["droppable is scrollable"],"failureMessages":[],"fullName":"droppable is scrollable should account for a change in scroll when crafting its custom borderBox","location":null,"status":"passed","title":"should account for a change in scroll when crafting its custom borderBox"},{"ancestorTitles":["parent of droppable is scrollable"],"failureMessages":[],"fullName":"parent of droppable is scrollable should collect information about the scrollable","location":null,"status":"passed","title":"should collect information about the scrollable"},{"ancestorTitles":["both droppable and parent is scrollable"],"failureMessages":[],"fullName":"both droppable and parent is scrollable should log a warning as the use case is not supported","location":null,"status":"passed","title":"should log a warning as the use case is not supported"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should capture the initial scroll of the closest scrollable","location":null,"status":"passed","title":"should capture the initial scroll of the closest scrollable"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should indicate if subject clipping is permitted based on the ignoreContainerClipping prop","location":null,"status":"passed","title":"should indicate if subject clipping is permitted based on the ignoreContainerClipping prop"}],"endTime":1674657426074,"message":"","name":"/home/flakie/package/test/unit/view/use-droppable-publisher/publishing.spec.js","startTime":1674657405873,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should allow consumers to use their own portal","location":null,"status":"passed","title":"should allow consumers to use their own portal"}],"endTime":1674657426078,"message":"","name":"/home/flakie/package/test/unit/integration/draggable/portal.spec.js","startTime":1674657413871,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should behave correctly across multiple drags","location":null,"status":"passed","title":"should behave correctly across multiple drags"}],"endTime":1674657426169,"message":"","name":"/home/flakie/package/test/unit/state/middleware/responders/repeated-use.spec.js","startTime":1674657418080,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should displace items forward when the start edge of the dragging item goes backwards past the items center","location":null,"status":"passed","title":"should displace items forward when the start edge of the dragging item goes backwards past the items center"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should end displacement if the dragging item bottom edge goes forward past the displaced center","location":null,"status":"passed","title":"should end displacement if the dragging item bottom edge goes forward past the displaced center"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should displace items forward when the start edge of the dragging item goes backwards past the items center","location":null,"status":"passed","title":"should displace items forward when the start edge of the dragging item goes backwards past the items center"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should end displacement if the dragging item bottom edge goes forward past the displaced center","location":null,"status":"passed","title":"should end displacement if the dragging item bottom edge goes forward past the displaced center"}],"endTime":1674657426570,"message":"","name":"/home/flakie/package/test/unit/state/get-drag-impact/reorder/over-home-list/started-before-critical.spec.js","startTime":1674657411872,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should call the onBeforeDragStart before connected components are updated, and onDragStart after","location":null,"status":"passed","title":"should call the onBeforeDragStart before connected components are updated, and onDragStart after"}],"endTime":1674657426772,"message":"","name":"/home/flakie/package/test/unit/integration/responders-timing.spec.js","startTime":1674657418570,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should return a list when the center is over the list","location":null,"status":"passed","title":"should return a list when the center is over the list"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should not return a match when the center is not over a list (and no other candidate conditions are met)","location":null,"status":"passed","title":"should not return a match when the center is not over a list (and no other candidate conditions are met)"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should return a list when the center is over the list","location":null,"status":"passed","title":"should return a list when the center is over the list"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should not return a match when the center is not over a list (and no other candidate conditions are met)","location":null,"status":"passed","title":"should not return a match when the center is not over a list (and no other candidate conditions are met)"}],"endTime":1674657429276,"message":"","name":"/home/flakie/package/test/unit/state/get-droppable-over/center-is-over.spec.js","startTime":1674657419368,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should call the onDragEnd responder when a DROP_COMPLETE action occurs","location":null,"status":"passed","title":"should call the onDragEnd responder when a DROP_COMPLETE action occurs"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should throw an exception if there was no drag start published","location":null,"status":"passed","title":"should throw an exception if there was no drag start published"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should use the drop result and not the final impact","location":null,"status":"passed","title":"should use the drop result and not the final impact"}],"endTime":1674657429767,"message":"","name":"/home/flakie/package/test/unit/state/middleware/responders/drop.spec.js","startTime":1674657418477,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["is within"],"failureMessages":[],"fullName":"is within should return true when the value is between the bounds","location":null,"status":"passed","title":"should return true when the value is between the bounds"},{"ancestorTitles":["is within"],"failureMessages":[],"fullName":"is within should return true when the value is equal to the lower bound","location":null,"status":"passed","title":"should return true when the value is equal to the lower bound"},{"ancestorTitles":["is within"],"failureMessages":[],"fullName":"is within should return true when the value is equal to the upper bound","location":null,"status":"passed","title":"should return true when the value is equal to the upper bound"},{"ancestorTitles":["is within"],"failureMessages":[],"fullName":"is within should return false when the value is less then the lower bound","location":null,"status":"passed","title":"should return false when the value is less then the lower bound"},{"ancestorTitles":["is within"],"failureMessages":[],"fullName":"is within should return false when the value is greater than the upper bound","location":null,"status":"passed","title":"should return false when the value is greater than the upper bound"}],"endTime":1674657430167,"message":"","name":"/home/flakie/package/test/unit/state/is-within.spec.js","startTime":1674657420767,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on the vertical axis"],"failureMessages":[],"fullName":"on the vertical axis should return nothing when nothing is after the dragging item","location":null,"status":"passed","title":"should return nothing when nothing is after the dragging item"},{"ancestorTitles":["on the vertical axis"],"failureMessages":[],"fullName":"on the vertical axis should correctly mark item visibility","location":null,"status":"passed","title":"should correctly mark item visibility"},{"ancestorTitles":["on the vertical axis"],"failureMessages":[],"fullName":"on the vertical axis should keep displacement animation consistent between calls","location":null,"status":"passed","title":"should keep displacement animation consistent between calls"},{"ancestorTitles":["on the vertical axis"],"failureMessages":[],"fullName":"on the vertical axis should mark an item as not animated when moving from invisible to visible","location":null,"status":"passed","title":"should mark an item as not animated when moving from invisible to visible"},{"ancestorTitles":["on the vertical axis"],"failureMessages":[],"fullName":"on the vertical axis should make displacement animated if being displaced for the first time","location":null,"status":"passed","title":"should make displacement animated if being displaced for the first time"},{"ancestorTitles":["on the vertical axis"],"failureMessages":[],"fullName":"on the vertical axis should force the animation value when requested","location":null,"status":"passed","title":"should force the animation value when requested"},{"ancestorTitles":["on the horizontal axis"],"failureMessages":[],"fullName":"on the horizontal axis should return nothing when nothing is after the dragging item","location":null,"status":"passed","title":"should return nothing when nothing is after the dragging item"},{"ancestorTitles":["on the horizontal axis"],"failureMessages":[],"fullName":"on the horizontal axis should correctly mark item visibility","location":null,"status":"passed","title":"should correctly mark item visibility"},{"ancestorTitles":["on the horizontal axis"],"failureMessages":[],"fullName":"on the horizontal axis should keep displacement animation consistent between calls","location":null,"status":"passed","title":"should keep displacement animation consistent between calls"},{"ancestorTitles":["on the horizontal axis"],"failureMessages":[],"fullName":"on the horizontal axis should mark an item as not animated when moving from invisible to visible","location":null,"status":"passed","title":"should mark an item as not animated when moving from invisible to visible"},{"ancestorTitles":["on the horizontal axis"],"failureMessages":[],"fullName":"on the horizontal axis should make displacement animated if being displaced for the first time","location":null,"status":"passed","title":"should make displacement animated if being displaced for the first time"},{"ancestorTitles":["on the horizontal axis"],"failureMessages":[],"fullName":"on the horizontal axis should force the animation value when requested","location":null,"status":"passed","title":"should force the animation value when requested"}],"endTime":1674657432173,"message":"","name":"/home/flakie/package/test/unit/state/get-displacement-groups/get-displacement-groups.spec.js","startTime":1674657421072,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["position","add"],"failureMessages":[],"fullName":"position add should add two points together","location":null,"status":"passed","title":"should add two points together"},{"ancestorTitles":["position","subtract"],"failureMessages":[],"fullName":"position subtract should subtract two points together","location":null,"status":"passed","title":"should subtract two points together"},{"ancestorTitles":["position","is equal"],"failureMessages":[],"fullName":"position is equal should return true when two objects are the same","location":null,"status":"passed","title":"should return true when two objects are the same"},{"ancestorTitles":["position","is equal"],"failureMessages":[],"fullName":"position is equal should return true when two objects share the same value","location":null,"status":"passed","title":"should return true when two objects share the same value"},{"ancestorTitles":["position","is equal"],"failureMessages":[],"fullName":"position is equal should return false when two objects have different values","location":null,"status":"passed","title":"should return false when two objects have different values"},{"ancestorTitles":["position","is equal"],"failureMessages":[],"fullName":"position is equal should return true when -origin is compared with +origin","location":null,"status":"passed","title":"should return true when -origin is compared with +origin"},{"ancestorTitles":["position","negate"],"failureMessages":[],"fullName":"position negate should return the inverse of the provided point","location":null,"status":"passed","title":"should return the inverse of the provided point"},{"ancestorTitles":["position","negate"],"failureMessages":[],"fullName":"position negate should not negate 0 to -0","location":null,"status":"passed","title":"should not negate 0 to -0"},{"ancestorTitles":["position","patch"],"failureMessages":[],"fullName":"position patch should patch position with a y value","location":null,"status":"passed","title":"should patch position with a y value"},{"ancestorTitles":["position","patch"],"failureMessages":[],"fullName":"position patch should patch a position with a x value","location":null,"status":"passed","title":"should patch a position with a x value"},{"ancestorTitles":["position","patch"],"failureMessages":[],"fullName":"position patch should allow patching of the non primary line","location":null,"status":"passed","title":"should allow patching of the non primary line"},{"ancestorTitles":["position","distance","on the same axis"],"failureMessages":[],"fullName":"position distance on the same axis should return the distance between two positive values","location":null,"status":"passed","title":"should return the distance between two positive values"},{"ancestorTitles":["position","distance","on the same axis"],"failureMessages":[],"fullName":"position distance on the same axis should return the distance between two negative values","location":null,"status":"passed","title":"should return the distance between two negative values"},{"ancestorTitles":["position","distance","on the same axis"],"failureMessages":[],"fullName":"position distance on the same axis should return the distance between a positive and negative value","location":null,"status":"passed","title":"should return the distance between a positive and negative value"},{"ancestorTitles":["position","distance","with axis shift"],"failureMessages":[],"fullName":"position distance with axis shift should account for a shift in plane","location":null,"status":"passed","title":"should account for a shift in plane"},{"ancestorTitles":["position","distance","with axis shift"],"failureMessages":[],"fullName":"position distance with axis shift should account for a negative shift in plane","location":null,"status":"passed","title":"should account for a negative shift in plane"},{"ancestorTitles":["position","closest"],"failureMessages":[],"fullName":"position closest should return the closest distance from a series of options","location":null,"status":"passed","title":"should return the closest distance from a series of options"},{"ancestorTitles":["position","apply"],"failureMessages":[],"fullName":"position apply should apply the function to both values","location":null,"status":"passed","title":"should apply the function to both values"}],"endTime":1674657433369,"message":"","name":"/home/flakie/package/test/unit/state/position.spec.js","startTime":1674657425864,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should allow for additions to be made","location":null,"status":"passed","title":"should allow for additions to be made"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should adjust captured values for any changes that impact that dragging item","location":null,"status":"passed","title":"should adjust captured values for any changes that impact that dragging item"}],"endTime":1674657435267,"message":"","name":"/home/flakie/package/test/unit/integration/drag-drop-context/on-before-capture/additions.spec.js","startTime":1674657421271,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should throw if a drag cannot be started when a lift action occurs","location":null,"status":"passed","title":"should throw if a drag cannot be started when a lift action occurs"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should flush any animating drops","location":null,"status":"passed","title":"should flush any animating drops"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should publish the initial dimensions when lifting","location":null,"status":"passed","title":"should publish the initial dimensions when lifting"}],"endTime":1674657435364,"message":"","name":"/home/flakie/package/test/unit/state/middleware/lift.spec.js","startTime":1674657424376,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should have every prettier target following the file name convention","location":null,"status":"passed","title":"should have every prettier target following the file name convention"}],"endTime":1674657435770,"message":"","name":"/home/flakie/package/test/unit/health/src-file-name-convention.spec.js","startTime":1674657420165,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should cancel a pending drag on events: [keydown, resize, visibilitychange]","location":null,"status":"passed","title":"should cancel a pending drag on events: [keydown, resize, visibilitychange]"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should abort when there is a window scroll","location":null,"status":"passed","title":"should abort when there is a window scroll"}],"endTime":1674657435970,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/mouse-sensor/cancel-while-pending.spec.js","startTime":1674657427174,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should use the dragging styles on an initial publish","location":null,"status":"passed","title":"should use the dragging styles on an initial publish"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should use the dropping styles when drop animating","location":null,"status":"passed","title":"should use the dropping styles when drop animating"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should use the resting styles when a drop completes","location":null,"status":"passed","title":"should use the resting styles when a drop completes"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should use the resting styles when aborting","location":null,"status":"passed","title":"should use the resting styles when aborting"}],"endTime":1674657436172,"message":"","name":"/home/flakie/package/test/unit/state/middleware/style.spec.js","startTime":1674657426270,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should fire a complete drop action when a drop animation finish action is fired","location":null,"status":"passed","title":"should fire a complete drop action when a drop animation finish action is fired"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should throw if a drop animation finished action occurs while not in the drop animating phase","location":null,"status":"passed","title":"should throw if a drop animation finished action occurs while not in the drop animating phase"}],"endTime":1674657436771,"message":"","name":"/home/flakie/package/test/unit/state/middleware/drop/drop-animation-finish-middleware.spec.js","startTime":1674657430367,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on the vertical axis"],"failureMessages":[],"fullName":"on the vertical axis should not dampen scrolling if not starting in scrollable area","location":null,"status":"passed","title":"should not dampen scrolling if not starting in scrollable area"},{"ancestorTitles":["on the vertical axis"],"failureMessages":[],"fullName":"on the vertical axis should dampen if lifted in a scrollable area","location":null,"status":"passed","title":"should dampen if lifted in a scrollable area"},{"ancestorTitles":["on the vertical axis"],"failureMessages":[],"fullName":"on the vertical axis should have the minimum scroll up to a small time threshold and then accelerate to the max speed as time continues","location":null,"status":"passed","title":"should have the minimum scroll up to a small time threshold and then accelerate to the max speed as time continues"},{"ancestorTitles":["on the horizontal axis"],"failureMessages":[],"fullName":"on the horizontal axis should not dampen scrolling if not starting in scrollable area","location":null,"status":"passed","title":"should not dampen scrolling if not starting in scrollable area"},{"ancestorTitles":["on the horizontal axis"],"failureMessages":[],"fullName":"on the horizontal axis should dampen if lifted in a scrollable area","location":null,"status":"passed","title":"should dampen if lifted in a scrollable area"},{"ancestorTitles":["on the horizontal axis"],"failureMessages":[],"fullName":"on the horizontal axis should have the minimum scroll up to a small time threshold and then accelerate to the max speed as time continues","location":null,"status":"passed","title":"should have the minimum scroll up to a small time threshold and then accelerate to the max speed as time continues"}],"endTime":1674657437784,"message":"","name":"/home/flakie/package/test/unit/state/auto-scroll/fluid-scroller/time-dampening.spec.js","startTime":1674657427865,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should cancel a pending drag when unmounted","location":null,"status":"passed","title":"should cancel a pending drag when unmounted"}],"endTime":1674657438164,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/touch-sensor/unmounted-while-pending-timer-running.spec.js","startTime":1674657430272,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should return true if an element has overflow:auto or overflow:scroll","location":null,"status":"passed","title":"should return true if an element has overflow:auto or overflow:scroll"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should return false if an element has overflow:visible","location":null,"status":"passed","title":"should return false if an element has overflow:visible"},{"ancestorTitles":["body detection"],"failureMessages":[],"fullName":"body detection should warn if the body might be a scroll container","location":null,"status":"passed","title":"should warn if the body might be a scroll container"},{"ancestorTitles":["body detection"],"failureMessages":[],"fullName":"body detection should not mark the body as a scroll container if it does not have any overflow set","location":null,"status":"passed","title":"should not mark the body as a scroll container if it does not have any overflow set"},{"ancestorTitles":["body detection"],"failureMessages":[],"fullName":"body detection should not mark the body as a scroll container if the html element has visible overflow","location":null,"status":"passed","title":"should not mark the body as a scroll container if the html element has visible overflow"}],"endTime":1674657439972,"message":"","name":"/home/flakie/package/test/unit/view/use-droppable-publisher/is-element-scrollable.spec.js","startTime":1674657435868,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should allow movement past the last item","location":null,"status":"passed","title":"should allow movement past the last item"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should allow movement past the last item","location":null,"status":"passed","title":"should allow movement past the last item"}],"endTime":1674657439976,"message":"","name":"/home/flakie/package/test/unit/state/get-drag-impact/reorder/over-foreign-list/move-past-last-item.spec.js","startTime":1674657429469,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should not prevent a subsequent click if aborting during a pending drag","location":null,"status":"passed","title":"should not prevent a subsequent click if aborting during a pending drag"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should prevent a subsequent click if cancelling a drag","location":null,"status":"passed","title":"should prevent a subsequent click if cancelling a drag"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should prevent a subsequent click if dropping a drag","location":null,"status":"passed","title":"should prevent a subsequent click if dropping a drag"}],"endTime":1674657440868,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/mouse-sensor/click-blocking.spec.js","startTime":1674657426171,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should allow adding event listeners","location":null,"status":"passed","title":"should allow adding event listeners"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should allow removing event listeners","location":null,"status":"passed","title":"should allow removing event listeners"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not error on a double unsubscribe","location":null,"status":"passed","title":"should not error on a double unsubscribe"}],"endTime":1674657441167,"message":"","name":"/home/flakie/package/test/unit/state/registry/event-listeners.spec.js","startTime":1674657435463,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should correctly state whether a lock is claimed","location":null,"status":"passed","title":"should correctly state whether a lock is claimed"}],"endTime":1674657441475,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/sensor-marshal/is-lock-claimed.spec.js","startTime":1674657432377,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis","item started displaced"],"failureMessages":[],"fullName":"on vertical axis item started displaced should move onto a displaced center - the initial visible center","location":null,"status":"passed","title":"should move onto a displaced center - the initial visible center"},{"ancestorTitles":["on vertical axis","item started displaced"],"failureMessages":[],"fullName":"on vertical axis item started displaced should move onto a non-displaced center","location":null,"status":"passed","title":"should move onto a non-displaced center"},{"ancestorTitles":["on vertical axis","item did not start displaced"],"failureMessages":[],"fullName":"on vertical axis item did not start displaced should move onto a displaced center","location":null,"status":"passed","title":"should move onto a displaced center"},{"ancestorTitles":["on vertical axis","item did not start displaced"],"failureMessages":[],"fullName":"on vertical axis item did not start displaced should move onto a non-displaced center","location":null,"status":"passed","title":"should move onto a non-displaced center"},{"ancestorTitles":["on horizontal axis","item started displaced"],"failureMessages":[],"fullName":"on horizontal axis item started displaced should move onto a displaced center - the initial visible center","location":null,"status":"passed","title":"should move onto a displaced center - the initial visible center"},{"ancestorTitles":["on horizontal axis","item started displaced"],"failureMessages":[],"fullName":"on horizontal axis item started displaced should move onto a non-displaced center","location":null,"status":"passed","title":"should move onto a non-displaced center"},{"ancestorTitles":["on horizontal axis","item did not start displaced"],"failureMessages":[],"fullName":"on horizontal axis item did not start displaced should move onto a displaced center","location":null,"status":"passed","title":"should move onto a displaced center"},{"ancestorTitles":["on horizontal axis","item did not start displaced"],"failureMessages":[],"fullName":"on horizontal axis item did not start displaced should move onto a non-displaced center","location":null,"status":"passed","title":"should move onto a non-displaced center"}],"endTime":1674657441472,"message":"","name":"/home/flakie/package/test/unit/state/get-center-from-impact/get-page-border-box-center/combine/when-combining.spec.js","startTime":1674657436570,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should update the impact when moving after where we started in the foreign start","location":null,"status":"passed","title":"should update the impact when moving after where we started in the foreign start"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should update the impact when moving before where we started in the foreign list","location":null,"status":"passed","title":"should update the impact when moving before where we started in the foreign list"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should not allow displaced before the start of the list","location":null,"status":"passed","title":"should not allow displaced before the start of the list"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should allow displaced into a spot after the last item in a list","location":null,"status":"passed","title":"should allow displaced into a spot after the last item in a list"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should not allow displaced after it is already after the last item in a list","location":null,"status":"passed","title":"should not allow displaced after it is already after the last item in a list"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should allow displaced back from after the last item in a list","location":null,"status":"passed","title":"should allow displaced back from after the last item in a list"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should update the impact when moving after where we started in the foreign start","location":null,"status":"passed","title":"should update the impact when moving after where we started in the foreign start"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should update the impact when moving before where we started in the foreign list","location":null,"status":"passed","title":"should update the impact when moving before where we started in the foreign list"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should not allow displaced before the start of the list","location":null,"status":"passed","title":"should not allow displaced before the start of the list"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should allow displaced into a spot after the last item in a list","location":null,"status":"passed","title":"should allow displaced into a spot after the last item in a list"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should not allow displaced after it is already after the last item in a list","location":null,"status":"passed","title":"should not allow displaced after it is already after the last item in a list"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should allow displaced back from after the last item in a list","location":null,"status":"passed","title":"should allow displaced back from after the last item in a list"}],"endTime":1674657442076,"message":"","name":"/home/flakie/package/test/unit/state/move-in-direction/move-to-next-place/move-to-next-index/from-reorder/in-foreign-list.spec.js","startTime":1674657435976,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should throw if the droppable has no closest scrollable","location":null,"status":"passed","title":"should throw if the droppable has no closest scrollable"},{"ancestorTitles":["there is a closest scrollable"],"failureMessages":[],"fullName":"there is a closest scrollable should update the scroll of the closest scrollable","location":null,"status":"passed","title":"should update the scroll of the closest scrollable"},{"ancestorTitles":["there is a closest scrollable"],"failureMessages":[],"fullName":"there is a closest scrollable should throw if asked to scoll while scroll is not currently being watched","location":null,"status":"passed","title":"should throw if asked to scoll while scroll is not currently being watched"}],"endTime":1674657442976,"message":"","name":"/home/flakie/package/test/unit/view/use-droppable-publisher/forced-scroll.spec.js","startTime":1674657433865,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis","moving forward"],"failureMessages":[],"fullName":"on vertical axis moving forward should be setup correctly","location":null,"status":"passed","title":"should be setup correctly"},{"ancestorTitles":["on vertical axis","moving forward"],"failureMessages":[],"fullName":"on vertical axis moving forward should request a jump scroll for movement that is outside of the viewport","location":null,"status":"passed","title":"should request a jump scroll for movement that is outside of the viewport"},{"ancestorTitles":["on vertical axis","moving backward"],"failureMessages":[],"fullName":"on vertical axis moving backward should be setup correctly","location":null,"status":"passed","title":"should be setup correctly"},{"ancestorTitles":["on vertical axis","moving backward"],"failureMessages":[],"fullName":"on vertical axis moving backward should request a jump scroll for movement that is outside of the viewport","location":null,"status":"passed","title":"should request a jump scroll for movement that is outside of the viewport"},{"ancestorTitles":["on horizontal axis","moving forward"],"failureMessages":[],"fullName":"on horizontal axis moving forward should be setup correctly","location":null,"status":"passed","title":"should be setup correctly"},{"ancestorTitles":["on horizontal axis","moving forward"],"failureMessages":[],"fullName":"on horizontal axis moving forward should request a jump scroll for movement that is outside of the viewport","location":null,"status":"passed","title":"should request a jump scroll for movement that is outside of the viewport"},{"ancestorTitles":["on horizontal axis","moving backward"],"failureMessages":[],"fullName":"on horizontal axis moving backward should be setup correctly","location":null,"status":"passed","title":"should be setup correctly"},{"ancestorTitles":["on horizontal axis","moving backward"],"failureMessages":[],"fullName":"on horizontal axis moving backward should request a jump scroll for movement that is outside of the viewport","location":null,"status":"passed","title":"should request a jump scroll for movement that is outside of the viewport"}],"endTime":1674657443676,"message":"","name":"/home/flakie/package/test/unit/state/move-in-direction/move-to-next-place/moving-to-invisible-place/not-visible-in-droppable.spec.js","startTime":1674657437887,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should remove any registrations","location":null,"status":"passed","title":"should remove any registrations"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should remove unsubscribe any event listeners","location":null,"status":"passed","title":"should remove unsubscribe any event listeners"}],"endTime":1674657444572,"message":"","name":"/home/flakie/package/test/unit/state/registry/cleanup.spec.js","startTime":1674657440268,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on the vertical axis"],"failureMessages":[],"fullName":"on the vertical axis should return true when visible on the main axis, even if not on the cross axis","location":null,"status":"passed","title":"should return true when visible on the main axis, even if not on the cross axis"},{"ancestorTitles":["on the vertical axis"],"failureMessages":[],"fullName":"on the vertical axis should return false when visible on the main axis, even if visible on the main axis","location":null,"status":"passed","title":"should return false when visible on the main axis, even if visible on the main axis"},{"ancestorTitles":["on the horizontal axis"],"failureMessages":[],"fullName":"on the horizontal axis should return true when visible on the main axis, even if not on the cross axis","location":null,"status":"passed","title":"should return true when visible on the main axis, even if not on the cross axis"},{"ancestorTitles":["on the horizontal axis"],"failureMessages":[],"fullName":"on the horizontal axis should return false when visible on the main axis, even if visible on the main axis","location":null,"status":"passed","title":"should return false when visible on the main axis, even if visible on the main axis"}],"endTime":1674657446271,"message":"","name":"/home/flakie/package/test/unit/state/visibility/is-totally-visible-on-axis.spec.js","startTime":1674657440878,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should move into the start of the list","location":null,"status":"passed","title":"should move into the start of the list"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should move into the start of the list","location":null,"status":"passed","title":"should move into the start of the list"}],"endTime":1674657447180,"message":"","name":"/home/flakie/package/test/unit/state/get-center-from-impact/get-page-border-box-center/reorder/in-empty-list.spec.js","startTime":1674657440576,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["in phase: DRAGGING"],"failureMessages":[],"fullName":"in phase: DRAGGING should indicate that it is a combine target","location":null,"status":"passed","title":"should indicate that it is a combine target"},{"ancestorTitles":["in phase: DRAGGING"],"failureMessages":[],"fullName":"in phase: DRAGGING should give resting props if not the combine target","location":null,"status":"passed","title":"should give resting props if not the combine target"},{"ancestorTitles":["in phase: DRAGGING"],"failureMessages":[],"fullName":"in phase: DRAGGING should not break memoization on multiple calls with the same impact","location":null,"status":"passed","title":"should not break memoization on multiple calls with the same impact"},{"ancestorTitles":["in phase: DRAGGING"],"failureMessages":[],"fullName":"in phase: DRAGGING should break memoization on multiple calls if changing combine","location":null,"status":"passed","title":"should break memoization on multiple calls if changing combine"},{"ancestorTitles":["in phase: COLLECTING"],"failureMessages":[],"fullName":"in phase: COLLECTING should indicate that it is a combine target","location":null,"status":"passed","title":"should indicate that it is a combine target"},{"ancestorTitles":["in phase: COLLECTING"],"failureMessages":[],"fullName":"in phase: COLLECTING should give resting props if not the combine target","location":null,"status":"passed","title":"should give resting props if not the combine target"},{"ancestorTitles":["in phase: COLLECTING"],"failureMessages":[],"fullName":"in phase: COLLECTING should not break memoization on multiple calls with the same impact","location":null,"status":"passed","title":"should not break memoization on multiple calls with the same impact"},{"ancestorTitles":["in phase: COLLECTING"],"failureMessages":[],"fullName":"in phase: COLLECTING should break memoization on multiple calls if changing combine","location":null,"status":"passed","title":"should break memoization on multiple calls if changing combine"},{"ancestorTitles":["in phase: DROP_PENDING"],"failureMessages":[],"fullName":"in phase: DROP_PENDING should indicate that it is a combine target","location":null,"status":"passed","title":"should indicate that it is a combine target"},{"ancestorTitles":["in phase: DROP_PENDING"],"failureMessages":[],"fullName":"in phase: DROP_PENDING should give resting props if not the combine target","location":null,"status":"passed","title":"should give resting props if not the combine target"},{"ancestorTitles":["in phase: DROP_PENDING"],"failureMessages":[],"fullName":"in phase: DROP_PENDING should not break memoization on multiple calls with the same impact","location":null,"status":"passed","title":"should not break memoization on multiple calls with the same impact"},{"ancestorTitles":["in phase: DROP_PENDING"],"failureMessages":[],"fullName":"in phase: DROP_PENDING should break memoization on multiple calls if changing combine","location":null,"status":"passed","title":"should break memoization on multiple calls if changing combine"}],"endTime":1674657449066,"message":"","name":"/home/flakie/package/test/unit/view/connected-draggable/combine-target-for.spec.js","startTime":1674657436869,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should prevent using keyboard keys that modify scroll","location":null,"status":"passed","title":"should prevent using keyboard keys that modify scroll"}],"endTime":1674657450867,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/keyboard-sensor/prevent-keyboard-scroll.spec.js","startTime":1674657442771,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["in phase: DRAGGING"],"failureMessages":[],"fullName":"in phase: DRAGGING should move the dragging item to the current offset and update combineWith","location":null,"status":"passed","title":"should move the dragging item to the current offset and update combineWith"},{"ancestorTitles":["in phase: DRAGGING"],"failureMessages":[],"fullName":"in phase: DRAGGING should not break memoization on multiple calls to the same offset","location":null,"status":"passed","title":"should not break memoization on multiple calls to the same offset"},{"ancestorTitles":["in phase: DRAGGING"],"failureMessages":[],"fullName":"in phase: DRAGGING should break memoization on multiple calls if changing combine","location":null,"status":"passed","title":"should break memoization on multiple calls if changing combine"},{"ancestorTitles":["in phase: COLLECTING"],"failureMessages":[],"fullName":"in phase: COLLECTING should move the dragging item to the current offset and update combineWith","location":null,"status":"passed","title":"should move the dragging item to the current offset and update combineWith"},{"ancestorTitles":["in phase: COLLECTING"],"failureMessages":[],"fullName":"in phase: COLLECTING should not break memoization on multiple calls to the same offset","location":null,"status":"passed","title":"should not break memoization on multiple calls to the same offset"},{"ancestorTitles":["in phase: COLLECTING"],"failureMessages":[],"fullName":"in phase: COLLECTING should break memoization on multiple calls if changing combine","location":null,"status":"passed","title":"should break memoization on multiple calls if changing combine"},{"ancestorTitles":["in phase: DROP_PENDING"],"failureMessages":[],"fullName":"in phase: DROP_PENDING should move the dragging item to the current offset and update combineWith","location":null,"status":"passed","title":"should move the dragging item to the current offset and update combineWith"},{"ancestorTitles":["in phase: DROP_PENDING"],"failureMessages":[],"fullName":"in phase: DROP_PENDING should not break memoization on multiple calls to the same offset","location":null,"status":"passed","title":"should not break memoization on multiple calls to the same offset"},{"ancestorTitles":["in phase: DROP_PENDING"],"failureMessages":[],"fullName":"in phase: DROP_PENDING should break memoization on multiple calls if changing combine","location":null,"status":"passed","title":"should break memoization on multiple calls if changing combine"}],"endTime":1674657452065,"message":"","name":"/home/flakie/package/test/unit/view/connected-draggable/combine-with.spec.js","startTime":1674657441174,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["with: mouse"],"failureMessages":[],"fullName":"with: mouse should cleanup a drag if a lock is forceably released mid drag","location":null,"status":"passed","title":"should cleanup a drag if a lock is forceably released mid drag"},{"ancestorTitles":["with: touch"],"failureMessages":[],"fullName":"with: touch should cleanup a drag if a lock is forceably released mid drag","location":null,"status":"passed","title":"should cleanup a drag if a lock is forceably released mid drag"}],"endTime":1674657452270,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/shared-behaviours/lock-released-pre-drag.spec.js","startTime":1674657441772,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on the vertical axis"],"failureMessages":[],"fullName":"on the vertical axis should scroll the window only if both the window and droppable can be scrolled","location":null,"status":"passed","title":"should scroll the window only if both the window and droppable can be scrolled"},{"ancestorTitles":["on the horizontal axis"],"failureMessages":[],"fullName":"on the horizontal axis should scroll the window only if both the window and droppable can be scrolled","location":null,"status":"passed","title":"should scroll the window only if both the window and droppable can be scrolled"}],"endTime":1674657454467,"message":"","name":"/home/flakie/package/test/unit/state/auto-scroll/fluid-scroller/window-before-droppable.spec.js","startTime":1674657446374,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should return no impact when not dragging over anything","location":null,"status":"passed","title":"should return no impact when not dragging over anything"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should return no impact when not dragging over anything","location":null,"status":"passed","title":"should return no impact when not dragging over anything"}],"endTime":1674657455071,"message":"","name":"/home/flakie/package/test/unit/state/get-drag-impact/over-nothing.spec.js","startTime":1674657444068,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["with: mouse"],"failureMessages":[],"fullName":"with: mouse should be able to start a drag if default sensors is disabled","location":null,"status":"passed","title":"should be able to start a drag if default sensors is disabled"},{"ancestorTitles":["with: keyboard"],"failureMessages":[],"fullName":"with: keyboard should be able to start a drag if default sensors is disabled","location":null,"status":"passed","title":"should be able to start a drag if default sensors is disabled"},{"ancestorTitles":["with: touch"],"failureMessages":[],"fullName":"with: touch should be able to start a drag if default sensors is disabled","location":null,"status":"passed","title":"should be able to start a drag if default sensors is disabled"}],"endTime":1674657456470,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/shared-behaviours/disable-default-sensors.spec.js","startTime":1674657443173,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should block a single click if requested","location":null,"status":"passed","title":"should block a single click if requested"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not block any clicks if not requested","location":null,"status":"passed","title":"should not block any clicks if not requested"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not block any clicks after a timeout","location":null,"status":"passed","title":"should not block any clicks after a timeout"}],"endTime":1674657456774,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/sensor-marshal/click-blocking.spec.js","startTime":1674657441673,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should allow all elements through","location":null,"status":"passed","title":"should allow all elements through"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not let other types through","location":null,"status":"passed","title":"should not let other types through"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not allow svg elements from another window","location":null,"status":"passed","title":"should not allow svg elements from another window"}],"endTime":1674657456780,"message":"","name":"/home/flakie/package/test/unit/view/is-type-of-element/is-element.spec.js","startTime":1674657426368,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should move forward off combining with is displaced","location":null,"status":"passed","title":"should move forward off combining with is displaced"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should move backward off combining with is displaced","location":null,"status":"passed","title":"should move backward off combining with is displaced"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should move forward off combining with a non-displaced item","location":null,"status":"passed","title":"should move forward off combining with a non-displaced item"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should move backward off combining with a non-displaced item","location":null,"status":"passed","title":"should move backward off combining with a non-displaced item"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should move forward off combining with is displaced","location":null,"status":"passed","title":"should move forward off combining with is displaced"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should move backward off combining with is displaced","location":null,"status":"passed","title":"should move backward off combining with is displaced"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should move forward off combining with a non-displaced item","location":null,"status":"passed","title":"should move forward off combining with a non-displaced item"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should move backward off combining with a non-displaced item","location":null,"status":"passed","title":"should move backward off combining with a non-displaced item"}],"endTime":1674657457668,"message":"","name":"/home/flakie/package/test/unit/state/move-in-direction/move-to-next-place/move-to-next-index/from-combine/did-not-start-after-critical.spec.js","startTime":1674657447375,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should return original center when not over anything","location":null,"status":"passed","title":"should return original center when not over anything"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should return original center when not over anything","location":null,"status":"passed","title":"should return original center when not over anything"}],"endTime":1674657458976,"message":"","name":"/home/flakie/package/test/unit/state/get-center-from-impact/get-page-border-box-center/in-home-location.spec.js","startTime":1674657454475,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on the vertical axis","window"],"failureMessages":[],"fullName":"on the vertical axis window should allow scrolling on the cross axis if too big on the main axis","location":null,"status":"passed","title":"should allow scrolling on the cross axis if too big on the main axis"},{"ancestorTitles":["on the vertical axis","window"],"failureMessages":[],"fullName":"on the vertical axis window should allow scrolling on the main axis if too big on the cross axis","location":null,"status":"passed","title":"should allow scrolling on the main axis if too big on the cross axis"},{"ancestorTitles":["on the vertical axis","window"],"failureMessages":[],"fullName":"on the vertical axis window should not allow scrolling on any axis if too big on both axis","location":null,"status":"passed","title":"should not allow scrolling on any axis if too big on both axis"},{"ancestorTitles":["on the vertical axis","droppable"],"failureMessages":[],"fullName":"on the vertical axis droppable should allow scrolling on the cross axis if too big on the main axis","location":null,"status":"passed","title":"should allow scrolling on the cross axis if too big on the main axis"},{"ancestorTitles":["on the vertical axis","droppable"],"failureMessages":[],"fullName":"on the vertical axis droppable should allow scrolling on the main axis if too big on the cross axis","location":null,"status":"passed","title":"should allow scrolling on the main axis if too big on the cross axis"},{"ancestorTitles":["on the vertical axis","droppable"],"failureMessages":[],"fullName":"on the vertical axis droppable should not allow scrolling on any axis if too big on both axis","location":null,"status":"passed","title":"should not allow scrolling on any axis if too big on both axis"},{"ancestorTitles":["on the horizontal axis","window"],"failureMessages":[],"fullName":"on the horizontal axis window should allow scrolling on the cross axis if too big on the main axis","location":null,"status":"passed","title":"should allow scrolling on the cross axis if too big on the main axis"},{"ancestorTitles":["on the horizontal axis","window"],"failureMessages":[],"fullName":"on the horizontal axis window should allow scrolling on the main axis if too big on the cross axis","location":null,"status":"passed","title":"should allow scrolling on the main axis if too big on the cross axis"},{"ancestorTitles":["on the horizontal axis","window"],"failureMessages":[],"fullName":"on the horizontal axis window should not allow scrolling on any axis if too big on both axis","location":null,"status":"passed","title":"should not allow scrolling on any axis if too big on both axis"},{"ancestorTitles":["on the horizontal axis","droppable"],"failureMessages":[],"fullName":"on the horizontal axis droppable should allow scrolling on the cross axis if too big on the main axis","location":null,"status":"passed","title":"should allow scrolling on the cross axis if too big on the main axis"},{"ancestorTitles":["on the horizontal axis","droppable"],"failureMessages":[],"fullName":"on the horizontal axis droppable should allow scrolling on the main axis if too big on the cross axis","location":null,"status":"passed","title":"should allow scrolling on the main axis if too big on the cross axis"},{"ancestorTitles":["on the horizontal axis","droppable"],"failureMessages":[],"fullName":"on the horizontal axis droppable should not allow scrolling on any axis if too big on both axis","location":null,"status":"passed","title":"should not allow scrolling on any axis if too big on both axis"}],"endTime":1674657460466,"message":"","name":"/home/flakie/package/test/unit/state/auto-scroll/fluid-scroller/big-draggables.spec.js","startTime":1674657449274,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should allow registration","location":null,"status":"passed","title":"should allow registration"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should allow unregistration","location":null,"status":"passed","title":"should allow unregistration"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should allow for updating existing entries","location":null,"status":"passed","title":"should allow for updating existing entries"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should throw away updates if the uniqueId is outdated","location":null,"status":"passed","title":"should throw away updates if the uniqueId is outdated"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should allow for entry overwriting","location":null,"status":"passed","title":"should allow for entry overwriting"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not unregister with an outdated uniqueId","location":null,"status":"passed","title":"should not unregister with an outdated uniqueId"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should allow unregistrations when there is no entry","location":null,"status":"passed","title":"should allow unregistrations when there is no entry"}],"endTime":1674657462066,"message":"","name":"/home/flakie/package/test/unit/state/registry/draggable-registration.spec.js","startTime":1674657450975,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["with: mouse"],"failureMessages":[],"fullName":"with: mouse should abort a drag if an invariant error occurs in the application","location":null,"status":"passed","title":"should abort a drag if an invariant error occurs in the application"},{"ancestorTitles":["with: mouse"],"failureMessages":[],"fullName":"with: mouse should abort a drag if an a non-invariant error occurs in the application","location":null,"status":"passed","title":"should abort a drag if an a non-invariant error occurs in the application"},{"ancestorTitles":["with: mouse"],"failureMessages":[],"fullName":"with: mouse should abort a drag if a runtime error occurs","location":null,"status":"passed","title":"should abort a drag if a runtime error occurs"},{"ancestorTitles":["with: keyboard"],"failureMessages":[],"fullName":"with: keyboard should abort a drag if an invariant error occurs in the application","location":null,"status":"passed","title":"should abort a drag if an invariant error occurs in the application"},{"ancestorTitles":["with: keyboard"],"failureMessages":[],"fullName":"with: keyboard should abort a drag if an a non-invariant error occurs in the application","location":null,"status":"passed","title":"should abort a drag if an a non-invariant error occurs in the application"},{"ancestorTitles":["with: keyboard"],"failureMessages":[],"fullName":"with: keyboard should abort a drag if a runtime error occurs","location":null,"status":"passed","title":"should abort a drag if a runtime error occurs"},{"ancestorTitles":["with: touch"],"failureMessages":[],"fullName":"with: touch should abort a drag if an invariant error occurs in the application","location":null,"status":"passed","title":"should abort a drag if an invariant error occurs in the application"},{"ancestorTitles":["with: touch"],"failureMessages":[],"fullName":"with: touch should abort a drag if an a non-invariant error occurs in the application","location":null,"status":"passed","title":"should abort a drag if an a non-invariant error occurs in the application"},{"ancestorTitles":["with: touch"],"failureMessages":[],"fullName":"with: touch should abort a drag if a runtime error occurs","location":null,"status":"passed","title":"should abort a drag if a runtime error occurs"}],"endTime":1674657463068,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/shared-behaviours/abort-on-error.spec.js","startTime":1674657435368,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on the vertical axis","window scrolling","moving forwards"],"failureMessages":[],"fullName":"on the vertical axis window scrolling moving forwards should manually move the item if the window is unable to scroll","location":null,"status":"passed","title":"should manually move the item if the window is unable to scroll"},{"ancestorTitles":["on the vertical axis","window scrolling","moving forwards"],"failureMessages":[],"fullName":"on the vertical axis window scrolling moving forwards should scroll the window if can absorb all of the movement","location":null,"status":"passed","title":"should scroll the window if can absorb all of the movement"},{"ancestorTitles":["on the vertical axis","window scrolling","moving forwards"],"failureMessages":[],"fullName":"on the vertical axis window scrolling moving forwards should manually move the item any distance that the window is unable to scroll","location":null,"status":"passed","title":"should manually move the item any distance that the window is unable to scroll"},{"ancestorTitles":["on the vertical axis","window scrolling","moving backwards"],"failureMessages":[],"fullName":"on the vertical axis window scrolling moving backwards should manually move the item if the window is unable to scroll","location":null,"status":"passed","title":"should manually move the item if the window is unable to scroll"},{"ancestorTitles":["on the vertical axis","window scrolling","moving backwards"],"failureMessages":[],"fullName":"on the vertical axis window scrolling moving backwards should scroll the window if can absorb all of the movement","location":null,"status":"passed","title":"should scroll the window if can absorb all of the movement"},{"ancestorTitles":["on the vertical axis","window scrolling","moving backwards"],"failureMessages":[],"fullName":"on the vertical axis window scrolling moving backwards should manually move the item any distance that the window is unable to scroll","location":null,"status":"passed","title":"should manually move the item any distance that the window is unable to scroll"},{"ancestorTitles":["on the vertical axis","window scrolling"],"failureMessages":[],"fullName":"on the vertical axis window scrolling should not scroll the window if window scrolling is disabled","location":null,"status":"passed","title":"should not scroll the window if window scrolling is disabled"},{"ancestorTitles":["on the vertical axis","droppable scrolling (which can involve some window scrolling)","moving forwards","droppable is able to complete entire scroll"],"failureMessages":[],"fullName":"on the vertical axis droppable scrolling (which can involve some window scrolling) moving forwards droppable is able to complete entire scroll should only scroll the droppable","location":null,"status":"passed","title":"should only scroll the droppable"},{"ancestorTitles":["on the vertical axis","droppable scrolling (which can involve some window scrolling)","moving forwards","droppable is unable to complete the entire scroll"],"failureMessages":[],"fullName":"on the vertical axis droppable scrolling (which can involve some window scrolling) moving forwards droppable is unable to complete the entire scroll should manually move the entire request if it is unable to be partially completed by the window or the droppable","location":null,"status":"passed","title":"should manually move the entire request if it is unable to be partially completed by the window or the droppable"},{"ancestorTitles":["on the vertical axis","droppable scrolling (which can involve some window scrolling)","moving forwards","droppable is unable to complete the entire scroll","window is unable to absorb some of the scroll"],"failureMessages":[],"fullName":"on the vertical axis droppable scrolling (which can involve some window scrolling) moving forwards droppable is unable to complete the entire scroll window is unable to absorb some of the scroll should scroll the droppable what it can and move the rest","location":null,"status":"passed","title":"should scroll the droppable what it can and move the rest"},{"ancestorTitles":["on the vertical axis","droppable scrolling (which can involve some window scrolling)","moving forwards","droppable is unable to complete the entire scroll","window can absorb some of the scroll"],"failureMessages":[],"fullName":"on the vertical axis droppable scrolling (which can involve some window scrolling) moving forwards droppable is unable to complete the entire scroll window can absorb some of the scroll should scroll the entire overlap if it can","location":null,"status":"passed","title":"should scroll the entire overlap if it can"},{"ancestorTitles":["on the vertical axis","droppable scrolling (which can involve some window scrolling)","moving forwards","droppable is unable to complete the entire scroll","window can absorb some of the scroll"],"failureMessages":[],"fullName":"on the vertical axis droppable scrolling (which can involve some window scrolling) moving forwards droppable is unable to complete the entire scroll window can absorb some of the scroll should scroll the droppable and window by what it can, and manually move the rest","location":null,"status":"passed","title":"should scroll the droppable and window by what it can, and manually move the rest"},{"ancestorTitles":["on the vertical axis","droppable scrolling (which can involve some window scrolling)","moving backwards","droppable is able to complete entire scroll"],"failureMessages":[],"fullName":"on the vertical axis droppable scrolling (which can involve some window scrolling) moving backwards droppable is able to complete entire scroll should only scroll the droppable","location":null,"status":"passed","title":"should only scroll the droppable"},{"ancestorTitles":["on the vertical axis","droppable scrolling (which can involve some window scrolling)","moving backwards","droppable is unable to complete the entire scroll"],"failureMessages":[],"fullName":"on the vertical axis droppable scrolling (which can involve some window scrolling) moving backwards droppable is unable to complete the entire scroll should manually move the entire request if it is unable to be partially completed by the window or the droppable","location":null,"status":"passed","title":"should manually move the entire request if it is unable to be partially completed by the window or the droppable"},{"ancestorTitles":["on the vertical axis","droppable scrolling (which can involve some window scrolling)","moving backwards","droppable is unable to complete the entire scroll","window is unable to absorb some of the scroll"],"failureMessages":[],"fullName":"on the vertical axis droppable scrolling (which can involve some window scrolling) moving backwards droppable is unable to complete the entire scroll window is unable to absorb some of the scroll should scroll the droppable what it can and move the rest","location":null,"status":"passed","title":"should scroll the droppable what it can and move the rest"},{"ancestorTitles":["on the vertical axis","droppable scrolling (which can involve some window scrolling)","moving backwards","droppable is unable to complete the entire scroll","window can absorb some of the scroll"],"failureMessages":[],"fullName":"on the vertical axis droppable scrolling (which can involve some window scrolling) moving backwards droppable is unable to complete the entire scroll window can absorb some of the scroll should scroll the entire overlap if it can","location":null,"status":"passed","title":"should scroll the entire overlap if it can"},{"ancestorTitles":["on the vertical axis","droppable scrolling (which can involve some window scrolling)","moving backwards","droppable is unable to complete the entire scroll","window can absorb some of the scroll"],"failureMessages":[],"fullName":"on the vertical axis droppable scrolling (which can involve some window scrolling) moving backwards droppable is unable to complete the entire scroll window can absorb some of the scroll should scroll the droppable and window by what it can, and manually move the rest","location":null,"status":"passed","title":"should scroll the droppable and window by what it can, and manually move the rest"},{"ancestorTitles":["on the horizontal axis","window scrolling","moving forwards"],"failureMessages":[],"fullName":"on the horizontal axis window scrolling moving forwards should manually move the item if the window is unable to scroll","location":null,"status":"passed","title":"should manually move the item if the window is unable to scroll"},{"ancestorTitles":["on the horizontal axis","window scrolling","moving forwards"],"failureMessages":[],"fullName":"on the horizontal axis window scrolling moving forwards should scroll the window if can absorb all of the movement","location":null,"status":"passed","title":"should scroll the window if can absorb all of the movement"},{"ancestorTitles":["on the horizontal axis","window scrolling","moving forwards"],"failureMessages":[],"fullName":"on the horizontal axis window scrolling moving forwards should manually move the item any distance that the window is unable to scroll","location":null,"status":"passed","title":"should manually move the item any distance that the window is unable to scroll"},{"ancestorTitles":["on the horizontal axis","window scrolling","moving backwards"],"failureMessages":[],"fullName":"on the horizontal axis window scrolling moving backwards should manually move the item if the window is unable to scroll","location":null,"status":"passed","title":"should manually move the item if the window is unable to scroll"},{"ancestorTitles":["on the horizontal axis","window scrolling","moving backwards"],"failureMessages":[],"fullName":"on the horizontal axis window scrolling moving backwards should scroll the window if can absorb all of the movement","location":null,"status":"passed","title":"should scroll the window if can absorb all of the movement"},{"ancestorTitles":["on the horizontal axis","window scrolling","moving backwards"],"failureMessages":[],"fullName":"on the horizontal axis window scrolling moving backwards should manually move the item any distance that the window is unable to scroll","location":null,"status":"passed","title":"should manually move the item any distance that the window is unable to scroll"},{"ancestorTitles":["on the horizontal axis","window scrolling"],"failureMessages":[],"fullName":"on the horizontal axis window scrolling should not scroll the window if window scrolling is disabled","location":null,"status":"passed","title":"should not scroll the window if window scrolling is disabled"},{"ancestorTitles":["on the horizontal axis","droppable scrolling (which can involve some window scrolling)","moving forwards","droppable is able to complete entire scroll"],"failureMessages":[],"fullName":"on the horizontal axis droppable scrolling (which can involve some window scrolling) moving forwards droppable is able to complete entire scroll should only scroll the droppable","location":null,"status":"passed","title":"should only scroll the droppable"},{"ancestorTitles":["on the horizontal axis","droppable scrolling (which can involve some window scrolling)","moving forwards","droppable is unable to complete the entire scroll"],"failureMessages":[],"fullName":"on the horizontal axis droppable scrolling (which can involve some window scrolling) moving forwards droppable is unable to complete the entire scroll should manually move the entire request if it is unable to be partially completed by the window or the droppable","location":null,"status":"passed","title":"should manually move the entire request if it is unable to be partially completed by the window or the droppable"},{"ancestorTitles":["on the horizontal axis","droppable scrolling (which can involve some window scrolling)","moving forwards","droppable is unable to complete the entire scroll","window is unable to absorb some of the scroll"],"failureMessages":[],"fullName":"on the horizontal axis droppable scrolling (which can involve some window scrolling) moving forwards droppable is unable to complete the entire scroll window is unable to absorb some of the scroll should scroll the droppable what it can and move the rest","location":null,"status":"passed","title":"should scroll the droppable what it can and move the rest"},{"ancestorTitles":["on the horizontal axis","droppable scrolling (which can involve some window scrolling)","moving forwards","droppable is unable to complete the entire scroll","window can absorb some of the scroll"],"failureMessages":[],"fullName":"on the horizontal axis droppable scrolling (which can involve some window scrolling) moving forwards droppable is unable to complete the entire scroll window can absorb some of the scroll should scroll the entire overlap if it can","location":null,"status":"passed","title":"should scroll the entire overlap if it can"},{"ancestorTitles":["on the horizontal axis","droppable scrolling (which can involve some window scrolling)","moving forwards","droppable is unable to complete the entire scroll","window can absorb some of the scroll"],"failureMessages":[],"fullName":"on the horizontal axis droppable scrolling (which can involve some window scrolling) moving forwards droppable is unable to complete the entire scroll window can absorb some of the scroll should scroll the droppable and window by what it can, and manually move the rest","location":null,"status":"passed","title":"should scroll the droppable and window by what it can, and manually move the rest"},{"ancestorTitles":["on the horizontal axis","droppable scrolling (which can involve some window scrolling)","moving backwards","droppable is able to complete entire scroll"],"failureMessages":[],"fullName":"on the horizontal axis droppable scrolling (which can involve some window scrolling) moving backwards droppable is able to complete entire scroll should only scroll the droppable","location":null,"status":"passed","title":"should only scroll the droppable"},{"ancestorTitles":["on the horizontal axis","droppable scrolling (which can involve some window scrolling)","moving backwards","droppable is unable to complete the entire scroll"],"failureMessages":[],"fullName":"on the horizontal axis droppable scrolling (which can involve some window scrolling) moving backwards droppable is unable to complete the entire scroll should manually move the entire request if it is unable to be partially completed by the window or the droppable","location":null,"status":"passed","title":"should manually move the entire request if it is unable to be partially completed by the window or the droppable"},{"ancestorTitles":["on the horizontal axis","droppable scrolling (which can involve some window scrolling)","moving backwards","droppable is unable to complete the entire scroll","window is unable to absorb some of the scroll"],"failureMessages":[],"fullName":"on the horizontal axis droppable scrolling (which can involve some window scrolling) moving backwards droppable is unable to complete the entire scroll window is unable to absorb some of the scroll should scroll the droppable what it can and move the rest","location":null,"status":"passed","title":"should scroll the droppable what it can and move the rest"},{"ancestorTitles":["on the horizontal axis","droppable scrolling (which can involve some window scrolling)","moving backwards","droppable is unable to complete the entire scroll","window can absorb some of the scroll"],"failureMessages":[],"fullName":"on the horizontal axis droppable scrolling (which can involve some window scrolling) moving backwards droppable is unable to complete the entire scroll window can absorb some of the scroll should scroll the entire overlap if it can","location":null,"status":"passed","title":"should scroll the entire overlap if it can"},{"ancestorTitles":["on the horizontal axis","droppable scrolling (which can involve some window scrolling)","moving backwards","droppable is unable to complete the entire scroll","window can absorb some of the scroll"],"failureMessages":[],"fullName":"on the horizontal axis droppable scrolling (which can involve some window scrolling) moving backwards droppable is unable to complete the entire scroll window can absorb some of the scroll should scroll the droppable and window by what it can, and manually move the rest","location":null,"status":"passed","title":"should scroll the droppable and window by what it can, and manually move the rest"}],"endTime":1674657463268,"message":"","name":"/home/flakie/package/test/unit/state/auto-scroll/jump-scroller.spec.js","startTime":1674657452566,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should allow movement past from last item","location":null,"status":"passed","title":"should allow movement past from last item"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should allow movement past from last item","location":null,"status":"passed","title":"should allow movement past from last item"}],"endTime":1674657463464,"message":"","name":"/home/flakie/package/test/unit/state/get-drag-impact/reorder/over-foreign-list/move-backward-from-last-item.spec.js","startTime":1674657455169,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should allow the changing of combining in onDragStart","location":null,"status":"passed","title":"should allow the changing of combining in onDragStart"}],"endTime":1674657465166,"message":"","name":"/home/flakie/package/test/unit/integration/combine-on-start.spec.js","startTime":1674657452173,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should mark everything after the critical ","location":null,"status":"passed","title":"should mark everything after the critical "}],"endTime":1674657466167,"message":"","name":"/home/flakie/package/test/unit/state/get-lift-effect/get-lift-effect.spec.js","startTime":1674657457065,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should adjust captured values for any changes that impact that dragging item","location":null,"status":"passed","title":"should adjust captured values for any changes that impact that dragging item"}],"endTime":1674657466369,"message":"","name":"/home/flakie/package/test/unit/integration/drag-drop-context/on-before-capture/removals.spec.js","startTime":1674657456665,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["before critical"],"failureMessages":[],"fullName":"before critical should return the default props if not impacted by the drag and before critical in virtual list","location":null,"status":"passed","title":"should return the default props if not impacted by the drag and before critical in virtual list"},{"ancestorTitles":["after critical"],"failureMessages":[],"fullName":"after critical should stay in the original visual spot when displaced","location":null,"status":"passed","title":"should stay in the original visual spot when displaced"},{"ancestorTitles":["after critical"],"failureMessages":[],"fullName":"after critical should return the resting props if currently invisible","location":null,"status":"passed","title":"should return the resting props if currently invisible"},{"ancestorTitles":["after critical"],"failureMessages":[],"fullName":"after critical should animate backwards to close the gap when moving out of a list","location":null,"status":"passed","title":"should animate backwards to close the gap when moving out of a list"}],"endTime":1674657466665,"message":"","name":"/home/flakie/package/test/unit/view/connected-draggable/something-else-dragging-in-virtual.spec.js","startTime":1674657460472,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should not break memoization on multiple calls","location":null,"status":"passed","title":"should not break memoization on multiple calls"},{"ancestorTitles":["in phase: DRAGGING"],"failureMessages":[],"fullName":"in phase: DRAGGING should return the default props if not impacted by the drag","location":null,"status":"passed","title":"should return the default props if not impacted by the drag"},{"ancestorTitles":["in phase: DRAGGING","being displaced by drag"],"failureMessages":[],"fullName":"in phase: DRAGGING being displaced by drag should move out of the way (no animation)","location":null,"status":"passed","title":"should move out of the way (no animation)"},{"ancestorTitles":["in phase: DRAGGING","being displaced by drag"],"failureMessages":[],"fullName":"in phase: DRAGGING being displaced by drag should move out of the way (with animation)","location":null,"status":"passed","title":"should move out of the way (with animation)"},{"ancestorTitles":["in phase: DRAGGING","being displaced by drag"],"failureMessages":[],"fullName":"in phase: DRAGGING being displaced by drag should not move if displacement is not visible, and not break memoization","location":null,"status":"passed","title":"should not move if displacement is not visible, and not break memoization"},{"ancestorTitles":["in phase: DRAGGING","being displaced by drag"],"failureMessages":[],"fullName":"in phase: DRAGGING being displaced by drag should not break memoization on multiple calls","location":null,"status":"passed","title":"should not break memoization on multiple calls"},{"ancestorTitles":["in phase: DRAGGING","being displaced by drag"],"failureMessages":[],"fullName":"in phase: DRAGGING being displaced by drag should not break memoization moving between different dragging phases","location":null,"status":"passed","title":"should not break memoization moving between different dragging phases"},{"ancestorTitles":["in phase: COLLECTING"],"failureMessages":[],"fullName":"in phase: COLLECTING should return the default props if not impacted by the drag","location":null,"status":"passed","title":"should return the default props if not impacted by the drag"},{"ancestorTitles":["in phase: COLLECTING","being displaced by drag"],"failureMessages":[],"fullName":"in phase: COLLECTING being displaced by drag should move out of the way (no animation)","location":null,"status":"passed","title":"should move out of the way (no animation)"},{"ancestorTitles":["in phase: COLLECTING","being displaced by drag"],"failureMessages":[],"fullName":"in phase: COLLECTING being displaced by drag should move out of the way (with animation)","location":null,"status":"passed","title":"should move out of the way (with animation)"},{"ancestorTitles":["in phase: COLLECTING","being displaced by drag"],"failureMessages":[],"fullName":"in phase: COLLECTING being displaced by drag should not move if displacement is not visible, and not break memoization","location":null,"status":"passed","title":"should not move if displacement is not visible, and not break memoization"},{"ancestorTitles":["in phase: COLLECTING","being displaced by drag"],"failureMessages":[],"fullName":"in phase: COLLECTING being displaced by drag should not break memoization on multiple calls","location":null,"status":"passed","title":"should not break memoization on multiple calls"},{"ancestorTitles":["in phase: COLLECTING","being displaced by drag"],"failureMessages":[],"fullName":"in phase: COLLECTING being displaced by drag should not break memoization moving between different dragging phases","location":null,"status":"passed","title":"should not break memoization moving between different dragging phases"},{"ancestorTitles":["in phase: DROP_PENDING"],"failureMessages":[],"fullName":"in phase: DROP_PENDING should return the default props if not impacted by the drag","location":null,"status":"passed","title":"should return the default props if not impacted by the drag"},{"ancestorTitles":["in phase: DROP_PENDING","being displaced by drag"],"failureMessages":[],"fullName":"in phase: DROP_PENDING being displaced by drag should move out of the way (no animation)","location":null,"status":"passed","title":"should move out of the way (no animation)"},{"ancestorTitles":["in phase: DROP_PENDING","being displaced by drag"],"failureMessages":[],"fullName":"in phase: DROP_PENDING being displaced by drag should move out of the way (with animation)","location":null,"status":"passed","title":"should move out of the way (with animation)"},{"ancestorTitles":["in phase: DROP_PENDING","being displaced by drag"],"failureMessages":[],"fullName":"in phase: DROP_PENDING being displaced by drag should not move if displacement is not visible, and not break memoization","location":null,"status":"passed","title":"should not move if displacement is not visible, and not break memoization"},{"ancestorTitles":["in phase: DROP_PENDING","being displaced by drag"],"failureMessages":[],"fullName":"in phase: DROP_PENDING being displaced by drag should not break memoization on multiple calls","location":null,"status":"passed","title":"should not break memoization on multiple calls"},{"ancestorTitles":["in phase: DROP_PENDING","being displaced by drag"],"failureMessages":[],"fullName":"in phase: DROP_PENDING being displaced by drag should not break memoization moving between different dragging phases","location":null,"status":"passed","title":"should not break memoization moving between different dragging phases"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not break memoization moving between different dragging phases (no impact)","location":null,"status":"passed","title":"should not break memoization moving between different dragging phases (no impact)"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not break memoization moving between different dragging phases (something else impacted)","location":null,"status":"passed","title":"should not break memoization moving between different dragging phases (something else impacted)"}],"endTime":1674657468675,"message":"","name":"/home/flakie/package/test/unit/view/connected-draggable/something-else-is-dragging.spec.js","startTime":1674657457364,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["with: mouse"],"failureMessages":[],"fullName":"with: mouse should cancel when pressing escape","location":null,"status":"passed","title":"should cancel when pressing escape"},{"ancestorTitles":["with: mouse"],"failureMessages":[],"fullName":"with: mouse should cancel when window is resized","location":null,"status":"passed","title":"should cancel when window is resized"},{"ancestorTitles":["with: mouse"],"failureMessages":[],"fullName":"with: mouse should cancel when there is a visibility change","location":null,"status":"passed","title":"should cancel when there is a visibility change"},{"ancestorTitles":["with: keyboard"],"failureMessages":[],"fullName":"with: keyboard should cancel when pressing escape","location":null,"status":"passed","title":"should cancel when pressing escape"},{"ancestorTitles":["with: keyboard"],"failureMessages":[],"fullName":"with: keyboard should cancel when window is resized","location":null,"status":"passed","title":"should cancel when window is resized"},{"ancestorTitles":["with: keyboard"],"failureMessages":[],"fullName":"with: keyboard should cancel when there is a visibility change","location":null,"status":"passed","title":"should cancel when there is a visibility change"},{"ancestorTitles":["with: touch"],"failureMessages":[],"fullName":"with: touch should cancel when pressing escape","location":null,"status":"passed","title":"should cancel when pressing escape"},{"ancestorTitles":["with: touch"],"failureMessages":[],"fullName":"with: touch should cancel when window is resized","location":null,"status":"passed","title":"should cancel when window is resized"},{"ancestorTitles":["with: touch"],"failureMessages":[],"fullName":"with: touch should cancel when there is a visibility change","location":null,"status":"passed","title":"should cancel when there is a visibility change"}],"endTime":1674657469870,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/shared-behaviours/cancel-while-dragging.spec.js","startTime":1674657438170,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should update the snapshot of an item being combined with","location":null,"status":"passed","title":"should update the snapshot of an item being combined with"}],"endTime":1674657470077,"message":"","name":"/home/flakie/package/test/unit/integration/draggable/combined-with.spec.js","startTime":1674657463270,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should clear any destination from a final impact if not dropping on a droppable","location":null,"status":"passed","title":"should clear any destination from a final impact if not dropping on a droppable"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should clear any destination from a final impact canceling","location":null,"status":"passed","title":"should clear any destination from a final impact canceling"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should clear any combine from a final impact if cancelling","location":null,"status":"passed","title":"should clear any combine from a final impact if cancelling"}],"endTime":1674657470370,"message":"","name":"/home/flakie/package/test/unit/state/middleware/drop/result-impact-mismatch.spec.js","startTime":1674657459181,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should displace items backwards when end of dragging item goes past the target center","location":null,"status":"passed","title":"should displace items backwards when end of dragging item goes past the target center"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should end displacement if the start of the dragging item is less than the displaced target center","location":null,"status":"passed","title":"should end displacement if the start of the dragging item is less than the displaced target center"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should displace items backwards when end of dragging item goes past the target center","location":null,"status":"passed","title":"should displace items backwards when end of dragging item goes past the target center"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should end displacement if the start of the dragging item is less than the displaced target center","location":null,"status":"passed","title":"should end displacement if the start of the dragging item is less than the displaced target center"}],"endTime":1674657471575,"message":"","name":"/home/flakie/package/test/unit/state/get-drag-impact/reorder/over-home-list/started-after-critical.spec.js","startTime":1674657466766,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should have any errors when body is changed just before unmount","location":null,"status":"passed","title":"should have any errors when body is changed just before unmount"},{"ancestorTitles":["with: mouse"],"failureMessages":[],"fullName":"with: mouse should have any errors when body is changed just before unmount: mid drag","location":null,"status":"passed","title":"should have any errors when body is changed just before unmount: mid drag"},{"ancestorTitles":["with: keyboard"],"failureMessages":[],"fullName":"with: keyboard should have any errors when body is changed just before unmount: mid drag","location":null,"status":"passed","title":"should have any errors when body is changed just before unmount: mid drag"},{"ancestorTitles":["with: touch"],"failureMessages":[],"fullName":"with: touch should have any errors when body is changed just before unmount: mid drag","location":null,"status":"passed","title":"should have any errors when body is changed just before unmount: mid drag"}],"endTime":1674657471871,"message":"","name":"/home/flakie/package/test/unit/integration/body-removal-before-unmount.spec.js","startTime":1674657463671,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["is position in frame"],"failureMessages":[],"fullName":"is position in frame should return true if inside the frame","location":null,"status":"passed","title":"should return true if inside the frame"},{"ancestorTitles":["is position in frame"],"failureMessages":[],"fullName":"is position in frame should return true for all corners","location":null,"status":"passed","title":"should return true for all corners"},{"ancestorTitles":["is position in frame"],"failureMessages":[],"fullName":"is position in frame should return false if outside on any side","location":null,"status":"passed","title":"should return false if outside on any side"}],"endTime":1674657473072,"message":"","name":"/home/flakie/package/test/unit/state/visibility/is-position-in-frame.spec.js","startTime":1674657465670,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["with: mouse"],"failureMessages":[],"fullName":"with: mouse should not start a drag if another sensor is capturing","location":null,"status":"passed","title":"should not start a drag if another sensor is capturing"},{"ancestorTitles":["with: keyboard"],"failureMessages":[],"fullName":"with: keyboard should not start a drag if another sensor is capturing","location":null,"status":"passed","title":"should not start a drag if another sensor is capturing"},{"ancestorTitles":["with: touch"],"failureMessages":[],"fullName":"with: touch should not start a drag if another sensor is capturing","location":null,"status":"passed","title":"should not start a drag if another sensor is capturing"}],"endTime":1674657473279,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/shared-behaviours/cannot-start-when-something-else-has-lock.spec.js","startTime":1674657463365,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["with: mouse"],"failureMessages":[],"fullName":"with: mouse should cleanup a drag if a lock is forceably released mid drag","location":null,"status":"passed","title":"should cleanup a drag if a lock is forceably released mid drag"},{"ancestorTitles":["with: keyboard"],"failureMessages":[],"fullName":"with: keyboard should cleanup a drag if a lock is forceably released mid drag","location":null,"status":"passed","title":"should cleanup a drag if a lock is forceably released mid drag"},{"ancestorTitles":["with: touch"],"failureMessages":[],"fullName":"with: touch should cleanup a drag if a lock is forceably released mid drag","location":null,"status":"passed","title":"should cleanup a drag if a lock is forceably released mid drag"}],"endTime":1674657473572,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/shared-behaviours/lock-released-mid-drag.spec.js","startTime":1674657463473,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should allow svg elements through","location":null,"status":"passed","title":"should allow svg elements through"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not allow html elements through","location":null,"status":"passed","title":"should not allow html elements through"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should allow svg elements from another window","location":null,"status":"passed","title":"should allow svg elements from another window"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not allow html elements from another window","location":null,"status":"passed","title":"should not allow html elements from another window"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not crash if the environment does not support SVGElement","location":null,"status":"passed","title":"should not crash if the environment does not support SVGElement"}],"endTime":1674657474870,"message":"","name":"/home/flakie/package/test/unit/view/is-type-of-element/is-svg-element.spec.js","startTime":1674657457867,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should correctly state whether a lock is claimed","location":null,"status":"passed","title":"should correctly state whether a lock is claimed"}],"endTime":1674657477465,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/sensor-marshal/force-releasing-locks.spec.js","startTime":1674657470376,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should prevent enter or tab being pressed during a drag","location":null,"status":"passed","title":"should prevent enter or tab being pressed during a drag"}],"endTime":1674657477467,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/mouse-sensor/prevent-standard-keys-while-dragging.spec.js","startTime":1674657468770,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis","last item is the dragging item"],"failureMessages":[],"fullName":"on vertical axis last item is the dragging item should return to the original center","location":null,"status":"passed","title":"should return to the original center"},{"ancestorTitles":["on vertical axis","last item started displaced"],"failureMessages":[],"fullName":"on vertical axis last item started displaced should go after the item in its current non-displaced location","location":null,"status":"passed","title":"should go after the item in its current non-displaced location"},{"ancestorTitles":["on vertical axis","last item did not start displaced"],"failureMessages":[],"fullName":"on vertical axis last item did not start displaced should go after the item in its current non-displaced location","location":null,"status":"passed","title":"should go after the item in its current non-displaced location"},{"ancestorTitles":["on horizontal axis","last item is the dragging item"],"failureMessages":[],"fullName":"on horizontal axis last item is the dragging item should return to the original center","location":null,"status":"passed","title":"should return to the original center"},{"ancestorTitles":["on horizontal axis","last item started displaced"],"failureMessages":[],"fullName":"on horizontal axis last item started displaced should go after the item in its current non-displaced location","location":null,"status":"passed","title":"should go after the item in its current non-displaced location"},{"ancestorTitles":["on horizontal axis","last item did not start displaced"],"failureMessages":[],"fullName":"on horizontal axis last item did not start displaced should go after the item in its current non-displaced location","location":null,"status":"passed","title":"should go after the item in its current non-displaced location"}],"endTime":1674657479169,"message":"","name":"/home/flakie/package/test/unit/state/get-center-from-impact/get-page-border-box-center/reorder/nothing-displaced.spec.js","startTime":1674657471966,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should not display a placeholder after a flushed drag end in the home list","location":null,"status":"passed","title":"should not display a placeholder after a flushed drag end in the home list"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should animate a placeholder closed in a home list after a drag","location":null,"status":"passed","title":"should animate a placeholder closed in a home list after a drag"}],"endTime":1674657480567,"message":"","name":"/home/flakie/package/test/unit/view/droppable/home-list-placeholder-cleanup.spec.js","startTime":1674657470375,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should reset the style marshal context","location":null,"status":"passed","title":"should reset the style marshal context"}],"endTime":1674657481380,"message":"","name":"/home/flakie/package/test/unit/integration/drag-drop-context/reset-server-context.spec.js","startTime":1674657473376,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should generate valid always styles","location":null,"status":"passed","title":"should generate valid always styles"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should generate valid resting styles","location":null,"status":"passed","title":"should generate valid resting styles"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should generate valid dragging styles","location":null,"status":"passed","title":"should generate valid dragging styles"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should generate valid dropAnimating styles","location":null,"status":"passed","title":"should generate valid dropAnimating styles"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should generate valid userCancel styles","location":null,"status":"passed","title":"should generate valid userCancel styles"}],"endTime":1674657482571,"message":"","name":"/home/flakie/package/test/unit/view/style-marshal/get-styles.spec.js","startTime":1674657466177,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should not render a placeholder at rest","location":null,"status":"passed","title":"should not render a placeholder at rest"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should render a placeholder when dragging over","location":null,"status":"passed","title":"should render a placeholder when dragging over"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should remove all placeholders if an error occurs while dragging","location":null,"status":"passed","title":"should remove all placeholders if an error occurs while dragging"},{"ancestorTitles":["home list"],"failureMessages":[],"fullName":"home list should always render a placeholder while dragging","location":null,"status":"passed","title":"should always render a placeholder while dragging"},{"ancestorTitles":["home list"],"failureMessages":[],"fullName":"home list should immediately remove the home placeholder after dropping into any list","location":null,"status":"passed","title":"should immediately remove the home placeholder after dropping into any list"},{"ancestorTitles":["home list"],"failureMessages":[],"fullName":"home list should immediately remove the home placeholder after dropping nowhere","location":null,"status":"passed","title":"should immediately remove the home placeholder after dropping nowhere"},{"ancestorTitles":["home list"],"failureMessages":[],"fullName":"home list should animate the home placeholder closed after dropping into a foreign list","location":null,"status":"passed","title":"should animate the home placeholder closed after dropping into a foreign list"},{"ancestorTitles":["home list"],"failureMessages":[],"fullName":"home list should flush a home placeholder collapse animation if starting a new drag","location":null,"status":"passed","title":"should flush a home placeholder collapse animation if starting a new drag"},{"ancestorTitles":["foreign list"],"failureMessages":[],"fullName":"foreign list should not render a placeholder if not dragging over","location":null,"status":"passed","title":"should not render a placeholder if not dragging over"},{"ancestorTitles":["foreign list"],"failureMessages":[],"fullName":"foreign list should animate a placeholder closed when no longer dragging over","location":null,"status":"passed","title":"should animate a placeholder closed when no longer dragging over"},{"ancestorTitles":["foreign list"],"failureMessages":[],"fullName":"foreign list should flush a foreign list collapsing animation if a new drag starts","location":null,"status":"passed","title":"should flush a foreign list collapsing animation if a new drag starts"}],"endTime":1674657485070,"message":"","name":"/home/flakie/package/test/unit/integration/droppable/placeholder.spec.js","startTime":1674657444672,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should move onto an item that started displaced","location":null,"status":"passed","title":"should move onto an item that started displaced"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should move onto an item that started displaced - but now is not","location":null,"status":"passed","title":"should move onto an item that started displaced - but now is not"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should move onto an item that did not start displaced","location":null,"status":"passed","title":"should move onto an item that did not start displaced"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should move onto an item that did not start displaced but now is","location":null,"status":"passed","title":"should move onto an item that did not start displaced but now is"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should not allow combining with anything before the first item","location":null,"status":"passed","title":"should not allow combining with anything before the first item"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should not allow combining with anything after the last item","location":null,"status":"passed","title":"should not allow combining with anything after the last item"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should move onto an item that started displaced","location":null,"status":"passed","title":"should move onto an item that started displaced"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should move onto an item that started displaced - but now is not","location":null,"status":"passed","title":"should move onto an item that started displaced - but now is not"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should move onto an item that did not start displaced","location":null,"status":"passed","title":"should move onto an item that did not start displaced"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should move onto an item that did not start displaced but now is","location":null,"status":"passed","title":"should move onto an item that did not start displaced but now is"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should not allow combining with anything before the first item","location":null,"status":"passed","title":"should not allow combining with anything before the first item"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should not allow combining with anything after the last item","location":null,"status":"passed","title":"should not allow combining with anything after the last item"}],"endTime":1674657486675,"message":"","name":"/home/flakie/package/test/unit/state/move-in-direction/move-to-next-place/move-to-next-combine/in-home-list.legacy.spec.js","startTime":1674657473872,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["is totally visible","viewport","without changes in droppable scroll"],"failureMessages":[],"fullName":"is totally visible viewport without changes in droppable scroll should return false if the item is not in the viewport","location":null,"status":"passed","title":"should return false if the item is not in the viewport"},{"ancestorTitles":["is totally visible","viewport","without changes in droppable scroll"],"failureMessages":[],"fullName":"is totally visible viewport without changes in droppable scroll should return true if item takes up entire viewport","location":null,"status":"passed","title":"should return true if item takes up entire viewport"},{"ancestorTitles":["is totally visible","viewport","without changes in droppable scroll"],"failureMessages":[],"fullName":"is totally visible viewport without changes in droppable scroll should return true if the item is totally visible in the viewport","location":null,"status":"passed","title":"should return true if the item is totally visible in the viewport"},{"ancestorTitles":["is totally visible","viewport","without changes in droppable scroll"],"failureMessages":[],"fullName":"is totally visible viewport without changes in droppable scroll should return false if the item is partially visible in the viewport","location":null,"status":"passed","title":"should return false if the item is partially visible in the viewport"},{"ancestorTitles":["is totally visible","viewport","with changes in droppable scroll","originally invisible but now invisible"],"failureMessages":[],"fullName":"is totally visible viewport with changes in droppable scroll originally invisible but now invisible should take into account the droppable scroll when detecting visibility","location":null,"status":"passed","title":"should take into account the droppable scroll when detecting visibility"},{"ancestorTitles":["is totally visible","viewport","with changes in droppable scroll","originally visible but now visible"],"failureMessages":[],"fullName":"is totally visible viewport with changes in droppable scroll originally visible but now visible should take into account the droppable scroll when detecting visibility","location":null,"status":"passed","title":"should take into account the droppable scroll when detecting visibility"},{"ancestorTitles":["is totally visible","droppable","without changes in droppable scroll"],"failureMessages":[],"fullName":"is totally visible droppable without changes in droppable scroll should return false if outside the droppable","location":null,"status":"passed","title":"should return false if outside the droppable"},{"ancestorTitles":["is totally visible","droppable","without changes in droppable scroll"],"failureMessages":[],"fullName":"is totally visible droppable without changes in droppable scroll should return false if the target is bigger than the droppable","location":null,"status":"passed","title":"should return false if the target is bigger than the droppable"},{"ancestorTitles":["is totally visible","droppable","without changes in droppable scroll"],"failureMessages":[],"fullName":"is totally visible droppable without changes in droppable scroll should return true if the same size of the droppable","location":null,"status":"passed","title":"should return true if the same size of the droppable"},{"ancestorTitles":["is totally visible","droppable","without changes in droppable scroll"],"failureMessages":[],"fullName":"is totally visible droppable without changes in droppable scroll should return true if within the droppable","location":null,"status":"passed","title":"should return true if within the droppable"},{"ancestorTitles":["is totally visible","droppable","without changes in droppable scroll"],"failureMessages":[],"fullName":"is totally visible droppable without changes in droppable scroll should return false if partially within the droppable","location":null,"status":"passed","title":"should return false if partially within the droppable"},{"ancestorTitles":["is totally visible","droppable","without changes in droppable scroll"],"failureMessages":[],"fullName":"is totally visible droppable without changes in droppable scroll should return false if falling on clipped area of droppable","location":null,"status":"passed","title":"should return false if falling on clipped area of droppable"},{"ancestorTitles":["is totally visible","droppable","with changes in droppable scroll","originally invisible but now invisible"],"failureMessages":[],"fullName":"is totally visible droppable with changes in droppable scroll originally invisible but now invisible should take into account the droppable scroll when detecting visibility","location":null,"status":"passed","title":"should take into account the droppable scroll when detecting visibility"},{"ancestorTitles":["is totally visible","droppable","with changes in droppable scroll","originally visible but now visible"],"failureMessages":[],"fullName":"is totally visible droppable with changes in droppable scroll originally visible but now visible should take into account the droppable scroll when detecting visibility","location":null,"status":"passed","title":"should take into account the droppable scroll when detecting visibility"},{"ancestorTitles":["is totally visible","droppable","with changes in droppable scroll"],"failureMessages":[],"fullName":"is totally visible droppable with changes in droppable scroll should ignore droppable scroll if asked to","location":null,"status":"passed","title":"should ignore droppable scroll if asked to"},{"ancestorTitles":["is totally visible","droppable","with invisible subject"],"failureMessages":[],"fullName":"is totally visible droppable with invisible subject should return false when subject is totally invisible","location":null,"status":"passed","title":"should return false when subject is totally invisible"},{"ancestorTitles":["is totally visible","viewport + droppable"],"failureMessages":[],"fullName":"is totally visible viewport + droppable should return true if visible in the viewport and the droppable","location":null,"status":"passed","title":"should return true if visible in the viewport and the droppable"},{"ancestorTitles":["is totally visible","viewport + droppable"],"failureMessages":[],"fullName":"is totally visible viewport + droppable should return false if not visible in the droppable even if visible in the viewport","location":null,"status":"passed","title":"should return false if not visible in the droppable even if visible in the viewport"},{"ancestorTitles":["is totally visible","viewport + droppable"],"failureMessages":[],"fullName":"is totally visible viewport + droppable should return false if not visible in the viewport even if visible in the droppable","location":null,"status":"passed","title":"should return false if not visible in the viewport even if visible in the droppable"}],"endTime":1674657486868,"message":"","name":"/home/flakie/package/test/unit/state/visibility/is-totally-visible.spec.js","startTime":1674657479273,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should publish the registered dimensions (simple)","location":null,"status":"passed","title":"should publish the registered dimensions (simple)"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should publish the registered dimensions (preset)","location":null,"status":"passed","title":"should publish the registered dimensions (preset)"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not publish dimensions that do not have the same type as the critical droppable","location":null,"status":"passed","title":"should not publish dimensions that do not have the same type as the critical droppable"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not publish dimensions that have been unregistered","location":null,"status":"passed","title":"should not publish dimensions that have been unregistered"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should publish draggables that have been updated (index change)","location":null,"status":"passed","title":"should publish draggables that have been updated (index change)"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should publish droppables that have been updated (id change)","location":null,"status":"passed","title":"should publish droppables that have been updated (id change)"},{"ancestorTitles":["subsequent calls"],"failureMessages":[],"fullName":"subsequent calls should return dimensions a subsequent call","location":null,"status":"passed","title":"should return dimensions a subsequent call"},{"ancestorTitles":["subsequent calls"],"failureMessages":[],"fullName":"subsequent calls should throw if starting asked to start before stopping","location":null,"status":"passed","title":"should throw if starting asked to start before stopping"},{"ancestorTitles":["subsequent calls"],"failureMessages":[],"fullName":"subsequent calls should account for changes after the last call","location":null,"status":"passed","title":"should account for changes after the last call"}],"endTime":1674657486876,"message":"","name":"/home/flakie/package/test/unit/view/dimension-marshal/initial-publish.spec.js","startTime":1674657469974,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should recompute the home impact when not dropped in a list","location":null,"status":"passed","title":"should recompute the home impact when not dropped in a list"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should recompute the home impact when the drag is cancelled","location":null,"status":"passed","title":"should recompute the home impact when the drag is cancelled"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should use the existing impact when reordering","location":null,"status":"passed","title":"should use the existing impact when reordering"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should remove any movement when merging so items will collapse","location":null,"status":"passed","title":"should remove any movement when merging so items will collapse"}],"endTime":1674657487171,"message":"","name":"/home/flakie/package/test/unit/state/middleware/drop/drop-impact.spec.js","startTime":1674657477577,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should clear any running drop is a scroll event occurs","location":null,"status":"passed","title":"should clear any running drop is a scroll event occurs"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should only try to clear once","location":null,"status":"passed","title":"should only try to clear once"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not try to cancel a drop animation if the drop finished","location":null,"status":"passed","title":"should not try to cancel a drop animation if the drop finished"}],"endTime":1674657487175,"message":"","name":"/home/flakie/package/test/unit/state/middleware/drop/drop-animation-flush-on-scroll-middleware.spec.js","startTime":1674657480876,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should return original center when not over anything","location":null,"status":"passed","title":"should return original center when not over anything"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should return original center when not over anything","location":null,"status":"passed","title":"should return original center when not over anything"}],"endTime":1674657488170,"message":"","name":"/home/flakie/package/test/unit/state/get-center-from-impact/get-page-border-box-center/over-nothing.spec.js","startTime":1674657478066,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["with: mouse"],"failureMessages":[],"fullName":"with: mouse should not drag if the handle is an interactive element","location":null,"status":"passed","title":"should not drag if the handle is an interactive element"},{"ancestorTitles":["with: mouse"],"failureMessages":[],"fullName":"with: mouse should allow dragging from an interactive handle if instructed","location":null,"status":"passed","title":"should allow dragging from an interactive handle if instructed"},{"ancestorTitles":["with: mouse"],"failureMessages":[],"fullName":"with: mouse should not start a drag if the parent is interactive","location":null,"status":"passed","title":"should not start a drag if the parent is interactive"},{"ancestorTitles":["with: mouse"],"failureMessages":[],"fullName":"with: mouse should allow dragging from with an interactive parent if instructed","location":null,"status":"passed","title":"should allow dragging from with an interactive parent if instructed"},{"ancestorTitles":["with: keyboard"],"failureMessages":[],"fullName":"with: keyboard should not drag if the handle is an interactive element","location":null,"status":"passed","title":"should not drag if the handle is an interactive element"},{"ancestorTitles":["with: keyboard"],"failureMessages":[],"fullName":"with: keyboard should allow dragging from an interactive handle if instructed","location":null,"status":"passed","title":"should allow dragging from an interactive handle if instructed"},{"ancestorTitles":["with: keyboard"],"failureMessages":[],"fullName":"with: keyboard should not start a drag if the parent is interactive","location":null,"status":"passed","title":"should not start a drag if the parent is interactive"},{"ancestorTitles":["with: keyboard"],"failureMessages":[],"fullName":"with: keyboard should allow dragging from with an interactive parent if instructed","location":null,"status":"passed","title":"should allow dragging from with an interactive parent if instructed"},{"ancestorTitles":["with: touch"],"failureMessages":[],"fullName":"with: touch should not drag if the handle is an interactive element","location":null,"status":"passed","title":"should not drag if the handle is an interactive element"},{"ancestorTitles":["with: touch"],"failureMessages":[],"fullName":"with: touch should allow dragging from an interactive handle if instructed","location":null,"status":"passed","title":"should allow dragging from an interactive handle if instructed"},{"ancestorTitles":["with: touch"],"failureMessages":[],"fullName":"with: touch should not start a drag if the parent is interactive","location":null,"status":"passed","title":"should not start a drag if the parent is interactive"},{"ancestorTitles":["with: touch"],"failureMessages":[],"fullName":"with: touch should allow dragging from with an interactive parent if instructed","location":null,"status":"passed","title":"should allow dragging from with an interactive parent if instructed"}],"endTime":1674657489675,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/shared-behaviours/interactive-elements.spec.js","startTime":1674657368168,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should end all nested docs with a link back to the documentation root","location":null,"status":"passed","title":"should end all nested docs with a link back to the documentation root"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should use correct wording","location":null,"status":"passed","title":"should use correct wording"}],"endTime":1674657490370,"message":"","name":"/home/flakie/package/test/unit/docs/content.spec.js","startTime":1674657473671,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should move onto a displaced item when moving forwards","location":null,"status":"passed","title":"should move onto a displaced item when moving forwards"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should move onto a non-displaced item when moving backwards","location":null,"status":"passed","title":"should move onto a non-displaced item when moving backwards"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should not allow combining with anything before the first item","location":null,"status":"passed","title":"should not allow combining with anything before the first item"},{"ancestorTitles":["on vertical axis"],"failureMessages":[],"fullName":"on vertical axis should not allow combining with anything after the last item","location":null,"status":"passed","title":"should not allow combining with anything after the last item"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should move onto a displaced item when moving forwards","location":null,"status":"passed","title":"should move onto a displaced item when moving forwards"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should move onto a non-displaced item when moving backwards","location":null,"status":"passed","title":"should move onto a non-displaced item when moving backwards"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should not allow combining with anything before the first item","location":null,"status":"passed","title":"should not allow combining with anything before the first item"},{"ancestorTitles":["on horizontal axis"],"failureMessages":[],"fullName":"on horizontal axis should not allow combining with anything after the last item","location":null,"status":"passed","title":"should not allow combining with anything after the last item"}],"endTime":1674657491276,"message":"","name":"/home/flakie/package/test/unit/state/move-in-direction/move-to-next-place/move-to-next-combine/in-foreign-list.legacy.spec.js","startTime":1674657481573,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["force press not respected (default)"],"failureMessages":[],"fullName":"force press not respected (default) should not abort presses that do not have enought pressure","location":null,"status":"passed","title":"should not abort presses that do not have enought pressure"},{"ancestorTitles":["force press not respected (default)"],"failureMessages":[],"fullName":"force press not respected (default) should not prevent a force press when pending (strange I know)","location":null,"status":"passed","title":"should not prevent a force press when pending (strange I know)"},{"ancestorTitles":["force press not respected (default)"],"failureMessages":[],"fullName":"force press not respected (default) prevent a force press when dragging","location":null,"status":"passed","title":"prevent a force press when dragging"},{"ancestorTitles":["force press respected"],"failureMessages":[],"fullName":"force press respected should cancel a pending drag if a force press is registered","location":null,"status":"passed","title":"should cancel a pending drag if a force press is registered"},{"ancestorTitles":["force press respected"],"failureMessages":[],"fullName":"force press respected should cancel a drag if a force press is registered","location":null,"status":"passed","title":"should cancel a drag if a force press is registered"},{"ancestorTitles":["force press respected"],"failureMessages":[],"fullName":"force press respected should abort a force press if dragging and some movement has occurred","location":null,"status":"passed","title":"should abort a force press if dragging and some movement has occurred"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not listen to force press changes after a drag has started","location":null,"status":"passed","title":"should not listen to force press changes after a drag has started"}],"endTime":1674657491565,"message":"","name":"/home/flakie/package/test/unit/integration/drag-handle/touch-sensor/force-press.spec.js","startTime":1674657473376,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["spacing","expandByPosition"],"failureMessages":[],"fullName":"spacing expandByPosition should increase the size of the spacing","location":null,"status":"passed","title":"should increase the size of the spacing"},{"ancestorTitles":["spacing","offsetByPosition"],"failureMessages":[],"fullName":"spacing offsetByPosition should add x/y values to top/right/bottom/left dimensions","location":null,"status":"passed","title":"should add x/y values to top/right/bottom/left dimensions"},{"ancestorTitles":["spacing","getCorners"],"failureMessages":[],"fullName":"spacing getCorners should return the corners of a spacing box in the order TL, TR, BL, BR","location":null,"status":"passed","title":"should return the corners of a spacing box in the order TL, TR, BL, BR"}],"endTime":1674657491767,"message":"","name":"/home/flakie/package/test/unit/state/spacing.spec.js","startTime":1674657482768,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should remove any registrations","location":null,"status":"passed","title":"should remove any registrations"}],"endTime":1674657493065,"message":"","name":"/home/flakie/package/test/unit/state/registry/use-registry.spec.js","startTime":1674657485367,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should recover from rbd errors","location":null,"status":"passed","title":"should recover from rbd errors"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not recover from non-rbd errors","location":null,"status":"passed","title":"should not recover from non-rbd errors"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not recover from runtime errors","location":null,"status":"passed","title":"should not recover from runtime errors"}],"endTime":1674657494575,"message":"","name":"/home/flakie/package/test/unit/integration/drag-drop-context/error-handling/error-in-react-tree.spec.js","startTime":1674657474968,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["home list","is dragging over"],"failureMessages":[],"fullName":"home list is dragging over should indicate that it is being dragged over","location":null,"status":"passed","title":"should indicate that it is being dragged over"},{"ancestorTitles":["home list","is dragging over"],"failureMessages":[],"fullName":"home list is dragging over should indicate that it is being combined over","location":null,"status":"passed","title":"should indicate that it is being combined over"},{"ancestorTitles":["home list","is dragging over"],"failureMessages":[],"fullName":"home list is dragging over should not break memoization between moves","location":null,"status":"passed","title":"should not break memoization between moves"},{"ancestorTitles":["home list","is not dragging over"],"failureMessages":[],"fullName":"home list is not dragging over should indicate that it is not being dragged over","location":null,"status":"passed","title":"should indicate that it is not being dragged over"},{"ancestorTitles":["home list","is not dragging over"],"failureMessages":[],"fullName":"home list is not dragging over should not break memoization between moves","location":null,"status":"passed","title":"should not break memoization between moves"},{"ancestorTitles":["foreign list","is dragging over"],"failureMessages":[],"fullName":"foreign list is dragging over should indicate that it is being dragged over","location":null,"status":"passed","title":"should indicate that it is being dragged over"},{"ancestorTitles":["foreign list","is dragging over"],"failureMessages":[],"fullName":"foreign list is dragging over should indicate that it is being combined over","location":null,"status":"passed","title":"should indicate that it is being combined over"},{"ancestorTitles":["foreign list","is dragging over"],"failureMessages":[],"fullName":"foreign list is dragging over should not break memoization between moves","location":null,"status":"passed","title":"should not break memoization between moves"},{"ancestorTitles":["foreign list","is not dragging over"],"failureMessages":[],"fullName":"foreign list is not dragging over should indicate that it is not being dragged over","location":null,"status":"passed","title":"should indicate that it is not being dragged over"},{"ancestorTitles":["foreign list","is not dragging over"],"failureMessages":[],"fullName":"foreign list is not dragging over should not break memoization between moves","location":null,"status":"passed","title":"should not break memoization between moves"}],"endTime":1674657496765,"message":"","name":"/home/flakie/package/test/unit/view/connected-droppable/dragging.spec.js","startTime":1674657487268,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":[],"fullName":"should allow html elements through","location":null,"status":"passed","title":"should allow html elements through"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not allow svg elements through","location":null,"status":"passed","title":"should not allow svg elements through"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should allow html elements from another window","location":null,"status":"passed","title":"should allow html elements from another window"},{"ancestorTitles":[],"failureMessages":[],"fullName":"should not allow svg elements from another window","location":null,"status":"passed","title":"should not allow svg elements from another window"}],"endTime":1674657497264,"message":"","name":"/home/flakie/package/test/unit/view/is-type-of-element/is-html-element.spec.js","startTime":1674657466765,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"failureMessages":["Timeout - Async callback was not invoked within the 120000ms timeout specified by jest.setTimeout.Error: Timeout - Async callback was not invoked within the 120000ms timeout specified by jest.setTimeout.\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:27:45)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at fn (/home/flakie/package/node_modules/jest-jasmine2/build/treeProcessor.js:43:7)\n    at Env.execute (/home/flakie/package/node_modules/jest-jasmine2/build/jasmine/Env.js:296:11)\n    at jasmine2 (/home/flakie/package/node_modules/jest-jasmine2/build/index.js:231:3)\n    at runTestInternal (/home/flakie/package/node_modules/jest-runner/build/runTest.js:385:16)\n    at runTest (/home/flakie/package/node_modules/jest-runner/build/runTest.js:465:34)\n    at Object.worker (/home/flakie/package/node_modules/jest-runner/build/testWorker.js:129:12)","Error: ENOENT: no such file or directory, open './dist/react-beautiful-dnd.js'","Error: expect.hasAssertions()\n\nExpected at least one assertion to be called but received none.\n    at Object.asyncJestLifecycle (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:53:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41"],"fullName":"should contain warnings in development","location":null,"status":"failed","title":"should contain warnings in development"},{"ancestorTitles":[],"failureMessages":["Timeout - Async callback was not invoked within the 120000ms timeout specified by jest.setTimeout.Error: Timeout - Async callback was not invoked within the 120000ms timeout specified by jest.setTimeout.\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:27:45)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at fn (/home/flakie/package/node_modules/jest-jasmine2/build/treeProcessor.js:43:7)\n    at Env.execute (/home/flakie/package/node_modules/jest-jasmine2/build/jasmine/Env.js:296:11)\n    at jasmine2 (/home/flakie/package/node_modules/jest-jasmine2/build/index.js:231:3)\n    at runTestInternal (/home/flakie/package/node_modules/jest-runner/build/runTest.js:385:16)\n    at runTest (/home/flakie/package/node_modules/jest-runner/build/runTest.js:465:34)\n    at Object.worker (/home/flakie/package/node_modules/jest-runner/build/testWorker.js:129:12)"],"fullName":"should not contain warnings in production","location":null,"status":"failed","title":"should not contain warnings in production"}],"endTime":1674657558170,"message":"  ● should contain warnings in development\n\n    Timeout - Async callback was not invoked within the 120000ms timeout specified by jest.setTimeout.Error: Timeout - Async callback was not invoked within the 120000ms timeout specified by jest.setTimeout.\n\n      at mapper (node_modules/jest-jasmine2/build/queueRunner.js:27:45)\n\n  ● should contain warnings in development\n\n    ENOENT: no such file or directory, open './dist/react-beautiful-dnd.js'\n\n\n\n  ● should contain warnings in development\n\n    expect.hasAssertions()\n\n    Expected at least one assertion to be called but received none.\n\n      at Object.asyncJestLifecycle (node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:53:37)\n\n  ● should not contain warnings in production\n\n    Timeout - Async callback was not invoked within the 120000ms timeout specified by jest.setTimeout.Error: Timeout - Async callback was not invoked within the 120000ms timeout specified by jest.setTimeout.\n\n      at mapper (node_modules/jest-jasmine2/build/queueRunner.js:27:45)\n","name":"/home/flakie/package/test/unit/health/drop-dev-warnings-for-prod.spec.js","startTime":1674657422068,"status":"failed","summary":""}],"wasInterrupted":false}