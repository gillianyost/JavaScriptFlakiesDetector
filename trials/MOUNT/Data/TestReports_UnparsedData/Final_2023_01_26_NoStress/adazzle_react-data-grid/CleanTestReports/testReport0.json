{
    "numFailedTestSuites": 3,
    "numFailedTests": 5,
    "numPassedTestSuites": 22,
    "numPassedTests": 118,
    "numPendingTestSuites": 0,
    "numPendingTests": 1,
    "numRuntimeErrorTestSuites": 0,
    "numTodoTests": 0,
    "numTotalTestSuites": 25,
    "numTotalTests": 124,
    "openHandles": [],
    "snapshot": {
        "added": 0,
        "didUpdate": false,
        "failure": false,
        "filesAdded": 0,
        "filesRemoved": 0,
        "filesRemovedList": [],
        "filesUnmatched": 0,
        "filesUpdated": 0,
        "matched": 0,
        "total": 0,
        "unchecked": 0,
        "uncheckedKeysByFile": [],
        "unmatched": 0,
        "updated": 0
    },
    "startTime": 1674751942088,
    "success": false,
    "testResults": [
        {
            "assertionResults": [
                {
                    "ancestorTitles": [],
                    "duration": 1499,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "summaryCellClass is undefined",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "summaryCellClass is undefined"
                },
                {
                    "ancestorTitles": [],
                    "duration": 297,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "summaryCellClass is a string",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "summaryCellClass is a string"
                },
                {
                    "ancestorTitles": [],
                    "duration": 308,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "summaryCellClass returns a string",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "summaryCellClass returns a string"
                },
                {
                    "ancestorTitles": [],
                    "duration": 297,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "summaryCellClass returns undefined",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "summaryCellClass returns undefined"
                }
            ],
            "endTime": 1674752059575,
            "message": "",
            "name": "/home/flakie/package/test/column/summaryCellClass.test.ts",
            "startTime": 1674751958865,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [],
                    "duration": 1692,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "should not resize column if resizable is not specified",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should not resize column if resizable is not specified"
                },
                {
                    "ancestorTitles": [],
                    "duration": 498,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "should not resize column if cursor offset is not within the allowed range",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should not resize column if cursor offset is not within the allowed range"
                },
                {
                    "ancestorTitles": [],
                    "duration": 202,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "should resize column if cursor offset is within the allowed range",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should resize column if cursor offset is within the allowed range"
                },
                {
                    "ancestorTitles": [],
                    "duration": 215,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "should use the maxWidth if specified",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should use the maxWidth if specified"
                },
                {
                    "ancestorTitles": [],
                    "duration": 213,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "should use the minWidth if specified",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should use the minWidth if specified"
                }
            ],
            "endTime": 1674752060077,
            "message": "",
            "name": "/home/flakie/package/test/column/resizable.test.tsx",
            "startTime": 1674751958668,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [
                        "ValueFormatter"
                    ],
                    "duration": 1292,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "ValueFormatter should be used by default",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should be used by default"
                },
                {
                    "ancestorTitles": [
                        "ValueFormatter"
                    ],
                    "duration": 109,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "ValueFormatter should handle non-object values",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should handle non-object values"
                },
                {
                    "ancestorTitles": [
                        "Custom formatter component"
                    ],
                    "duration": 208,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Custom formatter component should replace the default formatter",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should replace the default formatter"
                },
                {
                    "ancestorTitles": [
                        "Custom formatter component"
                    ],
                    "duration": 611,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Custom formatter component can update rows",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "can update rows"
                }
            ],
            "endTime": 1674752060164,
            "message": "",
            "name": "/home/flakie/package/test/column/formatter.test.tsx",
            "startTime": 1674751958764,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [],
                    "duration": 1297,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "fallback defined using renderers prop with no rows",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "fallback defined using renderers prop with no rows"
                },
                {
                    "ancestorTitles": [],
                    "duration": 302,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "fallback defined using provider with no rows",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "fallback defined using provider with no rows"
                },
                {
                    "ancestorTitles": [],
                    "duration": 203,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "fallback defined using both provider and renderers with no rows",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "fallback defined using both provider and renderers with no rows"
                },
                {
                    "ancestorTitles": [],
                    "duration": 191,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "fallback defined using renderers prop with a row",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "fallback defined using renderers prop with a row"
                },
                {
                    "ancestorTitles": [],
                    "duration": 196,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "fallback defined using provider with a row",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "fallback defined using provider with a row"
                },
                {
                    "ancestorTitles": [],
                    "duration": 200,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "fallback defined using both provider and renderers with a row",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "fallback defined using both provider and renderers with a row"
                },
                {
                    "ancestorTitles": [],
                    "duration": 108,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "checkbox defined using renderers prop",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "checkbox defined using renderers prop"
                },
                {
                    "ancestorTitles": [],
                    "duration": 199,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "checkbox defined using provider",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "checkbox defined using provider"
                },
                {
                    "ancestorTitles": [],
                    "duration": 105,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "checkbox defined using both provider and renderers",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "checkbox defined using both provider and renderers"
                }
            ],
            "endTime": 1674752060179,
            "message": "",
            "name": "/home/flakie/package/test/renderers.test.tsx",
            "startTime": 1674751958972,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [],
                    "duration": 1598,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "should not allow dragFill if onFill is undefined",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should not allow dragFill if onFill is undefined"
                },
                {
                    "ancestorTitles": [],
                    "duration": 898,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "should allow dragFill if onFill is specified",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should allow dragFill if onFill is specified"
                },
                {
                    "ancestorTitles": [],
                    "duration": 694,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "should update single row using mouse",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should update single row using mouse"
                },
                {
                    "ancestorTitles": [],
                    "duration": 601,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "should update multiple rows using mouse",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should update multiple rows using mouse"
                },
                {
                    "ancestorTitles": [],
                    "duration": 900,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "should allow drag up using mouse",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should allow drag up using mouse"
                }
            ],
            "endTime": 1674752062069,
            "message": "",
            "name": "/home/flakie/package/test/dragFill.test.tsx",
            "startTime": 1674751958471,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [],
                    "duration": 4003,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "column order",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "column order"
                }
            ],
            "endTime": 1674752062374,
            "message": "",
            "name": "/home/flakie/package/test/columnOrder.test.ts",
            "startTime": 1674751958474,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [],
                    "duration": 600,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "frozen column have a specific class, and are stable-sorted before non-frozen columns",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "frozen column have a specific class, and are stable-sorted before non-frozen columns"
                }
            ],
            "endTime": 1674752064968,
            "message": "",
            "name": "/home/flakie/package/test/column/frozen.test.ts",
            "startTime": 1674752060370,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [],
                    "duration": 796,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "cellClass is undefined",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "cellClass is undefined"
                },
                {
                    "ancestorTitles": [],
                    "duration": 292,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "cellClass is a string",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "cellClass is a string"
                },
                {
                    "ancestorTitles": [],
                    "duration": 202,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "cellClass returns a string",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "cellClass returns a string"
                },
                {
                    "ancestorTitles": [],
                    "duration": 399,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "cellClass returns undefined",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "cellClass returns undefined"
                }
            ],
            "endTime": 1674752065071,
            "message": "",
            "name": "/home/flakie/package/test/column/cellClass.test.ts",
            "startTime": 1674752060179,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [],
                    "duration": 4999,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "rowHeight is number",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "rowHeight is number"
                },
                {
                    "ancestorTitles": [],
                    "duration": 3007,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "rowHeight is function",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "rowHeight is function"
                }
            ],
            "endTime": 1674752065879,
            "message": "",
            "name": "/home/flakie/package/test/rowHeight.test.ts",
            "startTime": 1674751958175,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [],
                    "duration": 791,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "rowClass is undefined",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "rowClass is undefined"
                },
                {
                    "ancestorTitles": [],
                    "duration": 210,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "rowClass returns a string",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "rowClass returns a string"
                },
                {
                    "ancestorTitles": [],
                    "duration": 891,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "rowClass returns undefined",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "rowClass returns undefined"
                }
            ],
            "endTime": 1674752066370,
            "message": "",
            "name": "/home/flakie/package/test/rowClass.test.ts",
            "startTime": 1674752060269,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [],
                    "duration": 1897,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "should not sort if sortable is false",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should not sort if sortable is false"
                },
                {
                    "ancestorTitles": [],
                    "duration": 1008,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "single column sort",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "single column sort"
                },
                {
                    "ancestorTitles": [],
                    "duration": 3393,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "multi column sort",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "multi column sort"
                },
                {
                    "ancestorTitles": [],
                    "duration": 1694,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "multi column sort with metakey",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "multi column sort with metakey"
                },
                {
                    "ancestorTitles": [],
                    "duration": 1599,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "multi column sort with keyboard",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "multi column sort with keyboard"
                }
            ],
            "endTime": 1674752066867,
            "message": "",
            "name": "/home/flakie/package/test/sorting.test.tsx",
            "startTime": 1674751958167,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [],
                    "duration": 2099,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "should not allow copy/paste if onPaste & onCopy is undefined",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should not allow copy/paste if onPaste & onCopy is undefined"
                },
                {
                    "ancestorTitles": [],
                    "duration": 499,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "should allow copy if only onCopy is specified",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should allow copy if only onCopy is specified"
                },
                {
                    "ancestorTitles": [],
                    "duration": 596,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "should allow copy/paste if only onPaste is specified",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should allow copy/paste if only onPaste is specified"
                },
                {
                    "ancestorTitles": [],
                    "duration": 409,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "should allow copy/paste if both onPaste & onCopy is specified",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should allow copy/paste if both onPaste & onCopy is specified"
                },
                {
                    "ancestorTitles": [],
                    "duration": 1103,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "should not allow paste on readonly cells",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should not allow paste on readonly cells"
                },
                {
                    "ancestorTitles": [],
                    "duration": 699,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "should allow copying a readonly cell, and pasting the value into a writable cell",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should allow copying a readonly cell, and pasting the value into a writable cell"
                },
                {
                    "ancestorTitles": [],
                    "duration": 1296,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "should cancel copy/paste on escape",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should cancel copy/paste on escape"
                },
                {
                    "ancestorTitles": [],
                    "duration": 1302,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "should not allow copy on header or summary cells",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should not allow copy on header or summary cells"
                },
                {
                    "ancestorTitles": [],
                    "duration": 1206,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "should not allow paste on header or summary cells",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should not allow paste on header or summary cells"
                }
            ],
            "endTime": 1674752066876,
            "message": "",
            "name": "/home/flakie/package/test/copyPaste.test.tsx",
            "startTime": 1674751958765,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [],
                    "duration": 2110,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "summaryFormatter",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "summaryFormatter"
                }
            ],
            "endTime": 1674752068978,
            "message": "",
            "name": "/home/flakie/package/test/column/summaryFormatter.test.tsx",
            "startTime": 1674752062478,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [],
                    "duration": 1084,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "should use left to right direction by default",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should use left to right direction by default"
                },
                {
                    "ancestorTitles": [],
                    "duration": 199,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "should use left to right direction if direction prop is set to ltr",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should use left to right direction if direction prop is set to ltr"
                },
                {
                    "ancestorTitles": [],
                    "duration": 410,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "should use right to left direction if direction prop is set to rtl",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should use right to left direction if direction prop is set to rtl"
                }
            ],
            "endTime": 1674752069666,
            "message": "",
            "name": "/home/flakie/package/test/direction.test.ts",
            "startTime": 1674752063069,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [],
                    "duration": 5192,
                    "failureDetails": [
                        {
                            "message": "thrown: \"Exceeded timeout of 5000 ms for a test.\nUse jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test.\""
                        }
                    ],
                    "failureMessages": [
                        "Error: thrown: \"Exceeded timeout of 5000 ms for a test.\nUse jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test.\"\n    at Object.test (/home/flakie/package/test/TextEditor.test.tsx:22:1)\n    at Runtime._execModule (/usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1377:24)\n    at Runtime._loadModule (/usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:989:12)\n    at Runtime.requireModule (/usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:849:12)\n    at jestAdapter (/usr/local/lib/node_modules/jest/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:77:13)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at runTestInternal (/usr/local/lib/node_modules/jest/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/usr/local/lib/node_modules/jest/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/usr/local/lib/node_modules/jest/node_modules/jest-runner/build/testWorker.js:106:12)"
                    ],
                    "fullName": "TextEditor",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "failed",
                    "title": "TextEditor"
                }
            ],
            "endTime": 1674752070473,
            "message": "  \u25cf TextEditor\n\n    thrown: \"Exceeded timeout of 5000 ms for a test.\n    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test.\"\n\n      20 | }\n      21 |\n    > 22 | test('TextEditor', async () => {\n         | ^\n      23 |   render(\n      24 |     <StrictMode>\n      25 |       <Test />\n\n      at Object.test (test/TextEditor.test.tsx:22:1)\n",
            "name": "/home/flakie/package/test/TextEditor.test.tsx",
            "startTime": 1674752059770,
            "status": "failed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [],
                    "duration": 203,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "headerRenderer is either undefined or a component",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "headerRenderer is either undefined or a component"
                }
            ],
            "endTime": 1674752070574,
            "message": "",
            "name": "/home/flakie/package/test/column/headerRenderer.test.tsx",
            "startTime": 1674752065363,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [],
                    "duration": 202,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "name is either a string or an element",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "name is either a string or an element"
                }
            ],
            "endTime": 1674752070671,
            "message": "",
            "name": "/home/flakie/package/test/column/name.test.tsx",
            "startTime": 1674752066769,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [],
                    "duration": 203,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "basic server-side rendering (SSR) support",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "basic server-side rendering (SSR) support"
                }
            ],
            "endTime": 1674752071275,
            "message": "",
            "name": "/home/flakie/package/test/ssr.test.tsx",
            "startTime": 1674752065280,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [],
                    "duration": 794,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "headerCellClass is either undefined or a string",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "headerCellClass is either undefined or a string"
                }
            ],
            "endTime": 1674752071372,
            "message": "",
            "name": "/home/flakie/package/test/column/headerCellClass.test.ts",
            "startTime": 1674752066767,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [
                        "colSpan"
                    ],
                    "duration": 3604,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "colSpan should merges cells",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should merges cells"
                },
                {
                    "ancestorTitles": [
                        "colSpan"
                    ],
                    "duration": 5010,
                    "failureDetails": [
                        {
                            "message": "thrown: \"Exceeded timeout of 5000 ms for a test.\nUse jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test.\""
                        }
                    ],
                    "failureMessages": [
                        "Error: thrown: \"Exceeded timeout of 5000 ms for a test.\nUse jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test.\"\n    at it (/home/flakie/package/test/column/colSpan.test.ts:95:3)\n    at _dispatchDescribe (/usr/local/lib/node_modules/jest/node_modules/jest-circus/build/index.js:91:26)\n    at describe (/usr/local/lib/node_modules/jest/node_modules/jest-circus/build/index.js:55:5)\n    at Object.describe (/home/flakie/package/test/column/colSpan.test.ts:6:1)\n    at Runtime._execModule (/usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1377:24)\n    at Runtime._loadModule (/usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:989:12)\n    at Runtime.requireModule (/usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:849:12)\n    at jestAdapter (/usr/local/lib/node_modules/jest/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:77:13)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at runTestInternal (/usr/local/lib/node_modules/jest/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/usr/local/lib/node_modules/jest/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/usr/local/lib/node_modules/jest/node_modules/jest-runner/build/testWorker.js:106:12)"
                    ],
                    "fullName": "colSpan should navigate between merged cells",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "failed",
                    "title": "should navigate between merged cells"
                },
                {
                    "ancestorTitles": [
                        "colSpan"
                    ],
                    "duration": 5007,
                    "failureDetails": [
                        {
                            "message": "thrown: \"Exceeded timeout of 5000 ms for a test.\nUse jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test.\""
                        }
                    ],
                    "failureMessages": [
                        "Error: thrown: \"Exceeded timeout of 5000 ms for a test.\nUse jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test.\"\n    at it (/home/flakie/package/test/column/colSpan.test.ts:173:3)\n    at _dispatchDescribe (/usr/local/lib/node_modules/jest/node_modules/jest-circus/build/index.js:91:26)\n    at describe (/usr/local/lib/node_modules/jest/node_modules/jest-circus/build/index.js:55:5)\n    at Object.describe (/home/flakie/package/test/column/colSpan.test.ts:6:1)\n    at Runtime._execModule (/usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1377:24)\n    at Runtime._loadModule (/usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:989:12)\n    at Runtime.requireModule (/usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:849:12)\n    at jestAdapter (/usr/local/lib/node_modules/jest/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:77:13)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at runTestInternal (/usr/local/lib/node_modules/jest/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/usr/local/lib/node_modules/jest/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/usr/local/lib/node_modules/jest/node_modules/jest-runner/build/testWorker.js:106:12)"
                    ],
                    "fullName": "colSpan should scroll to the merged cell when selected",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "failed",
                    "title": "should scroll to the merged cell when selected"
                }
            ],
            "endTime": 1674752071964,
            "message": "  \u25cf colSpan \u203a should navigate between merged cells\n\n    thrown: \"Exceeded timeout of 5000 ms for a test.\n    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test.\"\n\n      93 |   });\n      94 |\n    > 95 |   it('should navigate between merged cells', async () => {\n         |   ^\n      96 |     setupColSpanGrid();\n      97 |     // header row\n      98 |     await userEvent.click(getHeaderCells()[7]);\n\n      at it (test/column/colSpan.test.ts:95:3)\n      at Object.describe (test/column/colSpan.test.ts:6:1)\n\n  \u25cf colSpan \u203a should scroll to the merged cell when selected\n\n    thrown: \"Exceeded timeout of 5000 ms for a test.\n    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test.\"\n\n      171 |   });\n      172 |\n    > 173 |   it('should scroll to the merged cell when selected', async () => {\n          |   ^\n      174 |     setupColSpanGrid(30);\n      175 |     await userEvent.click(getCellsAtRowIndex(10)[23]); // last visible cell (1920/80)\n      176 |     const spy = jest.spyOn(window.HTMLElement.prototype, 'scrollIntoView');\n\n      at it (test/column/colSpan.test.ts:173:3)\n      at Object.describe (test/column/colSpan.test.ts:6:1)\n",
            "name": "/home/flakie/package/test/column/colSpan.test.ts",
            "startTime": 1674751958771,
            "status": "failed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [],
                    "duration": 3589,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "toggle selection when checkbox is clicked",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "toggle selection when checkbox is clicked"
                },
                {
                    "ancestorTitles": [],
                    "duration": 2709,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "toggle selection using keyboard",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "toggle selection using keyboard"
                },
                {
                    "ancestorTitles": [],
                    "duration": 3293,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "select/deselect all rows when header checkbox is clicked",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "select/deselect all rows when header checkbox is clicked"
                },
                {
                    "ancestorTitles": [],
                    "duration": 211,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "header checkbox is not checked when there are no rows",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "header checkbox is not checked when there are no rows"
                },
                {
                    "ancestorTitles": [],
                    "duration": 690,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "header checkbox is not necessarily checked when selectedRows.size === rows.length",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "header checkbox is not necessarily checked when selectedRows.size === rows.length"
                },
                {
                    "ancestorTitles": [],
                    "duration": 309,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "header checkbox is not necessarily checked when selectedRows.size > rows.length",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "header checkbox is not necessarily checked when selectedRows.size > rows.length"
                },
                {
                    "ancestorTitles": [],
                    "duration": 2499,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "extra keys are preserved when updating the selectedRows Set",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "extra keys are preserved when updating the selectedRows Set"
                },
                {
                    "ancestorTitles": [],
                    "duration": 1187,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "select rows using shift click",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "select rows using shift click"
                },
                {
                    "ancestorTitles": [],
                    "duration": 216,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "select rows using shift space",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "select rows using shift space"
                }
            ],
            "endTime": 1674752071983,
            "message": "",
            "name": "/home/flakie/package/test/rowSelection.test.tsx",
            "startTime": 1674751958073,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [
                        "Editor"
                    ],
                    "duration": 2415,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Editor should open editor on double click",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should open editor on double click"
                },
                {
                    "ancestorTitles": [
                        "Editor"
                    ],
                    "duration": 800,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Editor should open and commit changes on enter",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should open and commit changes on enter"
                },
                {
                    "ancestorTitles": [
                        "Editor"
                    ],
                    "duration": 706,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Editor should open editor when user types",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should open editor when user types"
                },
                {
                    "ancestorTitles": [
                        "Editor"
                    ],
                    "duration": 2200,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Editor should close editor and discard changes on escape",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should close editor and discard changes on escape"
                },
                {
                    "ancestorTitles": [
                        "Editor"
                    ],
                    "duration": 1699,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Editor should commit changes and close editor when clicked outside",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should commit changes and close editor when clicked outside"
                },
                {
                    "ancestorTitles": [
                        "Editor"
                    ],
                    "duration": 2293,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Editor should commit quickly enough on outside clicks so click event handlers access the latest rows state",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should commit quickly enough on outside clicks so click event handlers access the latest rows state"
                },
                {
                    "ancestorTitles": [
                        "Editor"
                    ],
                    "duration": 3900,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Editor should scroll to the editor if selected cell is not in the viewport",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should scroll to the editor if selected cell is not in the viewport"
                },
                {
                    "ancestorTitles": [
                        "Editor",
                        "editable"
                    ],
                    "duration": 211,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Editor editable should be editable if an editor is specified and editable is undefined/null",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should be editable if an editor is specified and editable is undefined/null"
                },
                {
                    "ancestorTitles": [
                        "Editor",
                        "editable"
                    ],
                    "duration": 204,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Editor editable should be editable if an editor is specified and editable is set to true",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should be editable if an editor is specified and editable is set to true"
                },
                {
                    "ancestorTitles": [
                        "Editor",
                        "editable"
                    ],
                    "duration": 97,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Editor editable should not be editable if editable is false",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should not be editable if editable is false"
                },
                {
                    "ancestorTitles": [
                        "Editor",
                        "editable"
                    ],
                    "duration": 117,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Editor editable should not be editable if editable function returns false",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should not be editable if editable function returns false"
                },
                {
                    "ancestorTitles": [
                        "Editor",
                        "editorOptions"
                    ],
                    "duration": 109,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Editor editorOptions should open editor on single click if editOnClick is true",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should open editor on single click if editOnClick is true"
                },
                {
                    "ancestorTitles": [
                        "Editor",
                        "editorOptions"
                    ],
                    "duration": 179,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Editor editorOptions should detect outside click if editor is rendered in a portal",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should detect outside click if editor is rendered in a portal"
                },
                {
                    "ancestorTitles": [
                        "Editor",
                        "editorOptions"
                    ],
                    "duration": 185,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Editor editorOptions should not commit on outside click if commitOnOutsideClick is false",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should not commit on outside click if commitOnOutsideClick is false"
                },
                {
                    "ancestorTitles": [
                        "Editor",
                        "editorOptions"
                    ],
                    "duration": 33,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Editor editorOptions should not open editor if onCellKeyDown prevents the default event",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should not open editor if onCellKeyDown prevents the default event"
                },
                {
                    "ancestorTitles": [
                        "Editor",
                        "editorOptions"
                    ],
                    "duration": 97,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Editor editorOptions should prevent navigation if onNavigation returns false",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should prevent navigation if onNavigation returns false"
                },
                {
                    "ancestorTitles": [
                        "Editor",
                        "editor focus"
                    ],
                    "duration": 669,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Editor editor focus should not steal focus back to the cell if the editor is not in the viewport and another cell is clicked",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should not steal focus back to the cell if the editor is not in the viewport and another cell is clicked"
                },
                {
                    "ancestorTitles": [
                        "Editor",
                        "editor focus"
                    ],
                    "duration": null,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "Editor editor focus should not steal focus back to the cell after being closed by clicking outside the grid",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "pending",
                    "title": "should not steal focus back to the cell after being closed by clicking outside the grid"
                }
            ],
            "endTime": 1674752073268,
            "message": "",
            "name": "/home/flakie/package/test/column/editor.test.tsx",
            "startTime": 1674751958774,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [],
                    "duration": 1595,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "should not group if groupBy is not specified",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should not group if groupBy is not specified"
                },
                {
                    "ancestorTitles": [],
                    "duration": 994,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "should not group if column does not exist",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should not group if column does not exist"
                },
                {
                    "ancestorTitles": [],
                    "duration": 1305,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "should group by single column",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should group by single column"
                },
                {
                    "ancestorTitles": [],
                    "duration": 996,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "should group by multiple columns",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should group by multiple columns"
                },
                {
                    "ancestorTitles": [],
                    "duration": 407,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "should ignore duplicate groupBy columns",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should ignore duplicate groupBy columns"
                },
                {
                    "ancestorTitles": [],
                    "duration": 1306,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "should use groupBy order while grouping",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should use groupBy order while grouping"
                },
                {
                    "ancestorTitles": [],
                    "duration": 4885,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "should toggle group when group cell is clicked",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should toggle group when group cell is clicked"
                },
                {
                    "ancestorTitles": [],
                    "duration": 1213,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "should toggle group using keyboard",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should toggle group using keyboard"
                },
                {
                    "ancestorTitles": [],
                    "duration": 512,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "should set aria-attributes",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should set aria-attributes"
                },
                {
                    "ancestorTitles": [],
                    "duration": 792,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "should select rows in a group",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should select rows in a group"
                },
                {
                    "ancestorTitles": [],
                    "duration": 534,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "cell navigation in a treegrid",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "cell navigation in a treegrid"
                },
                {
                    "ancestorTitles": [],
                    "duration": 273,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "onFill is not supported when grouping is enabled",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "onFill is not supported when grouping is enabled"
                },
                {
                    "ancestorTitles": [],
                    "duration": 309,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "copy/paste when grouping is enabled",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "copy/paste when grouping is enabled"
                },
                {
                    "ancestorTitles": [],
                    "duration": 314,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "update row using formatter",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "update row using formatter"
                }
            ],
            "endTime": 1674752074912,
            "message": "",
            "name": "/home/flakie/package/test/grouping.test.tsx",
            "startTime": 1674751958564,
            "status": "passed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [],
                    "duration": 5212,
                    "failureDetails": [
                        {
                            "message": "thrown: \"Exceeded timeout of 5000 ms for a test.\nUse jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test.\""
                        }
                    ],
                    "failureMessages": [
                        "Error: thrown: \"Exceeded timeout of 5000 ms for a test.\nUse jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test.\"\n    at Object.test (/home/flakie/package/test/keyboardNavigation.test.tsx:25:1)\n    at Runtime._execModule (/usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1377:24)\n    at Runtime._loadModule (/usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:989:12)\n    at Runtime.requireModule (/usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:849:12)\n    at jestAdapter (/usr/local/lib/node_modules/jest/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:77:13)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at runTestInternal (/usr/local/lib/node_modules/jest/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/usr/local/lib/node_modules/jest/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/usr/local/lib/node_modules/jest/node_modules/jest-runner/build/testWorker.js:106:12)"
                    ],
                    "fullName": "keyboard navigation",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "failed",
                    "title": "keyboard navigation"
                },
                {
                    "ancestorTitles": [],
                    "duration": 5397,
                    "failureDetails": [
                        {
                            "message": "thrown: \"Exceeded timeout of 5000 ms for a test.\nUse jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test.\""
                        }
                    ],
                    "failureMessages": [
                        "Error: thrown: \"Exceeded timeout of 5000 ms for a test.\nUse jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test.\"\n    at Object.test (/home/flakie/package/test/keyboardNavigation.test.tsx:101:1)\n    at Runtime._execModule (/usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1377:24)\n    at Runtime._loadModule (/usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:989:12)\n    at Runtime.requireModule (/usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:849:12)\n    at jestAdapter (/usr/local/lib/node_modules/jest/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:77:13)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at runTestInternal (/usr/local/lib/node_modules/jest/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/usr/local/lib/node_modules/jest/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/usr/local/lib/node_modules/jest/node_modules/jest-runner/build/testWorker.js:106:12)"
                    ],
                    "fullName": "cellNavigationMode=\"NONE\"",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "failed",
                    "title": "cellNavigationMode=\"NONE\""
                },
                {
                    "ancestorTitles": [],
                    "duration": 3006,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "cellNavigationMode=\"CHANGE_ROW\"",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "cellNavigationMode=\"CHANGE_ROW\""
                },
                {
                    "ancestorTitles": [],
                    "duration": 424,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "cellNavigationMode=\"LOOP_OVER_ROW\"",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "cellNavigationMode=\"LOOP_OVER_ROW\""
                },
                {
                    "ancestorTitles": [],
                    "duration": 566,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "grid enter/exit",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "grid enter/exit"
                },
                {
                    "ancestorTitles": [],
                    "duration": 119,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "navigation with focusable formatter",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "navigation with focusable formatter"
                },
                {
                    "ancestorTitles": [],
                    "duration": 226,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "navigation when header and summary rows have focusable elements",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "navigation when header and summary rows have focusable elements"
                },
                {
                    "ancestorTitles": [],
                    "duration": 1160,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "navigation when selected cell not in the viewport",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "navigation when selected cell not in the viewport"
                },
                {
                    "ancestorTitles": [],
                    "duration": 28,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "reset selected cell when column is removed",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "reset selected cell when column is removed"
                },
                {
                    "ancestorTitles": [],
                    "duration": 86,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "reset selected cell when row is removed",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "reset selected cell when row is removed"
                },
                {
                    "ancestorTitles": [],
                    "duration": 283,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "should not change the left and right arrow behavior for right to left languages",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "should not change the left and right arrow behavior for right to left languages"
                }
            ],
            "endTime": 1674752074981,
            "message": "  \u25cf keyboard navigation\n\n    thrown: \"Exceeded timeout of 5000 ms for a test.\n    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test.\"\n\n      23 | ];\n      24 |\n    > 25 | test('keyboard navigation', async () => {\n         | ^\n      26 |   setup({ columns, rows, topSummaryRows, bottomSummaryRows });\n      27 |\n      28 |   // no initial selection\n\n      at Object.test (test/keyboardNavigation.test.tsx:25:1)\n\n  \u25cf cellNavigationMode=\"NONE\"\n\n    thrown: \"Exceeded timeout of 5000 ms for a test.\n    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test.\"\n\n       99 | });\n      100 |\n    > 101 | test('cellNavigationMode=\"NONE\"', async () => {\n          | ^\n      102 |   setup({ columns, rows, bottomSummaryRows, cellNavigationMode: 'NONE' });\n      103 |\n      104 |   // pressing arrowleft on the leftmost cell does nothing\n\n      at Object.test (test/keyboardNavigation.test.tsx:101:1)\n",
            "name": "/home/flakie/package/test/keyboardNavigation.test.tsx",
            "startTime": 1674751958174,
            "status": "failed",
            "summary": ""
        },
        {
            "assertionResults": [
                {
                    "ancestorTitles": [],
                    "duration": 16731,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "virtualization is enabled",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "virtualization is enabled"
                },
                {
                    "ancestorTitles": [],
                    "duration": 711,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "virtualization is enabled with 4 frozen columns",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "virtualization is enabled with 4 frozen columns"
                },
                {
                    "ancestorTitles": [],
                    "duration": 523,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "virtualization is enabled with all columns frozen",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "virtualization is enabled with all columns frozen"
                },
                {
                    "ancestorTitles": [],
                    "duration": 88,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "virtualization is enabled with 2 summary rows",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "virtualization is enabled with 2 summary rows"
                },
                {
                    "ancestorTitles": [],
                    "duration": 34,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "zero columns",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "zero columns"
                },
                {
                    "ancestorTitles": [],
                    "duration": 25,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "zero rows",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "zero rows"
                },
                {
                    "ancestorTitles": [],
                    "duration": 49,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "virtualization is enable with not enough columns or rows to virtualize",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "virtualization is enable with not enough columns or rows to virtualize"
                },
                {
                    "ancestorTitles": [],
                    "duration": 4034,
                    "failureDetails": [],
                    "failureMessages": [],
                    "fullName": "enableVirtualization is disabled",
                    "invocations": 1,
                    "location": null,
                    "numPassingAsserts": 0,
                    "retryReasons": [],
                    "status": "passed",
                    "title": "enableVirtualization is disabled"
                }
            ],
            "endTime": 1674752079475,
            "message": "",
            "name": "/home/flakie/package/test/virtualization.test.ts",
            "startTime": 1674751958976,
            "status": "passed",
            "summary": ""
        }
    ],
    "wasInterrupted": false
}