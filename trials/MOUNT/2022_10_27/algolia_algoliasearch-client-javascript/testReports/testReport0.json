{"numFailedTestSuites":75,"numFailedTests":41,"numPassedTestSuites":40,"numPassedTests":159,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":68,"numTodoTests":0,"numTotalTestSuites":115,"numTotalTests":200,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":2,"total":2,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1666890025568,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["retry strategy"],"failureMessages":[],"fullName":"retry strategy retries after a timeout","location":null,"status":"passed","title":"retries after a timeout"},{"ancestorTitles":["retry strategy"],"failureMessages":[],"fullName":"retry strategy retries after a network error","location":null,"status":"passed","title":"retries after a network error"},{"ancestorTitles":["retry strategy"],"failureMessages":[],"fullName":"retry strategy retries after a 1xx","location":null,"status":"passed","title":"retries after a 1xx"},{"ancestorTitles":["retry strategy"],"failureMessages":[],"fullName":"retry strategy do not retry after a 2xx","location":null,"status":"passed","title":"do not retry after a 2xx"},{"ancestorTitles":["retry strategy"],"failureMessages":[],"fullName":"retry strategy retries after a 3xx","location":null,"status":"passed","title":"retries after a 3xx"},{"ancestorTitles":["retry strategy"],"failureMessages":[],"fullName":"retry strategy do not retry after a 4xx","location":null,"status":"passed","title":"do not retry after a 4xx"},{"ancestorTitles":["retry strategy"],"failureMessages":[],"fullName":"retry strategy retries after a 5xx","location":null,"status":"passed","title":"retries after a 5xx"},{"ancestorTitles":["retry strategy"],"failureMessages":[],"fullName":"retry strategy takes cache in consideration","location":null,"status":"passed","title":"takes cache in consideration"},{"ancestorTitles":["retry strategy"],"failureMessages":[],"fullName":"retry strategy respects TTL","location":null,"status":"passed","title":"respects TTL"},{"ancestorTitles":["retry strategy"],"failureMessages":[],"fullName":"retry strategy respests hosts order","location":null,"status":"passed","title":"respests hosts order"},{"ancestorTitles":["retry strategy"],"failureMessages":[],"fullName":"retry strategy gives all hosts when all are down","location":null,"status":"passed","title":"gives all hosts when all are down"},{"ancestorTitles":["retry strategy"],"failureMessages":[],"fullName":"retry strategy sets timeouted hosts on the end of the list","location":null,"status":"passed","title":"sets timeouted hosts on the end of the list"}],"endTime":1666890056462,"message":"","name":"/home/flakie/package/packages/transporter/src/__tests__/unit/retry-strategy.test.ts","startTime":1666890027731,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["retry strategy"],"failureMessages":[],"fullName":"retry strategy retries after a timeout","location":null,"status":"passed","title":"retries after a timeout"},{"ancestorTitles":["retry strategy"],"failureMessages":[],"fullName":"retry strategy retries after a network error","location":null,"status":"passed","title":"retries after a network error"},{"ancestorTitles":["retry strategy"],"failureMessages":[],"fullName":"retry strategy retries after a 1xx","location":null,"status":"passed","title":"retries after a 1xx"},{"ancestorTitles":["retry strategy"],"failureMessages":[],"fullName":"retry strategy do not retry after a 2xx","location":null,"status":"passed","title":"do not retry after a 2xx"},{"ancestorTitles":["retry strategy"],"failureMessages":[],"fullName":"retry strategy retries after a 3xx","location":null,"status":"passed","title":"retries after a 3xx"},{"ancestorTitles":["retry strategy"],"failureMessages":[],"fullName":"retry strategy do not retry after a 4xx","location":null,"status":"passed","title":"do not retry after a 4xx"},{"ancestorTitles":["retry strategy"],"failureMessages":[],"fullName":"retry strategy retries after a 5xx","location":null,"status":"passed","title":"retries after a 5xx"},{"ancestorTitles":["retry strategy"],"failureMessages":[],"fullName":"retry strategy takes cache in consideration","location":null,"status":"passed","title":"takes cache in consideration"},{"ancestorTitles":["retry strategy"],"failureMessages":[],"fullName":"retry strategy respects TTL","location":null,"status":"passed","title":"respects TTL"},{"ancestorTitles":["retry strategy"],"failureMessages":[],"fullName":"retry strategy respests hosts order","location":null,"status":"passed","title":"respests hosts order"},{"ancestorTitles":["retry strategy"],"failureMessages":[],"fullName":"retry strategy gives all hosts when all are down","location":null,"status":"passed","title":"gives all hosts when all are down"},{"ancestorTitles":["retry strategy"],"failureMessages":[],"fullName":"retry strategy sets timeouted hosts on the end of the list","location":null,"status":"passed","title":"sets timeouted hosts on the end of the list"}],"endTime":1666890056657,"message":"","name":"/home/flakie/package/packages/transporter/src/__tests__/unit/retry-strategy.test.ts","startTime":1666890027731,"status":"passed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/unit/search-index.test.ts:11:23)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/unit/search-index.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["status code handling"],"failureMessages":["ReferenceError: AbortController is not defined\n    at Object.send (/home/flakie/package/packages/requester-fetch/src/createFetchRequester.ts:24:35)\n    at Object.<anonymous> (/home/flakie/package/packages/requester-fetch/src/__tests__/unit/fetch-requester.test.ts:54:38)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"status code handling sends requests","location":null,"status":"failed","title":"sends requests"},{"ancestorTitles":["status code handling"],"failureMessages":["ReferenceError: AbortController is not defined\n    at Object.send (/home/flakie/package/packages/requester-fetch/src/createFetchRequester.ts:24:35)\n    at Object.<anonymous> (/home/flakie/package/packages/requester-fetch/src/__tests__/unit/fetch-requester.test.ts:67:38)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"status code handling resolves status 200","location":null,"status":"failed","title":"resolves status 200"},{"ancestorTitles":["status code handling"],"failureMessages":["ReferenceError: AbortController is not defined\n    at Object.send (/home/flakie/package/packages/requester-fetch/src/createFetchRequester.ts:24:35)\n    at Object.<anonymous> (/home/flakie/package/packages/requester-fetch/src/__tests__/unit/fetch-requester.test.ts:82:38)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"status code handling resolves status 300","location":null,"status":"failed","title":"resolves status 300"},{"ancestorTitles":["status code handling"],"failureMessages":["ReferenceError: AbortController is not defined\n    at Object.send (/home/flakie/package/packages/requester-fetch/src/createFetchRequester.ts:24:35)\n    at Object.<anonymous> (/home/flakie/package/packages/requester-fetch/src/__tests__/unit/fetch-requester.test.ts:97:38)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"status code handling resolves status 400","location":null,"status":"failed","title":"resolves status 400"},{"ancestorTitles":["status code handling"],"failureMessages":["ReferenceError: AbortController is not defined\n    at Object.send (/home/flakie/package/packages/requester-fetch/src/createFetchRequester.ts:24:35)\n    at Object.<anonymous> (/home/flakie/package/packages/requester-fetch/src/__tests__/unit/fetch-requester.test.ts:120:38)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"status code handling handles chunked responses inside unicode character boundaries","location":null,"status":"failed","title":"handles chunked responses inside unicode character boundaries"},{"ancestorTitles":["timeout handling"],"failureMessages":["ReferenceError: AbortController is not defined\n    at Object.send (/home/flakie/package/packages/requester-fetch/src/createFetchRequester.ts:24:35)\n    at Object.<anonymous> (/home/flakie/package/packages/requester-fetch/src/__tests__/unit/fetch-requester.test.ts:129:38)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"timeout handling timeouts with the given 1 seconds connection timeout","location":null,"status":"failed","title":"timeouts with the given 1 seconds connection timeout"},{"ancestorTitles":["timeout handling"],"failureMessages":["ReferenceError: AbortController is not defined\n    at Object.send (/home/flakie/package/packages/requester-fetch/src/createFetchRequester.ts:24:35)\n    at Object.<anonymous> (/home/flakie/package/packages/requester-fetch/src/__tests__/unit/fetch-requester.test.ts:143:38)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"timeout handling connection timeouts with the given 2 seconds connection timeout","location":null,"status":"failed","title":"connection timeouts with the given 2 seconds connection timeout"},{"ancestorTitles":["timeout handling"],"failureMessages":["ReferenceError: AbortController is not defined\n    at Object.send (/home/flakie/package/packages/requester-fetch/src/createFetchRequester.ts:24:35)\n    at Object.<anonymous> (/home/flakie/package/packages/requester-fetch/src/__tests__/unit/fetch-requester.test.ts:158:38)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"timeout handling socket timeouts if response dont appears before the timeout with 2 seconds timeout","location":null,"status":"failed","title":"socket timeouts if response dont appears before the timeout with 2 seconds timeout"},{"ancestorTitles":["timeout handling"],"failureMessages":["ReferenceError: AbortController is not defined\n    at Object.send (/home/flakie/package/packages/requester-fetch/src/createFetchRequester.ts:24:35)\n    at Object.<anonymous> (/home/flakie/package/packages/requester-fetch/src/__tests__/unit/fetch-requester.test.ts:172:38)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"timeout handling socket timeouts if response dont appears before the timeout with 3 seconds timeout","location":null,"status":"failed","title":"socket timeouts if response dont appears before the timeout with 3 seconds timeout"},{"ancestorTitles":["timeout handling"],"failureMessages":["ReferenceError: AbortController is not defined\n    at Object.send (/home/flakie/package/packages/requester-fetch/src/createFetchRequester.ts:24:35)\n    at Object.<anonymous> (/home/flakie/package/packages/requester-fetch/src/__tests__/unit/fetch-requester.test.ts:190:38)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"timeout handling do not timeouts if response appears before the timeout","location":null,"status":"failed","title":"do not timeouts if response appears before the timeout"},{"ancestorTitles":["error handling"],"failureMessages":["ReferenceError: AbortController is not defined\n    at Object.send (/home/flakie/package/packages/requester-fetch/src/createFetchRequester.ts:24:35)\n    at Object.<anonymous> (/home/flakie/package/packages/requester-fetch/src/__tests__/unit/fetch-requester.test.ts:221:38)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"error handling resolves dns not found","location":null,"status":"failed","title":"resolves dns not found"},{"ancestorTitles":["error handling"],"failureMessages":["ReferenceError: AbortController is not defined\n    at Object.send (/home/flakie/package/packages/requester-fetch/src/createFetchRequester.ts:24:35)\n    at Object.<anonymous> (/home/flakie/package/packages/requester-fetch/src/__tests__/unit/fetch-requester.test.ts:234:38)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"error handling resolves general network errors","location":null,"status":"failed","title":"resolves general network errors"},{"ancestorTitles":["requesterOptions"],"failureMessages":["ReferenceError: AbortController is not defined\n    at Object.send (/home/flakie/package/packages/requester-fetch/src/createFetchRequester.ts:24:35)\n    at Object.<anonymous> (/home/flakie/package/packages/requester-fetch/src/__tests__/unit/fetch-requester.test.ts:265:41)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"requesterOptions allows to pass requesterOptions","location":null,"status":"failed","title":"allows to pass requesterOptions"}],"endTime":1666890061692,"message":"  ● status code handling › sends requests\n\n    ReferenceError: AbortController is not defined\n\n      22 |   return {\n      23 |     async send(request: Request): Promise<Readonly<AlgoliaResponse>> {\n    > 24 |       const abortController = new AbortController();\n         |                                   ^\n      25 |       const signal = abortController.signal;\n      26 |\n      27 |       const createTimeout = (timeout: number): NodeJS.Timeout => {\n\n      at Object.send (packages/requester-fetch/src/createFetchRequester.ts:24:35)\n      at Object.<anonymous> (packages/requester-fetch/src/__tests__/unit/fetch-requester.test.ts:54:38)\n\n  ● status code handling › resolves status 200\n\n    ReferenceError: AbortController is not defined\n\n      22 |   return {\n      23 |     async send(request: Request): Promise<Readonly<AlgoliaResponse>> {\n    > 24 |       const abortController = new AbortController();\n         |                                   ^\n      25 |       const signal = abortController.signal;\n      26 |\n      27 |       const createTimeout = (timeout: number): NodeJS.Timeout => {\n\n      at Object.send (packages/requester-fetch/src/createFetchRequester.ts:24:35)\n      at Object.<anonymous> (packages/requester-fetch/src/__tests__/unit/fetch-requester.test.ts:67:38)\n\n  ● status code handling › resolves status 300\n\n    ReferenceError: AbortController is not defined\n\n      22 |   return {\n      23 |     async send(request: Request): Promise<Readonly<AlgoliaResponse>> {\n    > 24 |       const abortController = new AbortController();\n         |                                   ^\n      25 |       const signal = abortController.signal;\n      26 |\n      27 |       const createTimeout = (timeout: number): NodeJS.Timeout => {\n\n      at Object.send (packages/requester-fetch/src/createFetchRequester.ts:24:35)\n      at Object.<anonymous> (packages/requester-fetch/src/__tests__/unit/fetch-requester.test.ts:82:38)\n\n  ● status code handling › resolves status 400\n\n    ReferenceError: AbortController is not defined\n\n      22 |   return {\n      23 |     async send(request: Request): Promise<Readonly<AlgoliaResponse>> {\n    > 24 |       const abortController = new AbortController();\n         |                                   ^\n      25 |       const signal = abortController.signal;\n      26 |\n      27 |       const createTimeout = (timeout: number): NodeJS.Timeout => {\n\n      at Object.send (packages/requester-fetch/src/createFetchRequester.ts:24:35)\n      at Object.<anonymous> (packages/requester-fetch/src/__tests__/unit/fetch-requester.test.ts:97:38)\n\n  ● status code handling › handles chunked responses inside unicode character boundaries\n\n    ReferenceError: AbortController is not defined\n\n      22 |   return {\n      23 |     async send(request: Request): Promise<Readonly<AlgoliaResponse>> {\n    > 24 |       const abortController = new AbortController();\n         |                                   ^\n      25 |       const signal = abortController.signal;\n      26 |\n      27 |       const createTimeout = (timeout: number): NodeJS.Timeout => {\n\n      at Object.send (packages/requester-fetch/src/createFetchRequester.ts:24:35)\n      at Object.<anonymous> (packages/requester-fetch/src/__tests__/unit/fetch-requester.test.ts:120:38)\n\n  ● timeout handling › timeouts with the given 1 seconds connection timeout\n\n    ReferenceError: AbortController is not defined\n\n      22 |   return {\n      23 |     async send(request: Request): Promise<Readonly<AlgoliaResponse>> {\n    > 24 |       const abortController = new AbortController();\n         |                                   ^\n      25 |       const signal = abortController.signal;\n      26 |\n      27 |       const createTimeout = (timeout: number): NodeJS.Timeout => {\n\n      at Object.send (packages/requester-fetch/src/createFetchRequester.ts:24:35)\n      at Object.<anonymous> (packages/requester-fetch/src/__tests__/unit/fetch-requester.test.ts:129:38)\n\n  ● timeout handling › connection timeouts with the given 2 seconds connection timeout\n\n    ReferenceError: AbortController is not defined\n\n      22 |   return {\n      23 |     async send(request: Request): Promise<Readonly<AlgoliaResponse>> {\n    > 24 |       const abortController = new AbortController();\n         |                                   ^\n      25 |       const signal = abortController.signal;\n      26 |\n      27 |       const createTimeout = (timeout: number): NodeJS.Timeout => {\n\n      at Object.send (packages/requester-fetch/src/createFetchRequester.ts:24:35)\n      at Object.<anonymous> (packages/requester-fetch/src/__tests__/unit/fetch-requester.test.ts:143:38)\n\n  ● timeout handling › socket timeouts if response dont appears before the timeout with 2 seconds timeout\n\n    ReferenceError: AbortController is not defined\n\n      22 |   return {\n      23 |     async send(request: Request): Promise<Readonly<AlgoliaResponse>> {\n    > 24 |       const abortController = new AbortController();\n         |                                   ^\n      25 |       const signal = abortController.signal;\n      26 |\n      27 |       const createTimeout = (timeout: number): NodeJS.Timeout => {\n\n      at Object.send (packages/requester-fetch/src/createFetchRequester.ts:24:35)\n      at Object.<anonymous> (packages/requester-fetch/src/__tests__/unit/fetch-requester.test.ts:158:38)\n\n  ● timeout handling › socket timeouts if response dont appears before the timeout with 3 seconds timeout\n\n    ReferenceError: AbortController is not defined\n\n      22 |   return {\n      23 |     async send(request: Request): Promise<Readonly<AlgoliaResponse>> {\n    > 24 |       const abortController = new AbortController();\n         |                                   ^\n      25 |       const signal = abortController.signal;\n      26 |\n      27 |       const createTimeout = (timeout: number): NodeJS.Timeout => {\n\n      at Object.send (packages/requester-fetch/src/createFetchRequester.ts:24:35)\n      at Object.<anonymous> (packages/requester-fetch/src/__tests__/unit/fetch-requester.test.ts:172:38)\n\n  ● timeout handling › do not timeouts if response appears before the timeout\n\n    ReferenceError: AbortController is not defined\n\n      22 |   return {\n      23 |     async send(request: Request): Promise<Readonly<AlgoliaResponse>> {\n    > 24 |       const abortController = new AbortController();\n         |                                   ^\n      25 |       const signal = abortController.signal;\n      26 |\n      27 |       const createTimeout = (timeout: number): NodeJS.Timeout => {\n\n      at Object.send (packages/requester-fetch/src/createFetchRequester.ts:24:35)\n      at Object.<anonymous> (packages/requester-fetch/src/__tests__/unit/fetch-requester.test.ts:190:38)\n\n  ● error handling › resolves dns not found\n\n    ReferenceError: AbortController is not defined\n\n      22 |   return {\n      23 |     async send(request: Request): Promise<Readonly<AlgoliaResponse>> {\n    > 24 |       const abortController = new AbortController();\n         |                                   ^\n      25 |       const signal = abortController.signal;\n      26 |\n      27 |       const createTimeout = (timeout: number): NodeJS.Timeout => {\n\n      at Object.send (packages/requester-fetch/src/createFetchRequester.ts:24:35)\n      at Object.<anonymous> (packages/requester-fetch/src/__tests__/unit/fetch-requester.test.ts:221:38)\n\n  ● error handling › resolves general network errors\n\n    ReferenceError: AbortController is not defined\n\n      22 |   return {\n      23 |     async send(request: Request): Promise<Readonly<AlgoliaResponse>> {\n    > 24 |       const abortController = new AbortController();\n         |                                   ^\n      25 |       const signal = abortController.signal;\n      26 |\n      27 |       const createTimeout = (timeout: number): NodeJS.Timeout => {\n\n      at Object.send (packages/requester-fetch/src/createFetchRequester.ts:24:35)\n      at Object.<anonymous> (packages/requester-fetch/src/__tests__/unit/fetch-requester.test.ts:234:38)\n\n  ● requesterOptions › allows to pass requesterOptions\n\n    ReferenceError: AbortController is not defined\n\n      22 |   return {\n      23 |     async send(request: Request): Promise<Readonly<AlgoliaResponse>> {\n    > 24 |       const abortController = new AbortController();\n         |                                   ^\n      25 |       const signal = abortController.signal;\n      26 |\n      27 |       const createTimeout = (timeout: number): NodeJS.Timeout => {\n\n      at Object.send (packages/requester-fetch/src/createFetchRequester.ts:24:35)\n      at Object.<anonymous> (packages/requester-fetch/src/__tests__/unit/fetch-requester.test.ts:265:41)\n","name":"/home/flakie/package/packages/requester-fetch/src/__tests__/unit/fetch-requester.test.ts","startTime":1666890060117,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/unit/search-index.test.ts:11:23)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/unit/search-index.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/integration/search.test.ts:5:19)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/integration/search.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/integration/search.test.ts:5:19)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/integration/search.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["status code handling"],"failureMessages":[],"fullName":"status code handling sends requests","location":null,"status":"passed","title":"sends requests"},{"ancestorTitles":["status code handling"],"failureMessages":[],"fullName":"status code handling resolves status 200","location":null,"status":"passed","title":"resolves status 200"},{"ancestorTitles":["status code handling"],"failureMessages":[],"fullName":"status code handling resolves status 300","location":null,"status":"passed","title":"resolves status 300"},{"ancestorTitles":["status code handling"],"failureMessages":[],"fullName":"status code handling resolves status 400","location":null,"status":"passed","title":"resolves status 400"},{"ancestorTitles":["status code handling"],"failureMessages":[],"fullName":"status code handling handles chunked responses inside unicode character boundaries","location":null,"status":"passed","title":"handles chunked responses inside unicode character boundaries"},{"ancestorTitles":["timeout handling"],"failureMessages":[],"fullName":"timeout handling timeouts with the given 1 seconds connection timeout","location":null,"status":"passed","title":"timeouts with the given 1 seconds connection timeout"},{"ancestorTitles":["timeout handling"],"failureMessages":[],"fullName":"timeout handling connection timeouts with the given 2 seconds connection timeout","location":null,"status":"passed","title":"connection timeouts with the given 2 seconds connection timeout"},{"ancestorTitles":["timeout handling"],"failureMessages":["Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 1999\nReceived:   6\n    at Object.<anonymous> (/home/flakie/package/packages/requester-node-http/src/__tests__/unit/node-http-requester.test.ts:154:26)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"timeout handling socket timeouts if response dont appears before the timeout with 2 seconds timeout","location":null,"status":"failed","title":"socket timeouts if response dont appears before the timeout with 2 seconds timeout"},{"ancestorTitles":["timeout handling"],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"Socket timeout\"\nReceived: \"connect ECONNREFUSED 127.0.0.1:1111\"\n    at Object.<anonymous> (/home/flakie/package/packages/requester-node-http/src/__tests__/unit/node-http-requester.test.ts:171:30)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"timeout handling socket timeouts if response dont appears before the timeout with 3 seconds timeout","location":null,"status":"failed","title":"socket timeouts if response dont appears before the timeout with 3 seconds timeout"},{"ancestorTitles":["timeout handling"],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 0\n    at Object.<anonymous> (/home/flakie/package/packages/requester-node-http/src/__tests__/unit/node-http-requester.test.ts:188:29)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"timeout handling do not timeouts if response appears before the timeout","location":null,"status":"failed","title":"do not timeouts if response appears before the timeout"},{"ancestorTitles":["timeout handling"],"failureMessages":[],"fullName":"timeout handling can be destroyed","location":null,"status":"passed","title":"can be destroyed"},{"ancestorTitles":["error handling"],"failureMessages":[],"fullName":"error handling resolves dns not found","location":null,"status":"passed","title":"resolves dns not found"},{"ancestorTitles":["error handling"],"failureMessages":[],"fullName":"error handling resolves general network errors","location":null,"status":"passed","title":"resolves general network errors"},{"ancestorTitles":["requesterOptions"],"failureMessages":[],"fullName":"requesterOptions allows to pass requesterOptions","location":null,"status":"passed","title":"allows to pass requesterOptions"}],"endTime":1666890063382,"message":"  ● timeout handling › socket timeouts if response dont appears before the timeout with 2 seconds timeout\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: > 1999\n    Received:   6\n\n      152 |     const now = Date.now();\n      153 |\n    > 154 |     expect(now - before).toBeGreaterThan(1999);\n          |                          ^\n      155 |     expect(now - before).toBeLessThan(2200);\n      156 |     expect(response.content).toBe('Socket timeout');\n      157 |   });\n\n      at Object.<anonymous> (packages/requester-node-http/src/__tests__/unit/node-http-requester.test.ts:154:26)\n\n  ● timeout handling › socket timeouts if response dont appears before the timeout with 3 seconds timeout\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"Socket timeout\"\n    Received: \"connect ECONNREFUSED 127.0.0.1:1111\"\n\n      169 |     const now = Date.now();\n      170 |\n    > 171 |     expect(response.content).toBe('Socket timeout');\n          |                              ^\n      172 |     expect(now - before).toBeGreaterThan(2999);\n      173 |     expect(now - before).toBeLessThan(3200);\n      174 |   });\n\n      at Object.<anonymous> (packages/requester-node-http/src/__tests__/unit/node-http-requester.test.ts:171:30)\n\n  ● timeout handling › do not timeouts if response appears before the timeout\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 0\n\n      186 |\n      187 |     expect(response.isTimedOut).toBe(false);\n    > 188 |     expect(response.status).toBe(200);\n          |                             ^\n      189 |     expect(response.content).toBe('{\"foo\": \"bar\"}');\n      190 |     expect(now - before).toBeGreaterThan(4999);\n      191 |     expect(now - before).toBeLessThan(5200);\n\n      at Object.<anonymous> (packages/requester-node-http/src/__tests__/unit/node-http-requester.test.ts:188:29)\n","name":"/home/flakie/package/packages/requester-node-http/src/__tests__/unit/node-http-requester.test.ts","startTime":1666890057030,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/integration/search.test.ts:5:19)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/integration/search.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/algoliasearch/src/__tests__/default.test.ts:7:23)\n","name":"/home/flakie/package/packages/algoliasearch/src/__tests__/default.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/algoliasearch/src/__tests__/default.test.ts:7:23)\n","name":"/home/flakie/package/packages/algoliasearch/src/__tests__/default.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["status code handling"],"failureMessages":["ReferenceError: XMLHttpRequest is not defined\n    at /home/flakie/package/packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:7:35\n    at new Promise (<anonymous>)\n    at Object.send (/home/flakie/package/packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:6:14)\n    at Object.<anonymous> (/home/flakie/package/packages/requester-browser-xhr/src/__tests__/unit/browser-xhr-requester.test.ts:48:21)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)","Error: expect.assertions(3)\n\nExpected three assertions to be called but received zero assertion calls.\n    at Object.<anonymous> (/home/flakie/package/packages/requester-browser-xhr/src/__tests__/unit/browser-xhr-requester.test.ts:33:12)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"status code handling sends requests","location":null,"status":"failed","title":"sends requests"},{"ancestorTitles":["status code handling"],"failureMessages":["ReferenceError: XMLHttpRequest is not defined\n    at /home/flakie/package/packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:7:35\n    at new Promise (<anonymous>)\n    at Object.send (/home/flakie/package/packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:6:14)\n    at Object.<anonymous> (/home/flakie/package/packages/requester-browser-xhr/src/__tests__/unit/browser-xhr-requester.test.ts:59:38)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"status code handling resolves status 200","location":null,"status":"failed","title":"resolves status 200"},{"ancestorTitles":["status code handling"],"failureMessages":["ReferenceError: XMLHttpRequest is not defined\n    at /home/flakie/package/packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:7:35\n    at new Promise (<anonymous>)\n    at Object.send (/home/flakie/package/packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:6:14)\n    at Object.<anonymous> (/home/flakie/package/packages/requester-browser-xhr/src/__tests__/unit/browser-xhr-requester.test.ts:74:38)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"status code handling resolves status 300","location":null,"status":"failed","title":"resolves status 300"},{"ancestorTitles":["status code handling"],"failureMessages":["ReferenceError: XMLHttpRequest is not defined\n    at /home/flakie/package/packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:7:35\n    at new Promise (<anonymous>)\n    at Object.send (/home/flakie/package/packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:6:14)\n    at Object.<anonymous> (/home/flakie/package/packages/requester-browser-xhr/src/__tests__/unit/browser-xhr-requester.test.ts:89:38)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"status code handling resolves status 400","location":null,"status":"failed","title":"resolves status 400"},{"ancestorTitles":["status code handling"],"failureMessages":["ReferenceError: XMLHttpRequest is not defined\n    at /home/flakie/package/packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:7:35\n    at new Promise (<anonymous>)\n    at Object.send (/home/flakie/package/packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:6:14)\n    at Object.<anonymous> (/home/flakie/package/packages/requester-browser-xhr/src/__tests__/unit/browser-xhr-requester.test.ts:104:38)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"status code handling handles the protocol","location":null,"status":"failed","title":"handles the protocol"},{"ancestorTitles":["timeout handling"],"failureMessages":["ReferenceError: XMLHttpRequest is not defined\n    at /home/flakie/package/packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:7:35\n    at new Promise (<anonymous>)\n    at Object.send (/home/flakie/package/packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:6:14)\n    at Object.<anonymous> (/home/flakie/package/packages/requester-browser-xhr/src/__tests__/unit/browser-xhr-requester.test.ts:118:38)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"timeout handling connection timeouts with the given 1 seconds connection timeout","location":null,"status":"failed","title":"connection timeouts with the given 1 seconds connection timeout"},{"ancestorTitles":["timeout handling"],"failureMessages":["ReferenceError: XMLHttpRequest is not defined\n    at /home/flakie/package/packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:7:35\n    at new Promise (<anonymous>)\n    at Object.send (/home/flakie/package/packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:6:14)\n    at Object.<anonymous> (/home/flakie/package/packages/requester-browser-xhr/src/__tests__/unit/browser-xhr-requester.test.ts:132:38)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"timeout handling conection timeouts with the given 2 seconds connection timeout","location":null,"status":"failed","title":"conection timeouts with the given 2 seconds connection timeout"},{"ancestorTitles":["timeout handling"],"failureMessages":["ReferenceError: XMLHttpRequest is not defined\n    at /home/flakie/package/packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:7:35\n    at new Promise (<anonymous>)\n    at Object.send (/home/flakie/package/packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:6:14)\n    at Object.<anonymous> (/home/flakie/package/packages/requester-browser-xhr/src/__tests__/unit/browser-xhr-requester.test.ts:147:38)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"timeout handling socket timeouts if response dont appears before the timeout with 2 seconds timeout","location":null,"status":"failed","title":"socket timeouts if response dont appears before the timeout with 2 seconds timeout"},{"ancestorTitles":["timeout handling"],"failureMessages":["ReferenceError: XMLHttpRequest is not defined\n    at /home/flakie/package/packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:7:35\n    at new Promise (<anonymous>)\n    at Object.send (/home/flakie/package/packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:6:14)\n    at Object.<anonymous> (/home/flakie/package/packages/requester-browser-xhr/src/__tests__/unit/browser-xhr-requester.test.ts:161:38)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"timeout handling socket timeouts if response dont appears before the timeout with 3 seconds timeout","location":null,"status":"failed","title":"socket timeouts if response dont appears before the timeout with 3 seconds timeout"},{"ancestorTitles":["timeout handling"],"failureMessages":["ReferenceError: XMLHttpRequest is not defined\n    at /home/flakie/package/packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:7:35\n    at new Promise (<anonymous>)\n    at Object.send (/home/flakie/package/packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:6:14)\n    at Object.<anonymous> (/home/flakie/package/packages/requester-browser-xhr/src/__tests__/unit/browser-xhr-requester.test.ts:179:38)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"timeout handling do not timeouts if response appears before the timeout","location":null,"status":"failed","title":"do not timeouts if response appears before the timeout"},{"ancestorTitles":["error handling"],"failureMessages":["ReferenceError: XMLHttpRequest is not defined\n    at /home/flakie/package/packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:7:35\n    at new Promise (<anonymous>)\n    at Object.send (/home/flakie/package/packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:6:14)\n    at Object.<anonymous> (/home/flakie/package/packages/requester-browser-xhr/src/__tests__/unit/browser-xhr-requester.test.ts:208:38)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"error handling resolves dns not found","location":null,"status":"failed","title":"resolves dns not found"},{"ancestorTitles":["error handling"],"failureMessages":["ReferenceError: XMLHttpRequest is not defined\n    at /home/flakie/package/packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:7:35\n    at new Promise (<anonymous>)\n    at Object.send (/home/flakie/package/packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:6:14)\n    at Object.<anonymous> (/home/flakie/package/packages/requester-browser-xhr/src/__tests__/unit/browser-xhr-requester.test.ts:220:38)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"error handling resolves general network errors","location":null,"status":"failed","title":"resolves general network errors"}],"endTime":1666890088205,"message":"  ● status code handling › sends requests\n\n    ReferenceError: XMLHttpRequest is not defined\n\n       5 |     send(request: Request): Readonly<Promise<Response>> {\n       6 |       return new Promise((resolve): void => {\n    >  7 |         const baseRequester = new XMLHttpRequest();\n         |                                   ^\n       8 |         baseRequester.open(request.method, request.url, true);\n       9 |\n      10 |         Object.keys(request.headers).forEach(key =>\n\n      at packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:7:35\n      at Object.send (packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:6:14)\n      at Object.<anonymous> (packages/requester-browser-xhr/src/__tests__/unit/browser-xhr-requester.test.ts:48:21)\n\n  ● status code handling › sends requests\n\n    expect.assertions(3)\n\n    Expected three assertions to be called but received zero assertion calls.\n\n      31 |\n      32 |   it('sends requests', async () => {\n    > 33 |     expect.assertions(3);\n         |            ^\n      34 |\n      35 |     mock.post(\n      36 |       'https://algolia-dns.net/foo?x-algolia-header=bar',\n\n      at Object.<anonymous> (packages/requester-browser-xhr/src/__tests__/unit/browser-xhr-requester.test.ts:33:12)\n\n  ● status code handling › resolves status 200\n\n    ReferenceError: XMLHttpRequest is not defined\n\n       5 |     send(request: Request): Readonly<Promise<Response>> {\n       6 |       return new Promise((resolve): void => {\n    >  7 |         const baseRequester = new XMLHttpRequest();\n         |                                   ^\n       8 |         baseRequester.open(request.method, request.url, true);\n       9 |\n      10 |         Object.keys(request.headers).forEach(key =>\n\n      at packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:7:35\n      at Object.send (packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:6:14)\n      at Object.<anonymous> (packages/requester-browser-xhr/src/__tests__/unit/browser-xhr-requester.test.ts:59:38)\n\n  ● status code handling › resolves status 300\n\n    ReferenceError: XMLHttpRequest is not defined\n\n       5 |     send(request: Request): Readonly<Promise<Response>> {\n       6 |       return new Promise((resolve): void => {\n    >  7 |         const baseRequester = new XMLHttpRequest();\n         |                                   ^\n       8 |         baseRequester.open(request.method, request.url, true);\n       9 |\n      10 |         Object.keys(request.headers).forEach(key =>\n\n      at packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:7:35\n      at Object.send (packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:6:14)\n      at Object.<anonymous> (packages/requester-browser-xhr/src/__tests__/unit/browser-xhr-requester.test.ts:74:38)\n\n  ● status code handling › resolves status 400\n\n    ReferenceError: XMLHttpRequest is not defined\n\n       5 |     send(request: Request): Readonly<Promise<Response>> {\n       6 |       return new Promise((resolve): void => {\n    >  7 |         const baseRequester = new XMLHttpRequest();\n         |                                   ^\n       8 |         baseRequester.open(request.method, request.url, true);\n       9 |\n      10 |         Object.keys(request.headers).forEach(key =>\n\n      at packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:7:35\n      at Object.send (packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:6:14)\n      at Object.<anonymous> (packages/requester-browser-xhr/src/__tests__/unit/browser-xhr-requester.test.ts:89:38)\n\n  ● status code handling › handles the protocol\n\n    ReferenceError: XMLHttpRequest is not defined\n\n       5 |     send(request: Request): Readonly<Promise<Response>> {\n       6 |       return new Promise((resolve): void => {\n    >  7 |         const baseRequester = new XMLHttpRequest();\n         |                                   ^\n       8 |         baseRequester.open(request.method, request.url, true);\n       9 |\n      10 |         Object.keys(request.headers).forEach(key =>\n\n      at packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:7:35\n      at Object.send (packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:6:14)\n      at Object.<anonymous> (packages/requester-browser-xhr/src/__tests__/unit/browser-xhr-requester.test.ts:104:38)\n\n  ● timeout handling › connection timeouts with the given 1 seconds connection timeout\n\n    ReferenceError: XMLHttpRequest is not defined\n\n       5 |     send(request: Request): Readonly<Promise<Response>> {\n       6 |       return new Promise((resolve): void => {\n    >  7 |         const baseRequester = new XMLHttpRequest();\n         |                                   ^\n       8 |         baseRequester.open(request.method, request.url, true);\n       9 |\n      10 |         Object.keys(request.headers).forEach(key =>\n\n      at packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:7:35\n      at Object.send (packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:6:14)\n      at Object.<anonymous> (packages/requester-browser-xhr/src/__tests__/unit/browser-xhr-requester.test.ts:118:38)\n\n  ● timeout handling › conection timeouts with the given 2 seconds connection timeout\n\n    ReferenceError: XMLHttpRequest is not defined\n\n       5 |     send(request: Request): Readonly<Promise<Response>> {\n       6 |       return new Promise((resolve): void => {\n    >  7 |         const baseRequester = new XMLHttpRequest();\n         |                                   ^\n       8 |         baseRequester.open(request.method, request.url, true);\n       9 |\n      10 |         Object.keys(request.headers).forEach(key =>\n\n      at packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:7:35\n      at Object.send (packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:6:14)\n      at Object.<anonymous> (packages/requester-browser-xhr/src/__tests__/unit/browser-xhr-requester.test.ts:132:38)\n\n  ● timeout handling › socket timeouts if response dont appears before the timeout with 2 seconds timeout\n\n    ReferenceError: XMLHttpRequest is not defined\n\n       5 |     send(request: Request): Readonly<Promise<Response>> {\n       6 |       return new Promise((resolve): void => {\n    >  7 |         const baseRequester = new XMLHttpRequest();\n         |                                   ^\n       8 |         baseRequester.open(request.method, request.url, true);\n       9 |\n      10 |         Object.keys(request.headers).forEach(key =>\n\n      at packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:7:35\n      at Object.send (packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:6:14)\n      at Object.<anonymous> (packages/requester-browser-xhr/src/__tests__/unit/browser-xhr-requester.test.ts:147:38)\n\n  ● timeout handling › socket timeouts if response dont appears before the timeout with 3 seconds timeout\n\n    ReferenceError: XMLHttpRequest is not defined\n\n       5 |     send(request: Request): Readonly<Promise<Response>> {\n       6 |       return new Promise((resolve): void => {\n    >  7 |         const baseRequester = new XMLHttpRequest();\n         |                                   ^\n       8 |         baseRequester.open(request.method, request.url, true);\n       9 |\n      10 |         Object.keys(request.headers).forEach(key =>\n\n      at packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:7:35\n      at Object.send (packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:6:14)\n      at Object.<anonymous> (packages/requester-browser-xhr/src/__tests__/unit/browser-xhr-requester.test.ts:161:38)\n\n  ● timeout handling › do not timeouts if response appears before the timeout\n\n    ReferenceError: XMLHttpRequest is not defined\n\n       5 |     send(request: Request): Readonly<Promise<Response>> {\n       6 |       return new Promise((resolve): void => {\n    >  7 |         const baseRequester = new XMLHttpRequest();\n         |                                   ^\n       8 |         baseRequester.open(request.method, request.url, true);\n       9 |\n      10 |         Object.keys(request.headers).forEach(key =>\n\n      at packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:7:35\n      at Object.send (packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:6:14)\n      at Object.<anonymous> (packages/requester-browser-xhr/src/__tests__/unit/browser-xhr-requester.test.ts:179:38)\n\n  ● error handling › resolves dns not found\n\n    ReferenceError: XMLHttpRequest is not defined\n\n       5 |     send(request: Request): Readonly<Promise<Response>> {\n       6 |       return new Promise((resolve): void => {\n    >  7 |         const baseRequester = new XMLHttpRequest();\n         |                                   ^\n       8 |         baseRequester.open(request.method, request.url, true);\n       9 |\n      10 |         Object.keys(request.headers).forEach(key =>\n\n      at packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:7:35\n      at Object.send (packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:6:14)\n      at Object.<anonymous> (packages/requester-browser-xhr/src/__tests__/unit/browser-xhr-requester.test.ts:208:38)\n\n  ● error handling › resolves general network errors\n\n    ReferenceError: XMLHttpRequest is not defined\n\n       5 |     send(request: Request): Readonly<Promise<Response>> {\n       6 |       return new Promise((resolve): void => {\n    >  7 |         const baseRequester = new XMLHttpRequest();\n         |                                   ^\n       8 |         baseRequester.open(request.method, request.url, true);\n       9 |\n      10 |         Object.keys(request.headers).forEach(key =>\n\n      at packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:7:35\n      at Object.send (packages/requester-browser-xhr/src/createBrowserXhrRequester.ts:6:14)\n      at Object.<anonymous> (packages/requester-browser-xhr/src/__tests__/unit/browser-xhr-requester.test.ts:220:38)\n","name":"/home/flakie/package/packages/requester-browser-xhr/src/__tests__/unit/browser-xhr-requester.test.ts","startTime":1666890087055,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/recommend/src/__tests__/recommend-client.test.ts:7:19)\n","name":"/home/flakie/package/packages/recommend/src/__tests__/recommend-client.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/recommend/src/__tests__/recommend-client.test.ts:7:19)\n","name":"/home/flakie/package/packages/recommend/src/__tests__/recommend-client.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/integration/mcm.test.ts:8:19)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/integration/mcm.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/integration/mcm.test.ts:8:19)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/integration/mcm.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["the timeouts selection"],"failureMessages":[],"fullName":"the timeouts selection uses read default value","location":null,"status":"passed","title":"uses read default value"},{"ancestorTitles":["the timeouts selection"],"failureMessages":[],"fullName":"the timeouts selection uses write default value","location":null,"status":"passed","title":"uses write default value"},{"ancestorTitles":["the timeouts selection"],"failureMessages":[],"fullName":"the timeouts selection uses overrides read default value with request options","location":null,"status":"passed","title":"uses overrides read default value with request options"},{"ancestorTitles":["the timeouts selection"],"failureMessages":[],"fullName":"the timeouts selection uses overrides write default value with request options","location":null,"status":"passed","title":"uses overrides write default value with request options"},{"ancestorTitles":["the timeouts selection"],"failureMessages":[],"fullName":"the timeouts selection increases timeout based on number of retries","location":null,"status":"passed","title":"increases timeout based on number of retries"},{"ancestorTitles":["the timeouts selection"],"failureMessages":[],"fullName":"the timeouts selection proxies to default timeout when timeout is 0","location":null,"status":"passed","title":"proxies to default timeout when timeout is 0"}],"endTime":1666890089823,"message":"","name":"/home/flakie/package/packages/transporter/src/__tests__/unit/timeouts.test.ts","startTime":1666890089091,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["response cache integration with cache drivers"],"failureMessages":[],"fullName":"response cache integration with cache drivers cache 2xx results","location":null,"status":"passed","title":"cache 2xx results"},{"ancestorTitles":["response cache integration with cache drivers"],"failureMessages":[],"fullName":"response cache integration with cache drivers do not cache 4xx results","location":null,"status":"passed","title":"do not cache 4xx results"},{"ancestorTitles":["response cache integration with cache drivers"],"failureMessages":[],"fullName":"response cache integration with cache drivers transporter query parameters and headers are part of the cache key","location":null,"status":"passed","title":"transporter query parameters and headers are part of the cache key"}],"endTime":1666890091021,"message":"","name":"/home/flakie/package/packages/transporter/src/__tests__/integration/with-response-cache-drivers.test.ts","startTime":1666890089659,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["response cache integration with cache drivers"],"failureMessages":["TypeError: Cannot read property 'clear' of undefined\n    at Object.<anonymous> (/home/flakie/package/packages/transporter/src/__tests__/integration/with-response-cache-drivers.test.ts:18:27)\n    at Object.asyncJestLifecycle (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:53:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)","Error: expect(received).resolves.toMatchObject()\n\nReceived promise rejected instead of resolved\nRejected to value: [TypeError: Cannot read property 'getItem' of undefined]\n    at expect (/home/flakie/package/node_modules/expect/build/index.js:134:15)\n    at Object.<anonymous> (/home/flakie/package/packages/transporter/src/__tests__/integration/with-response-cache-drivers.test.ts:66:15)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"response cache integration with cache drivers cache 2xx results","location":null,"status":"failed","title":"cache 2xx results"},{"ancestorTitles":["response cache integration with cache drivers"],"failureMessages":["TypeError: Cannot read property 'clear' of undefined\n    at Object.<anonymous> (/home/flakie/package/packages/transporter/src/__tests__/integration/with-response-cache-drivers.test.ts:18:27)\n    at Object.asyncJestLifecycle (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:53:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)","Error: expect(received).rejects.toMatchObject(expected)\n\n- Expected  - 3\n+ Received  + 1\n\n- Object {\n-   \"message\": \"Unauthorized\",\n- }\n+ [TypeError]\n    at Object.toMatchObject (/home/flakie/package/node_modules/expect/build/index.js:241:20)\n    at Object.<anonymous> (/home/flakie/package/packages/transporter/src/__tests__/integration/with-response-cache-drivers.test.ts:102:68)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"response cache integration with cache drivers do not cache 4xx results","location":null,"status":"failed","title":"do not cache 4xx results"},{"ancestorTitles":["response cache integration with cache drivers"],"failureMessages":["TypeError: Cannot read property 'clear' of undefined\n    at Object.<anonymous> (/home/flakie/package/packages/transporter/src/__tests__/integration/with-response-cache-drivers.test.ts:18:27)\n    at Object.asyncJestLifecycle (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:53:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)","Error: expect(received).resolves.toMatchObject()\n\nReceived promise rejected instead of resolved\nRejected to value: [TypeError: Cannot read property 'getItem' of undefined]\n    at expect (/home/flakie/package/node_modules/expect/build/index.js:134:15)\n    at Object.<anonymous> (/home/flakie/package/packages/transporter/src/__tests__/integration/with-response-cache-drivers.test.ts:127:13)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"response cache integration with cache drivers transporter query parameters and headers are part of the cache key","location":null,"status":"failed","title":"transporter query parameters and headers are part of the cache key"}],"endTime":1666890091560,"message":"  ● response cache integration with cache drivers › cache 2xx results\n\n    TypeError: Cannot read property 'clear' of undefined\n\n      16 |\n      17 |     if (testing.isBrowser()) {\n    > 18 |       window.localStorage.clear();\n         |                           ^\n      19 |     }\n      20 |   });\n      21 |\n\n      at Object.<anonymous> (packages/transporter/src/__tests__/integration/with-response-cache-drivers.test.ts:18:27)\n\n  ● response cache integration with cache drivers › cache 2xx results\n\n    expect(received).resolves.toMatchObject()\n\n    Received promise rejected instead of resolved\n    Rejected to value: [TypeError: Cannot read property 'getItem' of undefined]\n\n      64 |       for (let callNumber = 1; callNumber <= 10; callNumber++) {\n      65 |         transporterRequest.data = {};\n    > 66 |         await expect(transporter.read(transporterRequest)).resolves.toMatchObject({ hits: [] });\n         |               ^\n      67 |       }\n      68 |\n      69 |       for (let callNumber = 1; callNumber <= 3; callNumber++) {\n\n      at expect (node_modules/expect/build/index.js:134:15)\n      at Object.<anonymous> (packages/transporter/src/__tests__/integration/with-response-cache-drivers.test.ts:66:15)\n\n  ● response cache integration with cache drivers › do not cache 4xx results\n\n    TypeError: Cannot read property 'clear' of undefined\n\n      16 |\n      17 |     if (testing.isBrowser()) {\n    > 18 |       window.localStorage.clear();\n         |                           ^\n      19 |     }\n      20 |   });\n      21 |\n\n      at Object.<anonymous> (packages/transporter/src/__tests__/integration/with-response-cache-drivers.test.ts:18:27)\n\n  ● response cache integration with cache drivers › do not cache 4xx results\n\n    expect(received).rejects.toMatchObject(expected)\n\n    - Expected  - 3\n    + Received  + 1\n\n    - Object {\n    -   \"message\": \"Unauthorized\",\n    - }\n    + [TypeError]\n\n      100 |\n      101 |       for (let callNumber = 1; callNumber <= 10; callNumber++) {\n    > 102 |         await expect(transporter.read(transporterRequest)).rejects.toMatchObject({\n          |                                                                    ^\n      103 |           message: 'Unauthorized',\n      104 |         });\n      105 |       }\n\n      at Object.toMatchObject (node_modules/expect/build/index.js:241:20)\n      at Object.<anonymous> (packages/transporter/src/__tests__/integration/with-response-cache-drivers.test.ts:102:68)\n\n  ● response cache integration with cache drivers › transporter query parameters and headers are part of the cache key\n\n    TypeError: Cannot read property 'clear' of undefined\n\n      16 |\n      17 |     if (testing.isBrowser()) {\n    > 18 |       window.localStorage.clear();\n         |                           ^\n      19 |     }\n      20 |   });\n      21 |\n\n      at Object.<anonymous> (packages/transporter/src/__tests__/integration/with-response-cache-drivers.test.ts:18:27)\n\n  ● response cache integration with cache drivers › transporter query parameters and headers are part of the cache key\n\n    expect(received).resolves.toMatchObject()\n\n    Received promise rejected instead of resolved\n    Rejected to value: [TypeError: Cannot read property 'getItem' of undefined]\n\n      125 |       const transporter = createFixtures().transporter(requester, { responsesCache: driver });\n      126 |\n    > 127 |       await expect(transporter.read(transporterRequest)).resolves.toMatchObject({ hits: [] });\n          |             ^\n      128 |       await expect(transporter.read(transporterRequest)).resolves.toMatchObject({ hits: [] });\n      129 |\n      130 |       Object.assign(transporter.headers, {\n\n      at expect (node_modules/expect/build/index.js:134:15)\n      at Object.<anonymous> (packages/transporter/src/__tests__/integration/with-response-cache-drivers.test.ts:127:13)\n","name":"/home/flakie/package/packages/transporter/src/__tests__/integration/with-response-cache-drivers.test.ts","startTime":1666890090013,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/integration/browsing.test.ts:13:19)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/integration/browsing.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/integration/browsing.test.ts:13:19)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/integration/browsing.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/recommend/src/__tests__/getRecommendations.test.ts:3:19)\n","name":"/home/flakie/package/packages/recommend/src/__tests__/getRecommendations.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/recommend/src/__tests__/getRecommendations.test.ts:3:19)\n","name":"/home/flakie/package/packages/recommend/src/__tests__/getRecommendations.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/integration/indexing.test.ts:6:19)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/integration/indexing.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/integration/indexing.test.ts:6:19)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/integration/indexing.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/integration/dictionary.test.ts:4:19)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/integration/dictionary.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-analytics/src/__tests__/integration/ab-testing.test.ts:10:19)\n","name":"/home/flakie/package/packages/client-analytics/src/__tests__/integration/ab-testing.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/integration/rules.test.ts:5:19)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/integration/rules.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-analytics/src/__tests__/integration/ab-testing.test.ts:10:19)\n","name":"/home/flakie/package/packages/client-analytics/src/__tests__/integration/ab-testing.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["browser local storage cache"],"failureMessages":["TypeError: Cannot read property 'clear' of undefined\n    at Object.<anonymous> (/home/flakie/package/packages/cache-browser-local-storage/src/__tests__/unit/browser-local-storage-cache.test.ts:14:40)\n    at Object.asyncJestLifecycle (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:53:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)","TypeError: Cannot read property 'getItem' of undefined\n    at getNamespace (/home/flakie/package/packages/cache-browser-local-storage/src/createBrowserLocalStorageCache.ts:19:35)\n    at /home/flakie/package/packages/cache-browser-local-storage/src/createBrowserLocalStorageCache.ts:33:25\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Object.<anonymous> (/home/flakie/package/packages/cache-browser-local-storage/src/__tests__/unit/browser-local-storage-cache.test.ts:24:7)"],"fullName":"browser local storage cache sets/gets values","location":null,"status":"failed","title":"sets/gets values"},{"ancestorTitles":["browser local storage cache"],"failureMessages":["TypeError: Cannot read property 'clear' of undefined\n    at Object.<anonymous> (/home/flakie/package/packages/cache-browser-local-storage/src/__tests__/unit/browser-local-storage-cache.test.ts:14:40)\n    at Object.asyncJestLifecycle (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:53:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)","TypeError: Cannot read property 'getItem' of undefined\n    at getNamespace (/home/flakie/package/packages/cache-browser-local-storage/src/createBrowserLocalStorageCache.ts:19:35)\n    at /home/flakie/package/packages/cache-browser-local-storage/src/createBrowserLocalStorageCache.ts:45:27\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Object.<anonymous> (/home/flakie/package/packages/cache-browser-local-storage/src/__tests__/unit/browser-local-storage-cache.test.ts:48:5)"],"fullName":"browser local storage cache deletes keys","location":null,"status":"failed","title":"deletes keys"},{"ancestorTitles":["browser local storage cache"],"failureMessages":["TypeError: Cannot read property 'clear' of undefined\n    at Object.<anonymous> (/home/flakie/package/packages/cache-browser-local-storage/src/__tests__/unit/browser-local-storage-cache.test.ts:14:40)\n    at Object.asyncJestLifecycle (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:53:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)","TypeError: Cannot read property 'getItem' of undefined\n    at getNamespace (/home/flakie/package/packages/cache-browser-local-storage/src/createBrowserLocalStorageCache.ts:19:35)\n    at /home/flakie/package/packages/cache-browser-local-storage/src/createBrowserLocalStorageCache.ts:45:27\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at Object.<anonymous> (/home/flakie/package/packages/cache-browser-local-storage/src/__tests__/unit/browser-local-storage-cache.test.ts:67:5)"],"fullName":"browser local storage cache can be cleared","location":null,"status":"failed","title":"can be cleared"},{"ancestorTitles":["browser local storage cache"],"failureMessages":["TypeError: Cannot read property 'clear' of undefined\n    at Object.<anonymous> (/home/flakie/package/packages/cache-browser-local-storage/src/__tests__/unit/browser-local-storage-cache.test.ts:14:40)\n    at Object.asyncJestLifecycle (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:53:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)","ReferenceError: DOMException is not defined\n    at Object.<anonymous> (/home/flakie/package/packages/cache-browser-local-storage/src/__tests__/unit/browser-local-storage-cache.test.ts:109:57)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"browser local storage cache do throws localstorage exceptions on access","location":null,"status":"failed","title":"do throws localstorage exceptions on access"},{"ancestorTitles":["browser local storage cache"],"failureMessages":["TypeError: Cannot read property 'clear' of undefined\n    at Object.<anonymous> (/home/flakie/package/packages/cache-browser-local-storage/src/__tests__/unit/browser-local-storage-cache.test.ts:14:40)\n    at Object.asyncJestLifecycle (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:53:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"browser local storage cache do throws localstorage exceptions after access","location":null,"status":"failed","title":"do throws localstorage exceptions after access"},{"ancestorTitles":["browser local storage cache"],"failureMessages":["TypeError: Cannot read property 'clear' of undefined\n    at Object.<anonymous> (/home/flakie/package/packages/cache-browser-local-storage/src/__tests__/unit/browser-local-storage-cache.test.ts:14:40)\n    at Object.asyncJestLifecycle (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:53:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)","ReferenceError: localStorage is not defined\n    at Object.<anonymous> (/home/flakie/package/packages/cache-browser-local-storage/src/__tests__/unit/browser-local-storage-cache.test.ts:138:12)\n    at Object.asyncJestTest (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"browser local storage cache creates a namespace within local storage","location":null,"status":"failed","title":"creates a namespace within local storage"}],"endTime":1666890098613,"message":"  ● browser local storage cache › sets/gets values\n\n    TypeError: Cannot read property 'clear' of undefined\n\n      12 |\n      13 | describe('browser local storage cache', () => {\n    > 14 |   beforeEach(() => window.localStorage.clear());\n         |                                        ^\n      15 |\n      16 |   it('sets/gets values', async () => {\n      17 |     const cache = createBrowserLocalStorageCache({ key: version });\n\n      at Object.<anonymous> (packages/cache-browser-local-storage/src/__tests__/unit/browser-local-storage-cache.test.ts:14:40)\n\n  ● browser local storage cache › sets/gets values\n\n    TypeError: Cannot read property 'getItem' of undefined\n\n      17 |\n      18 |   const getNamespace = <TValue>(): Record<string, TValue> => {\n    > 19 |     return JSON.parse(getStorage().getItem(namespaceKey) || '{}');\n         |                                   ^\n      20 |   };\n      21 |\n      22 |   return {\n\n      at getNamespace (packages/cache-browser-local-storage/src/createBrowserLocalStorageCache.ts:19:35)\n      at packages/cache-browser-local-storage/src/createBrowserLocalStorageCache.ts:33:25\n      at Object.<anonymous> (packages/cache-browser-local-storage/src/__tests__/unit/browser-local-storage-cache.test.ts:24:7)\n\n  ● browser local storage cache › deletes keys\n\n    TypeError: Cannot read property 'clear' of undefined\n\n      12 |\n      13 | describe('browser local storage cache', () => {\n    > 14 |   beforeEach(() => window.localStorage.clear());\n         |                                        ^\n      15 |\n      16 |   it('sets/gets values', async () => {\n      17 |     const cache = createBrowserLocalStorageCache({ key: version });\n\n      at Object.<anonymous> (packages/cache-browser-local-storage/src/__tests__/unit/browser-local-storage-cache.test.ts:14:40)\n\n  ● browser local storage cache › deletes keys\n\n    TypeError: Cannot read property 'getItem' of undefined\n\n      17 |\n      18 |   const getNamespace = <TValue>(): Record<string, TValue> => {\n    > 19 |     return JSON.parse(getStorage().getItem(namespaceKey) || '{}');\n         |                                   ^\n      20 |   };\n      21 |\n      22 |   return {\n\n      at getNamespace (packages/cache-browser-local-storage/src/createBrowserLocalStorageCache.ts:19:35)\n      at packages/cache-browser-local-storage/src/createBrowserLocalStorageCache.ts:45:27\n      at Object.<anonymous> (packages/cache-browser-local-storage/src/__tests__/unit/browser-local-storage-cache.test.ts:48:5)\n\n  ● browser local storage cache › can be cleared\n\n    TypeError: Cannot read property 'clear' of undefined\n\n      12 |\n      13 | describe('browser local storage cache', () => {\n    > 14 |   beforeEach(() => window.localStorage.clear());\n         |                                        ^\n      15 |\n      16 |   it('sets/gets values', async () => {\n      17 |     const cache = createBrowserLocalStorageCache({ key: version });\n\n      at Object.<anonymous> (packages/cache-browser-local-storage/src/__tests__/unit/browser-local-storage-cache.test.ts:14:40)\n\n  ● browser local storage cache › can be cleared\n\n    TypeError: Cannot read property 'getItem' of undefined\n\n      17 |\n      18 |   const getNamespace = <TValue>(): Record<string, TValue> => {\n    > 19 |     return JSON.parse(getStorage().getItem(namespaceKey) || '{}');\n         |                                   ^\n      20 |   };\n      21 |\n      22 |   return {\n\n      at getNamespace (packages/cache-browser-local-storage/src/createBrowserLocalStorageCache.ts:19:35)\n      at packages/cache-browser-local-storage/src/createBrowserLocalStorageCache.ts:45:27\n      at Object.<anonymous> (packages/cache-browser-local-storage/src/__tests__/unit/browser-local-storage-cache.test.ts:67:5)\n\n  ● browser local storage cache › do throws localstorage exceptions on access\n\n    TypeError: Cannot read property 'clear' of undefined\n\n      12 |\n      13 | describe('browser local storage cache', () => {\n    > 14 |   beforeEach(() => window.localStorage.clear());\n         |                                        ^\n      15 |\n      16 |   it('sets/gets values', async () => {\n      17 |     const cache = createBrowserLocalStorageCache({ key: version });\n\n      at Object.<anonymous> (packages/cache-browser-local-storage/src/__tests__/unit/browser-local-storage-cache.test.ts:14:40)\n\n  ● browser local storage cache › do throws localstorage exceptions on access\n\n    ReferenceError: DOMException is not defined\n\n      107 |     const fallback = 'bar';\n      108 |\n    > 109 |     await expect(cache.delete(key)).rejects.toEqual(new DOMException(message));\n          |                                                         ^\n      110 |     await expect(cache.set(key, value)).rejects.toEqual(new DOMException(message));\n      111 |     await expect(cache.get(key, () => Promise.resolve(fallback))).rejects.toEqual(\n      112 |       new DOMException(message)\n\n      at Object.<anonymous> (packages/cache-browser-local-storage/src/__tests__/unit/browser-local-storage-cache.test.ts:109:57)\n\n  ● browser local storage cache › do throws localstorage exceptions after access\n\n    TypeError: Cannot read property 'clear' of undefined\n\n      12 |\n      13 | describe('browser local storage cache', () => {\n    > 14 |   beforeEach(() => window.localStorage.clear());\n         |                                        ^\n      15 |\n      16 |   it('sets/gets values', async () => {\n      17 |     const cache = createBrowserLocalStorageCache({ key: version });\n\n      at Object.<anonymous> (packages/cache-browser-local-storage/src/__tests__/unit/browser-local-storage-cache.test.ts:14:40)\n\n  ● browser local storage cache › creates a namespace within local storage\n\n    TypeError: Cannot read property 'clear' of undefined\n\n      12 |\n      13 | describe('browser local storage cache', () => {\n    > 14 |   beforeEach(() => window.localStorage.clear());\n         |                                        ^\n      15 |\n      16 |   it('sets/gets values', async () => {\n      17 |     const cache = createBrowserLocalStorageCache({ key: version });\n\n      at Object.<anonymous> (packages/cache-browser-local-storage/src/__tests__/unit/browser-local-storage-cache.test.ts:14:40)\n\n  ● browser local storage cache › creates a namespace within local storage\n\n    ReferenceError: localStorage is not defined\n\n      136 |     const key = { foo: 'bar' };\n      137 |     const value = 'foo';\n    > 138 |     expect(localStorage.getItem(`algoliasearch-client-js-${version}`)).toBeNull();\n          |            ^\n      139 |\n      140 |     await cache.set(key, value);\n      141 |\n\n      at Object.<anonymous> (packages/cache-browser-local-storage/src/__tests__/unit/browser-local-storage-cache.test.ts:138:12)\n","name":"/home/flakie/package/packages/cache-browser-local-storage/src/__tests__/unit/browser-local-storage-cache.test.ts","startTime":1666890098030,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/integration/rules.test.ts:5:19)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/integration/rules.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-account/src/__tests__/integration/account-copy-index.test.ts:8:19)\n","name":"/home/flakie/package/packages/client-account/src/__tests__/integration/account-copy-index.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-account/src/__tests__/integration/account-copy-index.test.ts:8:19)\n","name":"/home/flakie/package/packages/client-account/src/__tests__/integration/account-copy-index.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["request cache integration with cache drivers"],"failureMessages":[],"fullName":"request cache integration with cache drivers cache read requests in progress","location":null,"status":"passed","title":"cache read requests in progress"},{"ancestorTitles":["request cache integration with cache drivers"],"failureMessages":[],"fullName":"request cache integration with cache drivers do not cache read requests resolved","location":null,"status":"passed","title":"do not cache read requests resolved"},{"ancestorTitles":["request cache integration with cache drivers"],"failureMessages":[],"fullName":"request cache integration with cache drivers do not cache read requests rejected","location":null,"status":"passed","title":"do not cache read requests rejected"}],"endTime":1666890102230,"message":"","name":"/home/flakie/package/packages/transporter/src/__tests__/integration/with-request-cache-drivers.test.ts","startTime":1666890101012,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["request cache integration with cache drivers"],"failureMessages":["TypeError: Cannot read property 'clear' of undefined\n    at Object.<anonymous> (/home/flakie/package/packages/transporter/src/__tests__/integration/with-request-cache-drivers.test.ts:17:27)\n    at Object.asyncJestLifecycle (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:53:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"request cache integration with cache drivers cache read requests in progress","location":null,"status":"failed","title":"cache read requests in progress"},{"ancestorTitles":["request cache integration with cache drivers"],"failureMessages":["TypeError: Cannot read property 'clear' of undefined\n    at Object.<anonymous> (/home/flakie/package/packages/transporter/src/__tests__/integration/with-request-cache-drivers.test.ts:17:27)\n    at Object.asyncJestLifecycle (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:53:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"request cache integration with cache drivers do not cache read requests resolved","location":null,"status":"failed","title":"do not cache read requests resolved"},{"ancestorTitles":["request cache integration with cache drivers"],"failureMessages":["TypeError: Cannot read property 'clear' of undefined\n    at Object.<anonymous> (/home/flakie/package/packages/transporter/src/__tests__/integration/with-request-cache-drivers.test.ts:17:27)\n    at Object.asyncJestLifecycle (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:53:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"request cache integration with cache drivers do not cache read requests rejected","location":null,"status":"failed","title":"do not cache read requests rejected"}],"endTime":1666890102530,"message":"  ● request cache integration with cache drivers › cache read requests in progress\n\n    TypeError: Cannot read property 'clear' of undefined\n\n      15 |   beforeEach(() => {\n      16 |     if (testing.isBrowser()) {\n    > 17 |       window.localStorage.clear();\n         |                           ^\n      18 |     }\n      19 |   });\n      20 |\n\n      at Object.<anonymous> (packages/transporter/src/__tests__/integration/with-request-cache-drivers.test.ts:17:27)\n\n  ● request cache integration with cache drivers › do not cache read requests resolved\n\n    TypeError: Cannot read property 'clear' of undefined\n\n      15 |   beforeEach(() => {\n      16 |     if (testing.isBrowser()) {\n    > 17 |       window.localStorage.clear();\n         |                           ^\n      18 |     }\n      19 |   });\n      20 |\n\n      at Object.<anonymous> (packages/transporter/src/__tests__/integration/with-request-cache-drivers.test.ts:17:27)\n\n  ● request cache integration with cache drivers › do not cache read requests rejected\n\n    TypeError: Cannot read property 'clear' of undefined\n\n      15 |   beforeEach(() => {\n      16 |     if (testing.isBrowser()) {\n    > 17 |       window.localStorage.clear();\n         |                           ^\n      18 |     }\n      19 |   });\n      20 |\n\n      at Object.<anonymous> (packages/transporter/src/__tests__/integration/with-request-cache-drivers.test.ts:17:27)\n","name":"/home/flakie/package/packages/transporter/src/__tests__/integration/with-request-cache-drivers.test.ts","startTime":1666890101292,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/unit/search-client.test.ts:5:23)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/unit/search-client.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/unit/search-client.test.ts:5:23)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/unit/search-client.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["deserializer"],"failureMessages":[],"fullName":"deserializer deserializes success responses","location":null,"status":"passed","title":"deserializes success responses"},{"ancestorTitles":["deserializer"],"failureMessages":[],"fullName":"deserializer handles deserialization errors","location":null,"status":"passed","title":"handles deserialization errors"},{"ancestorTitles":["deserializer"],"failureMessages":[],"fullName":"deserializer deserializes fail responses","location":null,"status":"passed","title":"deserializes fail responses"},{"ancestorTitles":["deserializer"],"failureMessages":[],"fullName":"deserializer deserializes fail non json responses","location":null,"status":"passed","title":"deserializes fail non json responses"},{"ancestorTitles":["deserializer"],"failureMessages":[],"fullName":"deserializer includes stack trace","location":null,"status":"passed","title":"includes stack trace"}],"endTime":1666890104461,"message":"","name":"/home/flakie/package/packages/transporter/src/__tests__/unit/deserializer.test.ts","startTime":1666890103498,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["deserializer"],"failureMessages":[],"fullName":"deserializer deserializes success responses","location":null,"status":"passed","title":"deserializes success responses"},{"ancestorTitles":["deserializer"],"failureMessages":[],"fullName":"deserializer handles deserialization errors","location":null,"status":"passed","title":"handles deserialization errors"},{"ancestorTitles":["deserializer"],"failureMessages":[],"fullName":"deserializer deserializes fail responses","location":null,"status":"passed","title":"deserializes fail responses"},{"ancestorTitles":["deserializer"],"failureMessages":[],"fullName":"deserializer deserializes fail non json responses","location":null,"status":"passed","title":"deserializes fail non json responses"},{"ancestorTitles":["deserializer"],"failureMessages":[],"fullName":"deserializer includes stack trace","location":null,"status":"passed","title":"includes stack trace"}],"endTime":1666890104734,"message":"","name":"/home/flakie/package/packages/transporter/src/__tests__/unit/deserializer.test.ts","startTime":1666890103749,"status":"passed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/integration/settings.test.ts:6:19)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/integration/settings.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/integration/settings.test.ts:6:19)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/integration/settings.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["fallbackable cache"],"failureMessages":[],"fullName":"fallbackable cache always fallback in null cache","location":null,"status":"passed","title":"always fallback in null cache"},{"ancestorTitles":["fallbackable cache"],"failureMessages":[],"fullName":"fallbackable cache uses given caches on the given order","location":null,"status":"passed","title":"uses given caches on the given order"},{"ancestorTitles":["fallbackable cache"],"failureMessages":[],"fullName":"fallbackable cache fallbacks on given caches","location":null,"status":"passed","title":"fallbacks on given caches"}],"endTime":1666890106665,"message":"","name":"/home/flakie/package/packages/cache-common/src/__tests__/unit/fallbackable-cache.test.ts","startTime":1666890106284,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["fallbackable cache"],"failureMessages":[],"fullName":"fallbackable cache always fallback in null cache","location":null,"status":"passed","title":"always fallback in null cache"},{"ancestorTitles":["fallbackable cache"],"failureMessages":[],"fullName":"fallbackable cache uses given caches on the given order","location":null,"status":"passed","title":"uses given caches on the given order"},{"ancestorTitles":["fallbackable cache"],"failureMessages":[],"fullName":"fallbackable cache fallbacks on given caches","location":null,"status":"passed","title":"fallbacks on given caches"}],"endTime":1666890106874,"message":"","name":"/home/flakie/package/packages/cache-common/src/__tests__/unit/fallbackable-cache.test.ts","startTime":1666890106511,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["transporter stack trace serialization"],"failureMessages":[],"fullName":"transporter stack trace serialization removes credentials","location":null,"status":"passed","title":"removes credentials"}],"endTime":1666890107485,"message":"","name":"/home/flakie/package/packages/transporter/src/__tests__/unit/stackTrace.test.ts","startTime":1666890106699,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["transporter stack trace serialization"],"failureMessages":[],"fullName":"transporter stack trace serialization removes credentials","location":null,"status":"passed","title":"removes credentials"}],"endTime":1666890107736,"message":"","name":"/home/flakie/package/packages/transporter/src/__tests__/unit/stackTrace.test.ts","startTime":1666890106928,"status":"passed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/integration/copy-and-move-index.test.ts:4:19)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/integration/copy-and-move-index.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["the timeouts selection"],"failureMessages":[],"fullName":"the timeouts selection uses read default value","location":null,"status":"passed","title":"uses read default value"},{"ancestorTitles":["the timeouts selection"],"failureMessages":[],"fullName":"the timeouts selection uses write default value","location":null,"status":"passed","title":"uses write default value"},{"ancestorTitles":["the timeouts selection"],"failureMessages":[],"fullName":"the timeouts selection uses overrides read default value with request options","location":null,"status":"passed","title":"uses overrides read default value with request options"},{"ancestorTitles":["the timeouts selection"],"failureMessages":[],"fullName":"the timeouts selection uses overrides write default value with request options","location":null,"status":"passed","title":"uses overrides write default value with request options"},{"ancestorTitles":["the timeouts selection"],"failureMessages":[],"fullName":"the timeouts selection increases timeout based on number of retries","location":null,"status":"passed","title":"increases timeout based on number of retries"},{"ancestorTitles":["the timeouts selection"],"failureMessages":[],"fullName":"the timeouts selection proxies to default timeout when timeout is 0","location":null,"status":"passed","title":"proxies to default timeout when timeout is 0"}],"endTime":1666890108530,"message":"","name":"/home/flakie/package/packages/transporter/src/__tests__/unit/timeouts.test.ts","startTime":1666890089187,"status":"passed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/integration/copy-and-move-index.test.ts:4:19)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/integration/copy-and-move-index.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-recommendation/src/__tests__/unit/recommendation-client.test.ts:7:22)\n","name":"/home/flakie/package/packages/client-recommendation/src/__tests__/unit/recommendation-client.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/integration/replacing.test.ts:5:19)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/integration/replacing.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/integration/replacing.test.ts:5:19)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/integration/replacing.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/integration/synonyms.test.ts:5:19)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/integration/synonyms.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/integration/synonyms.test.ts:5:19)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/integration/synonyms.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/integration/multiple-operations.test.ts:5:19)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/integration/multiple-operations.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/integration/multiple-operations.test.ts:5:19)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/integration/multiple-operations.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-personalization/src/__tests__/unit/personalization-client.test.ts:7:31)\n","name":"/home/flakie/package/packages/client-personalization/src/__tests__/unit/personalization-client.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-recommendation/src/__tests__/unit/recommendation-client.test.ts:7:22)\n","name":"/home/flakie/package/packages/client-recommendation/src/__tests__/unit/recommendation-client.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-personalization/src/__tests__/unit/personalization-client.test.ts:7:31)\n","name":"/home/flakie/package/packages/client-personalization/src/__tests__/unit/personalization-client.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["in memory cache"],"failureMessages":[],"fullName":"in memory cache sets/gets values","location":null,"status":"passed","title":"sets/gets values"},{"ancestorTitles":["in memory cache"],"failureMessages":[],"fullName":"in memory cache getted values do not have references to the value on cache","location":null,"status":"passed","title":"getted values do not have references to the value on cache"},{"ancestorTitles":["in memory cache"],"failureMessages":[],"fullName":"in memory cache deletes keys","location":null,"status":"passed","title":"deletes keys"},{"ancestorTitles":["in memory cache"],"failureMessages":[],"fullName":"in memory cache can be cleared","location":null,"status":"passed","title":"can be cleared"},{"ancestorTitles":["in memory cache"],"failureMessages":[],"fullName":"in memory cache do not force promise based api for clearing cache","location":null,"status":"passed","title":"do not force promise based api for clearing cache"}],"endTime":1666890113270,"message":"","name":"/home/flakie/package/packages/cache-in-memory/src/__tests__/unit/in-memory-cache.test.ts","startTime":1666890112984,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["in memory cache"],"failureMessages":[],"fullName":"in memory cache sets/gets values","location":null,"status":"passed","title":"sets/gets values"},{"ancestorTitles":["in memory cache"],"failureMessages":[],"fullName":"in memory cache getted values do not have references to the value on cache","location":null,"status":"passed","title":"getted values do not have references to the value on cache"},{"ancestorTitles":["in memory cache"],"failureMessages":[],"fullName":"in memory cache deletes keys","location":null,"status":"passed","title":"deletes keys"},{"ancestorTitles":["in memory cache"],"failureMessages":[],"fullName":"in memory cache can be cleared","location":null,"status":"passed","title":"can be cleared"},{"ancestorTitles":["in memory cache"],"failureMessages":[],"fullName":"in memory cache do not force promise based api for clearing cache","location":null,"status":"passed","title":"do not force promise based api for clearing cache"}],"endTime":1666890113272,"message":"","name":"/home/flakie/package/packages/cache-in-memory/src/__tests__/unit/in-memory-cache.test.ts","startTime":1666890112915,"status":"passed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/integration/api-keys.test.ts:5:19)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/integration/api-keys.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/integration/api-keys.test.ts:5:19)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/integration/api-keys.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["hosts cache integration with cache drivers"],"failureMessages":[],"fullName":"hosts cache integration with cache drivers preserve hosts state between calls","location":null,"status":"passed","title":"preserve hosts state between calls"}],"endTime":1666890114478,"message":"","name":"/home/flakie/package/packages/transporter/src/__tests__/integration/with-hosts-cache-drivers.test.ts","startTime":1666890113827,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["hosts cache integration with cache drivers"],"failureMessages":["TypeError: Cannot read property 'clear' of undefined\n    at Object.<anonymous> (/home/flakie/package/packages/transporter/src/__tests__/integration/with-hosts-cache-drivers.test.ts:22:27)\n    at Object.asyncJestLifecycle (/home/flakie/package/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:53:37)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:45:12\n    at new Promise (<anonymous>)\n    at mapper (/home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:28:19)\n    at /home/flakie/package/node_modules/jest-jasmine2/build/queueRunner.js:75:41\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)","Error: expect(received).rejects.toMatchObject(expected)\n\n- Expected  - 4\n+ Received  + 1\n\n- Object {\n-   \"message\": \"Unreachable hosts - your application id may be incorrect. If the error persists, contact support@algolia.com.\",\n-   \"name\": \"RetryError\",\n- }\n+ [TypeError]\n    at Object.toMatchObject (/home/flakie/package/node_modules/expect/build/index.js:241:20)\n    at Object.<anonymous> (/home/flakie/package/packages/transporter/src/__tests__/integration/with-hosts-cache-drivers.test.ts:68:68)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"],"fullName":"hosts cache integration with cache drivers preserve hosts state between calls","location":null,"status":"failed","title":"preserve hosts state between calls"}],"endTime":1666890114594,"message":"  ● hosts cache integration with cache drivers › preserve hosts state between calls\n\n    TypeError: Cannot read property 'clear' of undefined\n\n      20 |   beforeEach(() => {\n      21 |     if (testing.isBrowser()) {\n    > 22 |       window.localStorage.clear();\n         |                           ^\n      23 |     }\n      24 |   });\n      25 |\n\n      at Object.<anonymous> (packages/transporter/src/__tests__/integration/with-hosts-cache-drivers.test.ts:22:27)\n\n  ● hosts cache integration with cache drivers › preserve hosts state between calls\n\n    expect(received).rejects.toMatchObject(expected)\n\n    - Expected  - 4\n    + Received  + 1\n\n    - Object {\n    -   \"message\": \"Unreachable hosts - your application id may be incorrect. If the error persists, contact support@algolia.com.\",\n    -   \"name\": \"RetryError\",\n    - }\n    + [TypeError]\n\n      66 |           'Unreachable hosts - your application id may be incorrect. If the error persists, contact support@algolia.com.';\n      67 |\n    > 68 |         await expect(transporter.read(transporterRequest)).rejects.toMatchObject({\n         |                                                                    ^\n      69 |           message,\n      70 |           name: 'RetryError',\n      71 |         });\n\n      at Object.toMatchObject (node_modules/expect/build/index.js:241:20)\n      at Object.<anonymous> (packages/transporter/src/__tests__/integration/with-hosts-cache-drivers.test.ts:68:68)\n","name":"/home/flakie/package/packages/transporter/src/__tests__/integration/with-hosts-cache-drivers.test.ts","startTime":1666890113949,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["selection of headers"],"failureMessages":[],"fullName":"selection of headers allows add extra headers","location":null,"status":"passed","title":"allows add extra headers"},{"ancestorTitles":["selection of headers"],"failureMessages":[],"fullName":"selection of headers allows to add headers per read/write","location":null,"status":"passed","title":"allows to add headers per read/write"},{"ancestorTitles":["selection of headers"],"failureMessages":[],"fullName":"selection of headers allows to add headers per read/write and override the default ones","location":null,"status":"passed","title":"allows to add headers per read/write and override the default ones"}],"endTime":1666890115401,"message":"","name":"/home/flakie/package/packages/transporter/src/__tests__/unit/headers.test.ts","startTime":1666890114605,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["selection of headers"],"failureMessages":[],"fullName":"selection of headers allows add extra headers","location":null,"status":"passed","title":"allows add extra headers"},{"ancestorTitles":["selection of headers"],"failureMessages":[],"fullName":"selection of headers allows to add headers per read/write","location":null,"status":"passed","title":"allows to add headers per read/write"},{"ancestorTitles":["selection of headers"],"failureMessages":[],"fullName":"selection of headers allows to add headers per read/write and override the default ones","location":null,"status":"passed","title":"allows to add headers per read/write and override the default ones"}],"endTime":1666890115536,"message":"","name":"/home/flakie/package/packages/transporter/src/__tests__/unit/headers.test.ts","startTime":1666890114792,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["selection of hosts"],"failureMessages":[],"fullName":"selection of hosts select only readable hosts when calling the `read` method","location":null,"status":"passed","title":"select only readable hosts when calling the `read` method"},{"ancestorTitles":["selection of hosts"],"failureMessages":[],"fullName":"selection of hosts select only writable hosts when calling the `write` method","location":null,"status":"passed","title":"select only writable hosts when calling the `write` method"},{"ancestorTitles":["selection of hosts"],"failureMessages":[],"fullName":"selection of hosts defaults to `https` and `any`","location":null,"status":"passed","title":"defaults to `https` and `any`"},{"ancestorTitles":["selection of hosts"],"failureMessages":[],"fullName":"selection of hosts allows a string to be passed","location":null,"status":"passed","title":"allows a string to be passed"}],"endTime":1666890116276,"message":"","name":"/home/flakie/package/packages/transporter/src/__tests__/unit/hosts.test.ts","startTime":1666890115559,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["selection of hosts"],"failureMessages":[],"fullName":"selection of hosts select only readable hosts when calling the `read` method","location":null,"status":"passed","title":"select only readable hosts when calling the `read` method"},{"ancestorTitles":["selection of hosts"],"failureMessages":[],"fullName":"selection of hosts select only writable hosts when calling the `write` method","location":null,"status":"passed","title":"select only writable hosts when calling the `write` method"},{"ancestorTitles":["selection of hosts"],"failureMessages":[],"fullName":"selection of hosts defaults to `https` and `any`","location":null,"status":"passed","title":"defaults to `https` and `any`"},{"ancestorTitles":["selection of hosts"],"failureMessages":[],"fullName":"selection of hosts allows a string to be passed","location":null,"status":"passed","title":"allows a string to be passed"}],"endTime":1666890116472,"message":"","name":"/home/flakie/package/packages/transporter/src/__tests__/unit/hosts.test.ts","startTime":1666890115675,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["lite preset"],"failureMessages":[],"fullName":"lite preset has a version property","location":null,"status":"passed","title":"has a version property"},{"ancestorTitles":["lite preset"],"failureMessages":[],"fullName":"lite preset sets default headers","location":null,"status":"passed","title":"sets default headers"},{"ancestorTitles":["lite preset"],"failureMessages":[],"fullName":"lite preset sets default query pameters","location":null,"status":"passed","title":"sets default query pameters"},{"ancestorTitles":["lite preset"],"failureMessages":[],"fullName":"lite preset sets default user agent","location":null,"status":"passed","title":"sets default user agent"},{"ancestorTitles":["lite preset"],"failureMessages":[],"fullName":"lite preset allows to customize options","location":null,"status":"passed","title":"allows to customize options"}],"endTime":1666890116940,"message":"","name":"/home/flakie/package/packages/algoliasearch/src/__tests__/lite.test.ts","startTime":1666890116425,"status":"passed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/recommend/src/__tests__/getFrequentlyBoughtTogether.test.ts:3:19)\n","name":"/home/flakie/package/packages/recommend/src/__tests__/getFrequentlyBoughtTogether.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/recommend/src/__tests__/getFrequentlyBoughtTogether.test.ts:3:19)\n","name":"/home/flakie/package/packages/recommend/src/__tests__/getFrequentlyBoughtTogether.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["usage of query parameters"],"failureMessages":[],"fullName":"usage of query parameters allows to set query parameters","location":null,"status":"passed","title":"allows to set query parameters"},{"ancestorTitles":["usage of query parameters"],"failureMessages":[],"fullName":"usage of query parameters allows to add query parameters per read/write","location":null,"status":"passed","title":"allows to add query parameters per read/write"},{"ancestorTitles":["usage of query parameters"],"failureMessages":[],"fullName":"usage of query parameters allows to add query parameters per read/write and override the default ones","location":null,"status":"passed","title":"allows to add query parameters per read/write and override the default ones"}],"endTime":1666890118145,"message":"","name":"/home/flakie/package/packages/transporter/src/__tests__/unit/query-parameters.test.ts","startTime":1666890117156,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["usage of query parameters"],"failureMessages":[],"fullName":"usage of query parameters allows to set query parameters","location":null,"status":"passed","title":"allows to set query parameters"},{"ancestorTitles":["usage of query parameters"],"failureMessages":[],"fullName":"usage of query parameters allows to add query parameters per read/write","location":null,"status":"passed","title":"allows to add query parameters per read/write"},{"ancestorTitles":["usage of query parameters"],"failureMessages":[],"fullName":"usage of query parameters allows to add query parameters per read/write and override the default ones","location":null,"status":"passed","title":"allows to add query parameters per read/write and override the default ones"}],"endTime":1666890118203,"message":"","name":"/home/flakie/package/packages/transporter/src/__tests__/unit/query-parameters.test.ts","startTime":1666890117624,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["serializer"],"failureMessages":[],"fullName":"serializer serializes url with / ","location":null,"status":"passed","title":"serializes url with / "},{"ancestorTitles":["serializer"],"failureMessages":[],"fullName":"serializer serializes url protocol","location":null,"status":"passed","title":"serializes url protocol"},{"ancestorTitles":["serializer"],"failureMessages":[],"fullName":"serializer serializes query parameters","location":null,"status":"passed","title":"serializes query parameters"}],"endTime":1666890118809,"message":"","name":"/home/flakie/package/packages/transporter/src/__tests__/unit/serializer.test.ts","startTime":1666890118291,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["serializer"],"failureMessages":[],"fullName":"serializer serializes url with / ","location":null,"status":"passed","title":"serializes url with / "},{"ancestorTitles":["serializer"],"failureMessages":[],"fullName":"serializer serializes url protocol","location":null,"status":"passed","title":"serializes url protocol"},{"ancestorTitles":["serializer"],"failureMessages":[],"fullName":"serializer serializes query parameters","location":null,"status":"passed","title":"serializes query parameters"}],"endTime":1666890118847,"message":"","name":"/home/flakie/package/packages/transporter/src/__tests__/unit/serializer.test.ts","startTime":1666890118309,"status":"passed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/integration/secured-api-keys.test.ts:5:19)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/integration/secured-api-keys.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-personalization/src/__tests__/features/personalization-strategy.test.ts:5:19)\n","name":"/home/flakie/package/packages/client-personalization/src/__tests__/features/personalization-strategy.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-recommendation/src/__tests__/features/personalization-strategy.test.ts:5:19)\n","name":"/home/flakie/package/packages/client-recommendation/src/__tests__/features/personalization-strategy.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-personalization/src/__tests__/features/personalization-strategy.test.ts:5:19)\n","name":"/home/flakie/package/packages/client-personalization/src/__tests__/features/personalization-strategy.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-recommendation/src/__tests__/features/personalization-strategy.test.ts:5:19)\n","name":"/home/flakie/package/packages/client-recommendation/src/__tests__/features/personalization-strategy.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/integration/batching.test.ts:4:19)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/integration/batching.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/integration/batching.test.ts:4:19)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/integration/batching.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/integration/chunked-batch.test.ts:3:19)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/integration/chunked-batch.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["console logger"],"failureMessages":[],"fullName":"console logger respects log level type debug","location":null,"status":"passed","title":"respects log level type debug"},{"ancestorTitles":["console logger"],"failureMessages":[],"fullName":"console logger respects log level type info","location":null,"status":"passed","title":"respects log level type info"},{"ancestorTitles":["console logger"],"failureMessages":[],"fullName":"console logger respects log level type error","location":null,"status":"passed","title":"respects log level type error"}],"endTime":1666890122831,"message":"","name":"/home/flakie/package/packages/logger-console/src/__tests__/console-logger.test.ts","startTime":1666890122473,"status":"passed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/integration/chunked-batch.test.ts:3:19)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/integration/chunked-batch.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["console logger"],"failureMessages":[],"fullName":"console logger respects log level type debug","location":null,"status":"passed","title":"respects log level type debug"},{"ancestorTitles":["console logger"],"failureMessages":[],"fullName":"console logger respects log level type info","location":null,"status":"passed","title":"respects log level type info"},{"ancestorTitles":["console logger"],"failureMessages":[],"fullName":"console logger respects log level type error","location":null,"status":"passed","title":"respects log level type error"}],"endTime":1666890123227,"message":"","name":"/home/flakie/package/packages/logger-console/src/__tests__/console-logger.test.ts","startTime":1666890122854,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["user agent"],"failureMessages":[],"fullName":"user agent contains a default value","location":null,"status":"passed","title":"contains a default value"},{"ancestorTitles":["user agent"],"failureMessages":[],"fullName":"user agent allows to add other api clients","location":null,"status":"passed","title":"allows to add other api clients"},{"ancestorTitles":["user agent"],"failureMessages":[],"fullName":"user agent is idempotent","location":null,"status":"passed","title":"is idempotent"}],"endTime":1666890123337,"message":"","name":"/home/flakie/package/packages/transporter/src/__tests__/unit/user-agent.test.ts","startTime":1666890122861,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["user agent"],"failureMessages":[],"fullName":"user agent contains a default value","location":null,"status":"passed","title":"contains a default value"},{"ancestorTitles":["user agent"],"failureMessages":[],"fullName":"user agent allows to add other api clients","location":null,"status":"passed","title":"allows to add other api clients"},{"ancestorTitles":["user agent"],"failureMessages":[],"fullName":"user agent is idempotent","location":null,"status":"passed","title":"is idempotent"}],"endTime":1666890123667,"message":"","name":"/home/flakie/package/packages/transporter/src/__tests__/unit/user-agent.test.ts","startTime":1666890123256,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["request options"],"failureMessages":[],"fullName":"request options has default values","location":null,"status":"passed","title":"has default values"},{"ancestorTitles":["request options"],"failureMessages":[],"fullName":"request options maps request options","location":null,"status":"passed","title":"maps request options"},{"ancestorTitles":["request options"],"failureMessages":[],"fullName":"request options maps request options with data","location":null,"status":"passed","title":"maps request options with data"},{"ancestorTitles":["request options"],"failureMessages":[],"fullName":"request options ignores empty data maps","location":null,"status":"passed","title":"ignores empty data maps"}],"endTime":1666890123759,"message":"","name":"/home/flakie/package/packages/transporter/src/__tests__/unit/request-options.test.ts","startTime":1666890123382,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["request options"],"failureMessages":[],"fullName":"request options has default values","location":null,"status":"passed","title":"has default values"},{"ancestorTitles":["request options"],"failureMessages":[],"fullName":"request options maps request options","location":null,"status":"passed","title":"maps request options"},{"ancestorTitles":["request options"],"failureMessages":[],"fullName":"request options maps request options with data","location":null,"status":"passed","title":"maps request options with data"},{"ancestorTitles":["request options"],"failureMessages":[],"fullName":"request options ignores empty data maps","location":null,"status":"passed","title":"ignores empty data maps"}],"endTime":1666890123979,"message":"","name":"/home/flakie/package/packages/transporter/src/__tests__/unit/request-options.test.ts","startTime":1666890123699,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["awaitable promise"],"failureMessages":[],"fullName":"awaitable promise resolves the original response without wait","location":null,"status":"passed","title":"resolves the original response without wait"},{"ancestorTitles":["awaitable promise"],"failureMessages":[],"fullName":"awaitable promise resolves the original response after wait","location":null,"status":"passed","title":"resolves the original response after wait"},{"ancestorTitles":["awaitable promise"],"failureMessages":[],"fullName":"awaitable promise gets the rejection of the original promise","location":null,"status":"passed","title":"gets the rejection of the original promise"},{"ancestorTitles":["awaitable promise"],"failureMessages":[],"fullName":"awaitable promise gets the rejection of the wait promise","location":null,"status":"passed","title":"gets the rejection of the wait promise"}],"endTime":1666890124039,"message":"","name":"/home/flakie/package/packages/client-common/src/__tests__/unit/waitable-promise.test.ts","startTime":1666890123784,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["awaitable promise"],"failureMessages":[],"fullName":"awaitable promise resolves the original response without wait","location":null,"status":"passed","title":"resolves the original response without wait"},{"ancestorTitles":["awaitable promise"],"failureMessages":[],"fullName":"awaitable promise resolves the original response after wait","location":null,"status":"passed","title":"resolves the original response after wait"},{"ancestorTitles":["awaitable promise"],"failureMessages":[],"fullName":"awaitable promise gets the rejection of the original promise","location":null,"status":"passed","title":"gets the rejection of the original promise"},{"ancestorTitles":["awaitable promise"],"failureMessages":[],"fullName":"awaitable promise gets the rejection of the wait promise","location":null,"status":"passed","title":"gets the rejection of the wait promise"}],"endTime":1666890124240,"message":"","name":"/home/flakie/package/packages/client-common/src/__tests__/unit/waitable-promise.test.ts","startTime":1666890123996,"status":"passed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/recommend/src/__tests__/getRelatedProducts.test.ts:3:19)\n","name":"/home/flakie/package/packages/recommend/src/__tests__/getRelatedProducts.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/recommend/src/__tests__/getRelatedProducts.test.ts:3:19)\n","name":"/home/flakie/package/packages/recommend/src/__tests__/getRelatedProducts.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/recommend/src/__tests__/getTrendingFacets.test.ts:3:19)\n","name":"/home/flakie/package/packages/recommend/src/__tests__/getTrendingFacets.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["null cache"],"failureMessages":[],"fullName":"null cache does not set value","location":null,"status":"passed","title":"does not set value"},{"ancestorTitles":["null cache"],"failureMessages":[],"fullName":"null cache returns default value","location":null,"status":"passed","title":"returns default value"},{"ancestorTitles":["null cache"],"failureMessages":[],"fullName":"null cache can be deleted","location":null,"status":"passed","title":"can be deleted"},{"ancestorTitles":["null cache"],"failureMessages":[],"fullName":"null cache can be cleared","location":null,"status":"passed","title":"can be cleared"}],"endTime":1666890125523,"message":"","name":"/home/flakie/package/packages/cache-common/src/__tests__/unit/null-cache.test.ts","startTime":1666890125250,"status":"passed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/recommend/src/__tests__/getTrendingFacets.test.ts:3:19)\n","name":"/home/flakie/package/packages/recommend/src/__tests__/getTrendingFacets.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["helpers"],"failureMessages":[],"fullName":"helpers encodes url","location":null,"status":"passed","title":"encodes url"},{"ancestorTitles":["helpers"],"failureMessages":[],"fullName":"helpers adds objects","location":null,"status":"passed","title":"adds objects"}],"endTime":1666890125848,"message":"","name":"/home/flakie/package/packages/client-common/src/__tests__/unit/helpers.test.ts","startTime":1666890125581,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["null cache"],"failureMessages":[],"fullName":"null cache does not set value","location":null,"status":"passed","title":"does not set value"},{"ancestorTitles":["null cache"],"failureMessages":[],"fullName":"null cache returns default value","location":null,"status":"passed","title":"returns default value"},{"ancestorTitles":["null cache"],"failureMessages":[],"fullName":"null cache can be deleted","location":null,"status":"passed","title":"can be deleted"},{"ancestorTitles":["null cache"],"failureMessages":[],"fullName":"null cache can be cleared","location":null,"status":"passed","title":"can be cleared"}],"endTime":1666890125883,"message":"","name":"/home/flakie/package/packages/cache-common/src/__tests__/unit/null-cache.test.ts","startTime":1666890125535,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["helpers"],"failureMessages":[],"fullName":"helpers encodes url","location":null,"status":"passed","title":"encodes url"},{"ancestorTitles":["helpers"],"failureMessages":[],"fullName":"helpers adds objects","location":null,"status":"passed","title":"adds objects"}],"endTime":1666890126207,"message":"","name":"/home/flakie/package/packages/client-common/src/__tests__/unit/helpers.test.ts","startTime":1666890125888,"status":"passed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/recommend/src/__tests__/getTrendingItems.test.ts:3:19)\n","name":"/home/flakie/package/packages/recommend/src/__tests__/getTrendingItems.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/recommend/src/__tests__/getTrendingItems.test.ts:3:19)\n","name":"/home/flakie/package/packages/recommend/src/__tests__/getTrendingItems.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/integration/get-logs.test.ts:5:19)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/integration/get-logs.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/integration/get-logs.test.ts:5:19)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/integration/get-logs.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["retryable promise"],"failureMessages":[],"fullName":"retryable promise resolves promise after some retries","location":null,"status":"passed","title":"resolves promise after some retries"},{"ancestorTitles":["retryable promise"],"failureMessages":[],"fullName":"retryable promise gets the rejection of the given promise from the callback","location":null,"status":"passed","title":"gets the rejection of the given promise from the callback"}],"endTime":1666890128658,"message":"","name":"/home/flakie/package/packages/client-common/src/__tests__/unit/retryable-promise.test.ts","startTime":1666890127793,"status":"passed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/integration/multiple-operations.test.ts:5:19)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/integration/multiple-operations.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["retryable promise"],"failureMessages":[],"fullName":"retryable promise resolves promise after some retries","location":null,"status":"passed","title":"resolves promise after some retries"},{"ancestorTitles":["retryable promise"],"failureMessages":[],"fullName":"retryable promise gets the rejection of the given promise from the callback","location":null,"status":"passed","title":"gets the rejection of the given promise from the callback"}],"endTime":1666890128884,"message":"","name":"/home/flakie/package/packages/client-common/src/__tests__/unit/retryable-promise.test.ts","startTime":1666890128068,"status":"passed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-analytics/src/__tests__/unit/analytics-client.test.ts:3:25)\n","name":"/home/flakie/package/packages/client-analytics/src/__tests__/unit/analytics-client.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/transporter/src/__tests__/integration/query-parameters.test.ts:3:19)\n","name":"/home/flakie/package/packages/transporter/src/__tests__/integration/query-parameters.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-analytics/src/__tests__/unit/analytics-client.test.ts:3:25)\n","name":"/home/flakie/package/packages/client-analytics/src/__tests__/unit/analytics-client.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["null logger"],"failureMessages":[],"fullName":"null logger has a null behavior","location":null,"status":"passed","title":"has a null behavior"}],"endTime":1666890130072,"message":"","name":"/home/flakie/package/packages/logger-common/src/__tests__/null-logger.test.ts","startTime":1666890129852,"status":"passed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/transporter/src/__tests__/integration/query-parameters.test.ts:3:19)\n","name":"/home/flakie/package/packages/transporter/src/__tests__/integration/query-parameters.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["null logger"],"failureMessages":[],"fullName":"null logger has a null behavior","location":null,"status":"passed","title":"has a null behavior"}],"endTime":1666890130258,"message":"","name":"/home/flakie/package/packages/logger-common/src/__tests__/null-logger.test.ts","startTime":1666890129922,"status":"passed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/integration/exists.test.ts:3:19)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/integration/exists.test.ts","startTime":1666890131752,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1666890131752,"message":"  ● Test suite failed to run\n\n    Missing 'ALGOLIA_APPLICATION_ID_1' environment variable.\n\n      149 |     envs.forEach(env => {\n      150 |       if (process.env[env] === undefined) {\n    > 151 |         throw new Error(`Missing '${env}' environment variable.`);\n          |               ^\n      152 |       }\n      153 |     });\n      154 |   }\n\n      at packages/client-common/src/__tests__/TestSuite.ts:151:15\n          at Array.forEach (<anonymous>)\n      at TestSuite.ensureEnvironmentVariables (packages/client-common/src/__tests__/TestSuite.ts:149:10)\n      at new TestSuite (packages/client-common/src/__tests__/TestSuite.ts:42:10)\n      at Object.<anonymous> (packages/client-search/src/__tests__/integration/exists.test.ts:3:19)\n","name":"/home/flakie/package/packages/client-search/src/__tests__/integration/exists.test.ts","startTime":1666890131752,"status":"failed","summary":""}],"wasInterrupted":false,"coverageMap":{"/home/flakie/package/packages/transporter/src/index.ts":{"path":"/home/flakie/package/packages/transporter/src/index.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":45}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":37}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":38}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":36}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":34}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":31}},"6":{"start":{"line":11,"column":0},"end":{"line":11,"column":29}},"7":{"start":{"line":12,"column":0},"end":{"line":12,"column":29}},"8":{"start":{"line":13,"column":0},"end":{"line":13,"column":31}},"9":{"start":{"line":14,"column":0},"end":{"line":14,"column":30}}},"fnMap":{},"branchMap":{},"s":{"0":27,"1":27,"2":27,"3":27,"4":27,"5":27,"6":27,"7":27,"8":27,"9":27},"f":{},"b":{}},"/home/flakie/package/packages/transporter/src/createMappedRequestOptions.ts":{"path":"/home/flakie/package/packages/transporter/src/createMappedRequestOptions.ts","statementMap":{"0":{"start":{"line":7,"column":34},"end":{"line":7,"column":54}},"1":{"start":{"line":9,"column":39},"end":{"line":9,"column":57}},"2":{"start":{"line":11,"column":2},"end":{"line":15,"column":5}},"3":{"start":{"line":12,"column":4},"end":{"line":14,"column":null}},"4":{"start":{"line":13,"column":6},"end":{"line":13,"column":31}},"5":{"start":{"line":17,"column":2},"end":{"line":23,"column":4}},"6":{"start":{"line":3,"column":0},"end":{"line":3,"column":16}}},"fnMap":{"0":{"name":"createMappedRequestOptions","decl":{"start":{"line":3,"column":16},"end":{"line":3,"column":42}},"loc":{"start":{"line":5,"column":18},"end":{"line":24,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":31},"end":{"line":11,"column":34}},"loc":{"start":{"line":11,"column":37},"end":{"line":15,"column":3}}}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":34},"end":{"line":7,"column":54}},"type":"binary-expr","locations":[{"start":{"line":7,"column":34},"end":{"line":7,"column":48}},{"start":{"line":7,"column":52},"end":{"line":7,"column":54}}]},"1":{"loc":{"start":{"line":9,"column":39},"end":{"line":9,"column":57}},"type":"binary-expr","locations":[{"start":{"line":9,"column":39},"end":{"line":9,"column":51}},{"start":{"line":9,"column":55},"end":{"line":9,"column":57}}]},"2":{"loc":{"start":{"line":12,"column":4},"end":{"line":14,"column":null}},"type":"if","locations":[{"start":{"line":12,"column":4},"end":{"line":14,"column":null}}]},"3":{"loc":{"start":{"line":18,"column":10},"end":{"line":18,"column":60}},"type":"cond-expr","locations":[{"start":{"line":18,"column":44},"end":{"line":18,"column":48}},{"start":{"line":18,"column":51},"end":{"line":18,"column":60}}]},"4":{"loc":{"start":{"line":19,"column":13},"end":{"line":19,"column":39}},"type":"binary-expr","locations":[{"start":{"line":19,"column":13},"end":{"line":19,"column":28}},{"start":{"line":19,"column":32},"end":{"line":19,"column":39}}]},"5":{"loc":{"start":{"line":20,"column":13},"end":{"line":20,"column":34}},"type":"binary-expr","locations":[{"start":{"line":20,"column":13},"end":{"line":20,"column":28}},{"start":{"line":20,"column":32},"end":{"line":20,"column":34}}]},"6":{"loc":{"start":{"line":21,"column":21},"end":{"line":21,"column":50}},"type":"binary-expr","locations":[{"start":{"line":21,"column":21},"end":{"line":21,"column":44}},{"start":{"line":21,"column":48},"end":{"line":21,"column":50}}]}},"s":{"0":348,"1":348,"2":348,"3":28,"4":4,"5":348,"6":27},"f":{"0":348,"1":28},"b":{"0":[348,316],"1":[348,344],"2":[4],"3":[4,344],"4":[348,342],"5":[348,342],"6":[348,342]}},"/home/flakie/package/packages/transporter/src/createStatefulHost.ts":{"path":"/home/flakie/package/packages/transporter/src/createStatefulHost.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":41}},"1":{"start":{"line":6,"column":25},"end":{"line":6,"column":38}},"2":{"start":{"line":12,"column":2},"end":{"line":16,"column":4}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":16}},"4":{"start":{"line":20,"column":2},"end":{"line":20,"column":94}},"5":{"start":{"line":19,"column":0},"end":{"line":19,"column":16}},"6":{"start":{"line":24,"column":2},"end":{"line":26,"column":4}},"7":{"start":{"line":23,"column":0},"end":{"line":23,"column":16}}},"fnMap":{"0":{"name":"createStatefulHost","decl":{"start":{"line":8,"column":16},"end":{"line":8,"column":34}},"loc":{"start":{"line":10,"column":44},"end":{"line":17,"column":1}}},"1":{"name":"isStatefulHostUp","decl":{"start":{"line":19,"column":16},"end":{"line":19,"column":32}},"loc":{"start":{"line":19,"column":51},"end":{"line":21,"column":1}}},"2":{"name":"isStatefulHostTimeouted","decl":{"start":{"line":23,"column":16},"end":{"line":23,"column":39}},"loc":{"start":{"line":23,"column":58},"end":{"line":27,"column":1}}}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":2},"end":{"line":10,"column":44}},"type":"default-arg","locations":[{"start":{"line":10,"column":27},"end":{"line":10,"column":44}}]},"1":{"loc":{"start":{"line":20,"column":9},"end":{"line":20,"column":93}},"type":"binary-expr","locations":[{"start":{"line":20,"column":9},"end":{"line":20,"column":42}},{"start":{"line":20,"column":46},"end":{"line":20,"column":93}}]},"2":{"loc":{"start":{"line":25,"column":4},"end":{"line":25,"column":96}},"type":"binary-expr","locations":[{"start":{"line":25,"column":4},"end":{"line":25,"column":44}},{"start":{"line":25,"column":48},"end":{"line":25,"column":96}}]}},"s":{"0":27,"1":27,"2":692,"3":27,"4":662,"5":27,"6":662,"7":27},"f":{"0":692,"1":662,"2":662},"b":{"0":[606],"1":[662,56],"2":[662,14]}},"/home/flakie/package/packages/transporter/src/types/index.ts":{"path":"/home/flakie/package/packages/transporter/src/types/index.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":27}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":39}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":26}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":30}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":39}},"6":{"start":{"line":11,"column":0},"end":{"line":11,"column":34}},"7":{"start":{"line":12,"column":0},"end":{"line":12,"column":26}},"8":{"start":{"line":13,"column":0},"end":{"line":13,"column":33}},"9":{"start":{"line":14,"column":0},"end":{"line":14,"column":29}},"10":{"start":{"line":15,"column":0},"end":{"line":15,"column":29}},"11":{"start":{"line":16,"column":0},"end":{"line":16,"column":31}},"12":{"start":{"line":17,"column":0},"end":{"line":17,"column":32}},"13":{"start":{"line":18,"column":0},"end":{"line":18,"column":27}},"14":{"start":{"line":19,"column":0},"end":{"line":19,"column":30}},"15":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}},"16":{"start":{"line":21,"column":0},"end":{"line":21,"column":28}},"17":{"start":{"line":22,"column":0},"end":{"line":22,"column":35}}},"fnMap":{},"branchMap":{},"s":{"0":27,"1":27,"2":27,"3":27,"4":27,"5":27,"6":27,"7":27,"8":27,"9":27,"10":27,"11":27,"12":27,"13":27,"14":27,"15":27,"16":27,"17":27},"f":{},"b":{}},"/home/flakie/package/packages/transporter/src/types/CallType.ts":{"path":"/home/flakie/package/packages/transporter/src/types/CallType.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":16,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":27},"f":{},"b":{}},"/home/flakie/package/packages/transporter/src/types/StatefulHost.ts":{"path":"/home/flakie/package/packages/transporter/src/types/StatefulHost.ts","statementMap":{"0":{"start":{"line":3,"column":13},"end":{"line":7,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":27},"f":{},"b":{}},"/home/flakie/package/packages/transporter/src/createStatelessHost.ts":{"path":"/home/flakie/package/packages/transporter/src/createStatelessHost.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":57}},"1":{"start":{"line":4,"column":2},"end":{"line":10,"column":null}},"2":{"start":{"line":5,"column":4},"end":{"line":9,"column":6}},"3":{"start":{"line":12,"column":2},"end":{"line":16,"column":4}},"4":{"start":{"line":3,"column":0},"end":{"line":3,"column":16}}},"fnMap":{"0":{"name":"createStatelessHost","decl":{"start":{"line":3,"column":16},"end":{"line":3,"column":35}},"loc":{"start":{"line":3,"column":56},"end":{"line":17,"column":1}}}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":2},"end":{"line":10,"column":null}},"type":"if","locations":[{"start":{"line":4,"column":2},"end":{"line":10,"column":null}}]},"1":{"loc":{"start":{"line":13,"column":14},"end":{"line":13,"column":41}},"type":"binary-expr","locations":[{"start":{"line":13,"column":14},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":41}}]},"2":{"loc":{"start":{"line":15,"column":12},"end":{"line":15,"column":42}},"type":"binary-expr","locations":[{"start":{"line":15,"column":12},"end":{"line":15,"column":26}},{"start":{"line":15,"column":30},"end":{"line":15,"column":42}}]}},"s":{"0":27,"1":969,"2":2,"3":967,"4":27},"f":{"0":969},"b":{"0":[2],"1":[967,337],"2":[967,117]}},"/home/flakie/package/packages/transporter/src/createTransporter.ts":{"path":"/home/flakie/package/packages/transporter/src/createTransporter.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":null}},"1":{"start":{"line":10,"column":0},"end":{"line":10,"column":63}},"2":{"start":{"line":24,"column":6},"end":{"line":24,"column":13}},"3":{"start":{"line":26,"column":35},"end":{"line":150,"column":4}},"4":{"start":{"line":36,"column":29},"end":{"line":36,"column":54}},"5":{"start":{"line":46,"column":35},"end":{"line":48,"column":null}},"6":{"start":{"line":51,"column":37},"end":{"line":63,"column":7}},"7":{"start":{"line":57,"column":8},"end":{"line":62,"column":10}},"8":{"start":{"line":59,"column":43},"end":{"line":59,"column":78}},"9":{"start":{"line":71,"column":8},"end":{"line":73,"column":29}},"10":{"start":{"line":79,"column":6},"end":{"line":81,"column":null}},"11":{"start":{"line":80,"column":8},"end":{"line":80,"column":40}},"12":{"start":{"line":88,"column":18},"end":{"line":95,"column":8}},"13":{"start":{"line":101,"column":6},"end":{"line":133,"column":8}},"14":{"start":{"line":108,"column":10},"end":{"line":123,"column":13}},"15":{"start":{"line":109,"column":12},"end":{"line":122,"column":14}},"16":{"start":{"line":118,"column":30},"end":{"line":118,"column":92}},"17":{"start":{"line":119,"column":25},"end":{"line":119,"column":98}},"18":{"start":{"line":121,"column":41},"end":{"line":121,"column":62}},"19":{"start":{"line":131,"column":28},"end":{"line":131,"column":73}},"20":{"start":{"line":143,"column":6},"end":{"line":148,"column":8}},"21":{"start":{"line":145,"column":41},"end":{"line":145,"column":77}},"22":{"start":{"line":152,"column":2},"end":{"line":152,"column":21}},"23":{"start":{"line":12,"column":0},"end":{"line":12,"column":16}}},"fnMap":{"0":{"name":"createTransporter","decl":{"start":{"line":12,"column":16},"end":{"line":12,"column":33}},"loc":{"start":{"line":12,"column":61},"end":{"line":153,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":36,"column":21},"end":{"line":36,"column":25}},"loc":{"start":{"line":36,"column":29},"end":{"line":36,"column":54}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":8}},"loc":{"start":{"line":39,"column":37},"end":{"line":134,"column":5}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":51,"column":37},"end":{"line":51,"column":70}},"loc":{"start":{"line":51,"column":72},"end":{"line":63,"column":7}}},"4":{"name":"(anonymous_4)","decl":{"start":{"line":59,"column":35},"end":{"line":59,"column":39}},"loc":{"start":{"line":59,"column":43},"end":{"line":59,"column":78}}},"5":{"name":"(anonymous_5)","decl":{"start":{"line":103,"column":8},"end":{"line":103,"column":11}},"loc":{"start":{"line":103,"column":13},"end":{"line":124,"column":9}}},"6":{"name":"(anonymous_6)","decl":{"start":{"line":108,"column":52},"end":{"line":108,"column":55}},"loc":{"start":{"line":108,"column":57},"end":{"line":123,"column":11}}},"7":{"name":"(anonymous_7)","decl":{"start":{"line":118,"column":18},"end":{"line":118,"column":26}},"loc":{"start":{"line":118,"column":30},"end":{"line":118,"column":92}}},"8":{"name":"(anonymous_8)","decl":{"start":{"line":119,"column":18},"end":{"line":119,"column":21}},"loc":{"start":{"line":119,"column":25},"end":{"line":119,"column":98}}},"9":{"name":"(anonymous_9)","decl":{"start":{"line":121,"column":22},"end":{"line":121,"column":23}},"loc":{"start":{"line":121,"column":41},"end":{"line":121,"column":62}}},"10":{"name":"(anonymous_10)","decl":{"start":{"line":131,"column":16},"end":{"line":131,"column":24}},"loc":{"start":{"line":131,"column":28},"end":{"line":131,"column":73}}},"11":{"name":"(anonymous_11)","decl":{"start":{"line":135,"column":4},"end":{"line":135,"column":9}},"loc":{"start":{"line":137,"column":37},"end":{"line":149,"column":5}}},"12":{"name":"(anonymous_12)","decl":{"start":{"line":145,"column":33},"end":{"line":145,"column":37}},"loc":{"start":{"line":145,"column":41},"end":{"line":145,"column":77}}}},"branchMap":{"0":{"loc":{"start":{"line":71,"column":8},"end":{"line":73,"column":29}},"type":"cond-expr","locations":[{"start":{"line":72,"column":12},"end":{"line":72,"column":42}},{"start":{"line":73,"column":12},"end":{"line":73,"column":29}}]},"1":{"loc":{"start":{"line":79,"column":6},"end":{"line":81,"column":null}},"type":"if","locations":[{"start":{"line":79,"column":6},"end":{"line":81,"column":null}}]}},"s":{"0":27,"1":27,"2":110,"3":110,"4":330,"5":310,"6":310,"7":267,"8":803,"9":310,"10":310,"11":63,"12":247,"13":247,"14":222,"15":204,"16":124,"17":80,"18":124,"19":142,"20":30,"21":90,"22":110,"23":27},"f":{"0":110,"1":330,"2":310,"3":267,"4":803,"5":222,"6":204,"7":124,"8":80,"9":124,"10":142,"11":30,"12":90},"b":{"0":[0,310],"1":[63]}},"/home/flakie/package/packages/transporter/src/concerns/retryableRequest.ts":{"path":"/home/flakie/package/packages/transporter/src/concerns/retryableRequest.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":65}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":null}},"2":{"start":{"line":20,"column":0},"end":{"line":20,"column":66}},"3":{"start":{"line":21,"column":0},"end":{"line":21,"column":58}},"4":{"start":{"line":29,"column":35},"end":{"line":29,"column":37}},"5":{"start":{"line":34,"column":15},"end":{"line":34,"column":53}},"6":{"start":{"line":35,"column":18},"end":{"line":35,"column":63}},"7":{"start":{"line":36,"column":17},"end":{"line":36,"column":31}},"8":{"start":{"line":40,"column":4},"end":{"line":45,"column":10}},"9":{"start":{"line":47,"column":26},"end":{"line":52,"column":4}},"10":{"start":{"line":54,"column":22},"end":{"line":54,"column":23}},"11":{"start":{"line":56,"column":16},"end":{"line":141,"column":3}},"12":{"start":{"line":63,"column":17},"end":{"line":63,"column":28}},"13":{"start":{"line":64,"column":4},"end":{"line":66,"column":null}},"14":{"start":{"line":65,"column":6},"end":{"line":65,"column":71}},"15":{"start":{"line":68,"column":20},"end":{"line":75,"column":6}},"16":{"start":{"line":82,"column":29},"end":{"line":94,"column":5}},"17":{"start":{"line":83,"column":37},"end":{"line":88,"column":8}},"18":{"start":{"line":91,"column":6},"end":{"line":91,"column":34}},"19":{"start":{"line":93,"column":6},"end":{"line":93,"column":24}},"20":{"start":{"line":96,"column":43},"end":{"line":136,"column":6}},"21":{"start":{"line":97,"column":29},"end":{"line":97,"column":57}},"22":{"start":{"line":99,"column":27},"end":{"line":99,"column":53}},"23":{"start":{"line":105,"column":8},"end":{"line":107,"column":null}},"24":{"start":{"line":106,"column":10},"end":{"line":106,"column":26}},"25":{"start":{"line":109,"column":8},"end":{"line":129,"column":48}},"26":{"start":{"line":129,"column":22},"end":{"line":129,"column":46}},"27":{"start":{"line":132,"column":8},"end":{"line":132,"column":35}},"28":{"start":{"line":134,"column":8},"end":{"line":134,"column":85}},"29":{"start":{"line":138,"column":4},"end":{"line":140,"column":7}},"30":{"start":{"line":139,"column":6},"end":{"line":139,"column":48}},"31":{"start":{"line":151,"column":2},"end":{"line":153,"column":5}},"32":{"start":{"line":152,"column":4},"end":{"line":152,"column":76}},"33":{"start":{"line":23,"column":0},"end":{"line":23,"column":16}}},"fnMap":{"0":{"name":"retryableRequest","decl":{"start":{"line":23,"column":16},"end":{"line":23,"column":32}},"loc":{"start":{"line":27,"column":38},"end":{"line":154,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":56,"column":16},"end":{"line":56,"column":null}},"loc":{"start":{"line":59,"column":36},"end":{"line":141,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":82,"column":29},"end":{"line":82,"column":30}},"loc":{"start":{"line":82,"column":64},"end":{"line":94,"column":5}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":97,"column":17},"end":{"line":97,"column":25}},"loc":{"start":{"line":97,"column":29},"end":{"line":97,"column":57}}},"4":{"name":"(anonymous_4)","decl":{"start":{"line":98,"column":6},"end":{"line":98,"column":13}},"loc":{"start":{"line":98,"column":22},"end":{"line":130,"column":7}}},"5":{"name":"(anonymous_5)","decl":{"start":{"line":129,"column":16},"end":{"line":129,"column":19}},"loc":{"start":{"line":129,"column":22},"end":{"line":129,"column":46}}},"6":{"name":"(anonymous_6)","decl":{"start":{"line":131,"column":6},"end":{"line":131,"column":12}},"loc":{"start":{"line":131,"column":21},"end":{"line":135,"column":7}}},"7":{"name":"(anonymous_7)","decl":{"start":{"line":138,"column":52},"end":{"line":138,"column":60}},"loc":{"start":{"line":138,"column":63},"end":{"line":140,"column":5}}},"8":{"name":"(anonymous_8)","decl":{"start":{"line":151,"column":77},"end":{"line":151,"column":84}},"loc":{"start":{"line":151,"column":87},"end":{"line":153,"column":3}}}},"branchMap":{"0":{"loc":{"start":{"line":40,"column":4},"end":{"line":45,"column":10}},"type":"cond-expr","locations":[{"start":{"line":41,"column":8},"end":{"line":41,"column":10}},{"start":{"line":42,"column":8},"end":{"line":45,"column":10}}]},"1":{"loc":{"start":{"line":64,"column":4},"end":{"line":66,"column":null}},"type":"if","locations":[{"start":{"line":64,"column":4},"end":{"line":66,"column":null}}]},"2":{"loc":{"start":{"line":105,"column":8},"end":{"line":107,"column":null}},"type":"if","locations":[{"start":{"line":105,"column":8},"end":{"line":107,"column":null}}]},"3":{"loc":{"start":{"line":126,"column":14},"end":{"line":126,"column":82}},"type":"cond-expr","locations":[{"start":{"line":126,"column":36},"end":{"line":126,"column":60}},{"start":{"line":126,"column":63},"end":{"line":126,"column":82}}]}},"s":{"0":27,"1":27,"2":27,"3":27,"4":297,"5":297,"6":297,"7":297,"8":297,"9":297,"10":297,"11":297,"12":360,"13":360,"14":24,"15":336,"16":336,"17":152,"18":152,"19":152,"20":336,"21":184,"22":64,"23":64,"24":20,"25":64,"26":64,"27":88,"28":88,"29":336,"30":336,"31":297,"32":296,"33":27},"f":{"0":297,"1":360,"2":152,"3":184,"4":64,"5":64,"6":88,"7":336,"8":296},"b":{"0":[297,0],"1":[24],"2":[20],"3":[20,44]}},"/home/flakie/package/packages/requester-common/src/index.ts":{"path":"/home/flakie/package/packages/requester-common/src/index.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":30}}},"fnMap":{},"branchMap":{},"s":{"0":30},"f":{},"b":{}},"/home/flakie/package/packages/requester-common/src/types/index.ts":{"path":"/home/flakie/package/packages/requester-common/src/types/index.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":30}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":26}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":28}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":27}}},"fnMap":{},"branchMap":{},"s":{"0":30,"1":30,"2":30,"3":30,"4":30},"f":{},"b":{}},"/home/flakie/package/packages/requester-common/src/types/MethodType.ts":{"path":"/home/flakie/package/packages/requester-common/src/types/MethodType.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":6,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":30},"f":{},"b":{}},"/home/flakie/package/packages/transporter/src/concerns/createRetryableOptions.ts":{"path":"/home/flakie/package/packages/transporter/src/concerns/createRetryableOptions.ts","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":3,"column":null}},"1":{"start":{"line":20,"column":2},"end":{"line":62,"column":5}},"2":{"start":{"line":22,"column":6},"end":{"line":24,"column":9}},"3":{"start":{"line":23,"column":8},"end":{"line":23,"column":66}},"4":{"start":{"line":27,"column":20},"end":{"line":27,"column":72}},"5":{"start":{"line":27,"column":49},"end":{"line":27,"column":71}},"6":{"start":{"line":28,"column":27},"end":{"line":28,"column":86}},"7":{"start":{"line":28,"column":56},"end":{"line":28,"column":85}},"8":{"start":{"line":33,"column":27},"end":{"line":33,"column":58}},"9":{"start":{"line":36,"column":6},"end":{"line":38,"column":24}},"10":{"start":{"line":37,"column":37},"end":{"line":37,"column":62}},"11":{"start":{"line":40,"column":4},"end":{"line":61,"column":6}},"12":{"start":{"line":54,"column":10},"end":{"line":56,"column":55}},"13":{"start":{"line":58,"column":8},"end":{"line":58,"column":47}},"14":{"start":{"line":16,"column":0},"end":{"line":16,"column":16}}},"fnMap":{"0":{"name":"createRetryableOptions","decl":{"start":{"line":16,"column":16},"end":{"line":16,"column":38}},"loc":{"start":{"line":18,"column":42},"end":{"line":63,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":21,"column":23},"end":{"line":21,"column":36}},"loc":{"start":{"line":21,"column":39},"end":{"line":25,"column":5}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":22,"column":43},"end":{"line":22,"column":46}},"loc":{"start":{"line":22,"column":48},"end":{"line":24,"column":7}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":26,"column":9},"end":{"line":26,"column":22}},"loc":{"start":{"line":26,"column":25},"end":{"line":62,"column":3}}},"4":{"name":"(anonymous_4)","decl":{"start":{"line":27,"column":41},"end":{"line":27,"column":45}},"loc":{"start":{"line":27,"column":49},"end":{"line":27,"column":71}}},"5":{"name":"(anonymous_5)","decl":{"start":{"line":28,"column":48},"end":{"line":28,"column":52}},"loc":{"start":{"line":28,"column":56},"end":{"line":28,"column":85}}},"6":{"name":"(anonymous_6)","decl":{"start":{"line":37,"column":29},"end":{"line":37,"column":33}},"loc":{"start":{"line":37,"column":37},"end":{"line":37,"column":62}}},"7":{"name":"(anonymous_7)","decl":{"start":{"line":41,"column":6},"end":{"line":41,"column":16}},"loc":{"start":{"line":41,"column":59},"end":{"line":59,"column":7}}}},"branchMap":{"0":{"loc":{"start":{"line":36,"column":6},"end":{"line":38,"column":24}},"type":"cond-expr","locations":[{"start":{"line":37,"column":10},"end":{"line":37,"column":63}},{"start":{"line":38,"column":10},"end":{"line":38,"column":24}}]},"1":{"loc":{"start":{"line":54,"column":10},"end":{"line":56,"column":55}},"type":"cond-expr","locations":[{"start":{"line":55,"column":14},"end":{"line":55,"column":15}},{"start":{"line":56,"column":14},"end":{"line":56,"column":55}}]},"2":{"loc":{"start":{"line":54,"column":10},"end":{"line":54,"column":60}},"type":"binary-expr","locations":[{"start":{"line":54,"column":10},"end":{"line":54,"column":37}},{"start":{"line":54,"column":41},"end":{"line":54,"column":60}}]}},"s":{"0":27,"1":319,"2":664,"3":602,"4":318,"5":662,"6":318,"7":662,"8":318,"9":318,"10":622,"11":318,"12":672,"13":672,"14":27},"f":{"0":319,"1":664,"2":602,"3":318,"4":662,"5":662,"6":622,"7":672},"b":{"0":[310,8],"1":[636,36],"2":[672,648]}},"/home/flakie/package/packages/transporter/src/concerns/retryDecision.ts":{"path":"/home/flakie/package/packages/transporter/src/concerns/retryDecision.ts","statementMap":{"0":{"start":{"line":3,"column":23},"end":{"line":5,"column":1}},"1":{"start":{"line":4,"column":2},"end":{"line":4,"column":39}},"2":{"start":{"line":7,"column":20},"end":{"line":14,"column":1}},"3":{"start":{"line":8,"column":17},"end":{"line":8,"column":32}},"4":{"start":{"line":9,"column":21},"end":{"line":9,"column":40}},"5":{"start":{"line":11,"column":2},"end":{"line":13,"column":4}},"6":{"start":{"line":16,"column":18},"end":{"line":18,"column":1}},"7":{"start":{"line":17,"column":2},"end":{"line":17,"column":32}},"8":{"start":{"line":20,"column":13},"end":{"line":33,"column":2}},"9":{"start":{"line":24,"column":2},"end":{"line":26,"column":null}},"10":{"start":{"line":25,"column":4},"end":{"line":25,"column":38}},"11":{"start":{"line":28,"column":2},"end":{"line":30,"column":null}},"12":{"start":{"line":29,"column":4},"end":{"line":29,"column":40}},"13":{"start":{"line":32,"column":2},"end":{"line":32,"column":35}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":23},"end":{"line":3,"column":24}},"loc":{"start":{"line":3,"column":69},"end":{"line":5,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":20},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":52},"end":{"line":14,"column":1}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":18},"end":{"line":16,"column":19}},"loc":{"start":{"line":16,"column":52},"end":{"line":18,"column":1}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":20,"column":29},"end":{"line":20,"column":null}},"loc":{"start":{"line":23,"column":34},"end":{"line":33,"column":1}}}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":9},"end":{"line":4,"column":38}},"type":"binary-expr","locations":[{"start":{"line":4,"column":9},"end":{"line":4,"column":20}},{"start":{"line":4,"column":24},"end":{"line":4,"column":38}}]},"1":{"loc":{"start":{"line":12,"column":4},"end":{"line":12,"column":96}},"type":"binary-expr","locations":[{"start":{"line":12,"column":4},"end":{"line":12,"column":14}},{"start":{"line":12,"column":18},"end":{"line":12,"column":42}},{"start":{"line":12,"column":47},"end":{"line":12,"column":69}},{"start":{"line":12,"column":73},"end":{"line":12,"column":95}}]},"2":{"loc":{"start":{"line":24,"column":2},"end":{"line":26,"column":null}},"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":26,"column":null}}]},"3":{"loc":{"start":{"line":28,"column":2},"end":{"line":30,"column":null}},"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":30,"column":null}}]}},"s":{"0":27,"1":316,"2":27,"3":336,"4":336,"5":336,"6":27,"7":272,"8":27,"9":336,"10":64,"11":272,"12":184,"13":88},"f":{"0":316,"1":336,"2":272,"3":336},"b":{"0":[316,316],"1":[336,316,314,130],"2":[64],"3":[184]}},"/home/flakie/package/packages/transporter/src/createUserAgent.ts":{"path":"/home/flakie/package/packages/transporter/src/createUserAgent.ts","statementMap":{"0":{"start":{"line":4,"column":31},"end":{"line":18,"column":4}},"1":{"start":{"line":7,"column":29},"end":{"line":9,"column":8}},"2":{"start":{"line":11,"column":6},"end":{"line":14,"column":null}},"3":{"start":{"line":13,"column":8},"end":{"line":13,"column":64}},"4":{"start":{"line":16,"column":6},"end":{"line":16,"column":23}},"5":{"start":{"line":20,"column":2},"end":{"line":20,"column":19}},"6":{"start":{"line":3,"column":0},"end":{"line":3,"column":16}}},"fnMap":{"0":{"name":"createUserAgent","decl":{"start":{"line":3,"column":16},"end":{"line":3,"column":31}},"loc":{"start":{"line":3,"column":47},"end":{"line":21,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":7}},"loc":{"start":{"line":6,"column":33},"end":{"line":17,"column":5}}}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":8},"end":{"line":8,"column":null}},"type":"cond-expr","locations":[{"start":{"line":8,"column":40},"end":{"line":8,"column":63}},{"start":{"line":8,"column":66},"end":{"line":8,"column":null}}]},"1":{"loc":{"start":{"line":11,"column":6},"end":{"line":14,"column":null}},"type":"if","locations":[{"start":{"line":11,"column":6},"end":{"line":14,"column":null}}]}},"s":{"0":117,"1":118,"2":118,"3":116,"4":118,"5":117,"6":27},"f":{"0":117,"1":118},"b":{"0":[6,112],"1":[116]}},"/home/flakie/package/packages/transporter/src/deserializer.ts":{"path":"/home/flakie/package/packages/transporter/src/deserializer.ts","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":3,"column":75}},"1":{"start":{"line":7,"column":2},"end":{"line":11,"column":null}},"2":{"start":{"line":8,"column":4},"end":{"line":8,"column":40}},"3":{"start":{"line":10,"column":4},"end":{"line":10,"column":58}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":16}},"5":{"start":{"line":19,"column":16},"end":{"line":19,"column":23}},"6":{"start":{"line":22,"column":2},"end":{"line":26,"column":null}},"7":{"start":{"line":23,"column":4},"end":{"line":23,"column":42}},"8":{"start":{"line":28,"column":2},"end":{"line":28,"column":53}},"9":{"start":{"line":14,"column":0},"end":{"line":14,"column":16}}},"fnMap":{"0":{"name":"deserializeSuccess","decl":{"start":{"line":5,"column":16},"end":{"line":5,"column":34}},"loc":{"start":{"line":5,"column":62},"end":{"line":12,"column":1}}},"1":{"name":"deserializeFailure","decl":{"start":{"line":14,"column":16},"end":{"line":14,"column":34}},"loc":{"start":{"line":16,"column":35},"end":{"line":29,"column":1}}}},"branchMap":{},"s":{"0":27,"1":184,"2":184,"3":2,"4":27,"5":88,"6":88,"7":88,"8":88,"9":27},"f":{"0":184,"1":88},"b":{}},"/home/flakie/package/packages/transporter/src/serializer.ts":{"path":"/home/flakie/package/packages/transporter/src/serializer.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":48}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":11,"column":34},"end":{"line":11,"column":75}},"3":{"start":{"line":13,"column":12},"end":{"line":13,"column":94}},"4":{"start":{"line":15,"column":2},"end":{"line":17,"column":null}},"5":{"start":{"line":16,"column":4},"end":{"line":16,"column":41}},"6":{"start":{"line":19,"column":2},"end":{"line":19,"column":13}},"7":{"start":{"line":6,"column":0},"end":{"line":6,"column":16}},"8":{"start":{"line":23,"column":26},"end":{"line":25,"column":62}},"9":{"start":{"line":24,"column":4},"end":{"line":25,"column":62}},"10":{"start":{"line":27,"column":2},"end":{"line":35,"column":15}},"11":{"start":{"line":29,"column":6},"end":{"line":32,"column":null}},"12":{"start":{"line":22,"column":0},"end":{"line":22,"column":16}},"13":{"start":{"line":42,"column":2},"end":{"line":47,"column":null}},"14":{"start":{"line":46,"column":4},"end":{"line":46,"column":21}},"15":{"start":{"line":49,"column":15},"end":{"line":51,"column":49}},"16":{"start":{"line":53,"column":2},"end":{"line":53,"column":30}},"17":{"start":{"line":38,"column":0},"end":{"line":38,"column":16}},"18":{"start":{"line":60,"column":27},"end":{"line":63,"column":4}},"19":{"start":{"line":64,"column":37},"end":{"line":64,"column":39}},"20":{"start":{"line":66,"column":2},"end":{"line":72,"column":5}},"21":{"start":{"line":67,"column":18},"end":{"line":67,"column":33}},"22":{"start":{"line":71,"column":4},"end":{"line":71,"column":52}},"23":{"start":{"line":74,"column":2},"end":{"line":74,"column":27}},"24":{"start":{"line":56,"column":0},"end":{"line":56,"column":16}}},"fnMap":{"0":{"name":"serializeUrl","decl":{"start":{"line":6,"column":16},"end":{"line":6,"column":28}},"loc":{"start":{"line":9,"column":51},"end":{"line":20,"column":1}}},"1":{"name":"serializeQueryParameters","decl":{"start":{"line":22,"column":16},"end":{"line":22,"column":40}},"loc":{"start":{"line":22,"column":82},"end":{"line":36,"column":1}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":23,"column":26},"end":{"line":23,"column":27}},"loc":{"start":{"line":24,"column":4},"end":{"line":25,"column":62}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":28,"column":9},"end":{"line":28,"column":12}},"loc":{"start":{"line":29,"column":6},"end":{"line":32,"column":null}}},"4":{"name":"serializeData","decl":{"start":{"line":38,"column":16},"end":{"line":38,"column":29}},"loc":{"start":{"line":40,"column":32},"end":{"line":54,"column":1}}},"5":{"name":"serializeHeaders","decl":{"start":{"line":56,"column":16},"end":{"line":56,"column":32}},"loc":{"start":{"line":58,"column":32},"end":{"line":75,"column":1}}},"6":{"name":"(anonymous_6)","decl":{"start":{"line":66,"column":31},"end":{"line":66,"column":37}},"loc":{"start":{"line":66,"column":40},"end":{"line":72,"column":3}}}},"branchMap":{"0":{"loc":{"start":{"line":13,"column":46},"end":{"line":13,"column":92}},"type":"cond-expr","locations":[{"start":{"line":13,"column":71},"end":{"line":13,"column":85}},{"start":{"line":13,"column":88},"end":{"line":13,"column":92}}]},"1":{"loc":{"start":{"line":15,"column":2},"end":{"line":17,"column":null}},"type":"if","locations":[{"start":{"line":15,"column":2},"end":{"line":17,"column":null}}]},"2":{"loc":{"start":{"line":24,"column":4},"end":{"line":25,"column":62}},"type":"binary-expr","locations":[{"start":{"line":24,"column":4},"end":{"line":24,"column":63}},{"start":{"line":25,"column":4},"end":{"line":25,"column":62}}]},"3":{"loc":{"start":{"line":32,"column":8},"end":{"line":32,"column":92}},"type":"cond-expr","locations":[{"start":{"line":32,"column":43},"end":{"line":32,"column":74}},{"start":{"line":32,"column":77},"end":{"line":32,"column":92}}]},"4":{"loc":{"start":{"line":42,"column":2},"end":{"line":47,"column":null}},"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":47,"column":null}}]},"5":{"loc":{"start":{"line":43,"column":4},"end":{"line":44,"column":69}},"type":"binary-expr","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":37}},{"start":{"line":44,"column":5},"end":{"line":44,"column":31}},{"start":{"line":44,"column":35},"end":{"line":44,"column":68}}]},"6":{"loc":{"start":{"line":49,"column":15},"end":{"line":51,"column":49}},"type":"cond-expr","locations":[{"start":{"line":50,"column":6},"end":{"line":50,"column":18}},{"start":{"line":51,"column":6},"end":{"line":51,"column":49}}]}},"s":{"0":27,"1":27,"2":336,"3":336,"4":336,"5":336,"6":336,"7":27,"8":338,"9":358,"10":338,"11":358,"12":27,"13":297,"14":0,"15":297,"16":297,"17":27,"18":297,"19":297,"20":297,"21":1204,"22":1204,"23":297,"24":27},"f":{"0":336,"1":338,"2":358,"3":358,"4":297,"5":297,"6":1204},"b":{"0":[2,334],"1":[336],"2":[358,356],"3":[4,354],"4":[0],"5":[297,297,0],"6":[0,297]}},"/home/flakie/package/packages/client-common/src/index.ts":{"path":"/home/flakie/package/packages/client-common/src/index.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":29}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":41}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":40}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":26}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":26}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":32}},"6":{"start":{"line":11,"column":0},"end":{"line":11,"column":30}}},"fnMap":{},"branchMap":{},"s":{"0":36,"1":36,"2":36,"3":36,"4":36,"5":36,"6":36},"f":{},"b":{}},"/home/flakie/package/packages/client-common/src/createAuth.ts":{"path":"/home/flakie/package/packages/client-common/src/createAuth.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":49}},"1":{"start":{"line":4,"column":22},"end":{"line":7,"column":4}},"2":{"start":{"line":9,"column":2},"end":{"line":17,"column":4}},"3":{"start":{"line":11,"column":6},"end":{"line":11,"column":68}},"4":{"start":{"line":15,"column":6},"end":{"line":15,"column":76}},"5":{"start":{"line":3,"column":0},"end":{"line":3,"column":16}}},"fnMap":{"0":{"name":"createAuth","decl":{"start":{"line":3,"column":16},"end":{"line":3,"column":26}},"loc":{"start":{"line":3,"column":80},"end":{"line":18,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":11}},"loc":{"start":{"line":10,"column":11},"end":{"line":12,"column":5}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":19}},"loc":{"start":{"line":14,"column":19},"end":{"line":16,"column":5}}}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":13},"end":{"line":11,"column":67}},"type":"cond-expr","locations":[{"start":{"line":11,"column":51},"end":{"line":11,"column":62}},{"start":{"line":11,"column":65},"end":{"line":11,"column":67}}]},"1":{"loc":{"start":{"line":15,"column":13},"end":{"line":15,"column":75}},"type":"cond-expr","locations":[{"start":{"line":15,"column":59},"end":{"line":15,"column":70}},{"start":{"line":15,"column":73},"end":{"line":15,"column":75}}]}},"s":{"0":36,"1":110,"2":110,"3":110,"4":110,"5":36},"f":{"0":110,"1":110,"2":110},"b":{"0":[108,2],"1":[2,108]}},"/home/flakie/package/packages/client-common/src/createRetryablePromise.ts":{"path":"/home/flakie/package/packages/client-common/src/createRetryablePromise.ts","statementMap":{"0":{"start":{"line":4,"column":21},"end":{"line":4,"column":22}},"1":{"start":{"line":6,"column":16},"end":{"line":14,"column":3}},"2":{"start":{"line":7,"column":4},"end":{"line":7,"column":19}},"3":{"start":{"line":9,"column":4},"end":{"line":13,"column":7}},"4":{"start":{"line":10,"column":6},"end":{"line":12,"column":45}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":33}},"6":{"start":{"line":16,"column":2},"end":{"line":16,"column":25}},"7":{"start":{"line":1,"column":0},"end":{"line":1,"column":16}}},"fnMap":{"0":{"name":"createRetryablePromise","decl":{"start":{"line":1,"column":16},"end":{"line":1,"column":38}},"loc":{"start":{"line":2,"column":67},"end":{"line":17,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":16},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":41},"end":{"line":14,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":23},"end":{"line":9,"column":24}},"loc":{"start":{"line":9,"column":74},"end":{"line":13,"column":5}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":10,"column":17},"end":{"line":10,"column":20}},"loc":{"start":{"line":10,"column":22},"end":{"line":12,"column":7}}}},"branchMap":{},"s":{"0":4,"1":4,"2":8,"3":8,"4":8,"5":8,"6":4,"7":36},"f":{"0":4,"1":8,"2":8,"3":8},"b":{}},"/home/flakie/package/packages/client-common/src/createWaitablePromise.ts":{"path":"/home/flakie/package/packages/client-common/src/createWaitablePromise.ts","statementMap":{"0":{"start":{"line":8,"column":4},"end":{"line":8,"column":29}},"1":{"start":{"line":12,"column":2},"end":{"line":20,"column":35}},"2":{"start":{"line":14,"column":6},"end":{"line":18,"column":8}},"3":{"start":{"line":16,"column":28},"end":{"line":16,"column":83}},"4":{"start":{"line":17,"column":34},"end":{"line":17,"column":51}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":16}}},"fnMap":{"0":{"name":"createWaitablePromise","decl":{"start":{"line":5,"column":16},"end":{"line":5,"column":37}},"loc":{"start":{"line":9,"column":3},"end":{"line":21,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":26},"end":{"line":7,"column":27}},"loc":{"start":{"line":7,"column":57},"end":{"line":9,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":8}},"loc":{"start":{"line":13,"column":40},"end":{"line":19,"column":5}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":16,"column":16},"end":{"line":16,"column":24}},"loc":{"start":{"line":16,"column":28},"end":{"line":16,"column":83}}},"4":{"name":"(anonymous_4)","decl":{"start":{"line":17,"column":16},"end":{"line":17,"column":30}},"loc":{"start":{"line":17,"column":34},"end":{"line":17,"column":51}}}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":2},"end":{"line":9,"column":3}},"type":"default-arg","locations":[{"start":{"line":7,"column":26},"end":{"line":9,"column":3}}]}},"s":{"0":2,"1":12,"2":4,"3":4,"4":2,"5":36},"f":{"0":12,"1":2,"2":4,"3":4,"4":2},"b":{"0":[10]}},"/home/flakie/package/packages/client-common/src/helpers.ts":{"path":"/home/flakie/package/packages/client-common/src/helpers.ts","statementMap":{"0":{"start":{"line":3,"column":10},"end":{"line":3,"column":26}},"1":{"start":{"line":6,"column":2},"end":{"line":11,"column":null}},"2":{"start":{"line":7,"column":14},"end":{"line":7,"column":49}},"3":{"start":{"line":8,"column":14},"end":{"line":8,"column":22}},"4":{"start":{"line":9,"column":4},"end":{"line":9,"column":24}},"5":{"start":{"line":10,"column":4},"end":{"line":10,"column":17}},"6":{"start":{"line":13,"column":2},"end":{"line":13,"column":15}},"7":{"start":{"line":2,"column":0},"end":{"line":2,"column":16}},"8":{"start":{"line":30,"column":2},"end":{"line":32,"column":null}},"9":{"start":{"line":31,"column":4},"end":{"line":31,"column":49}},"10":{"start":{"line":34,"column":2},"end":{"line":37,"column":5}},"11":{"start":{"line":36,"column":5},"end":{"line":36,"column":44}},"12":{"start":{"line":39,"column":2},"end":{"line":39,"column":47}},"13":{"start":{"line":26,"column":0},"end":{"line":26,"column":16}},"14":{"start":{"line":44,"column":10},"end":{"line":44,"column":11}},"15":{"start":{"line":46,"column":2},"end":{"line":46,"column":68}},"16":{"start":{"line":46,"column":37},"end":{"line":46,"column":66}},"17":{"start":{"line":42,"column":0},"end":{"line":42,"column":16}}},"fnMap":{"0":{"name":"shuffle","decl":{"start":{"line":2,"column":16},"end":{"line":2,"column":23}},"loc":{"start":{"line":2,"column":45},"end":{"line":14,"column":1}}},"1":{"name":"addMethods","decl":{"start":{"line":26,"column":16},"end":{"line":26,"column":26}},"loc":{"start":{"line":28,"column":20},"end":{"line":40,"column":1}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":34,"column":31},"end":{"line":34,"column":34}},"loc":{"start":{"line":34,"column":37},"end":{"line":37,"column":3}}},"3":{"name":"encode","decl":{"start":{"line":42,"column":16},"end":{"line":42,"column":22}},"loc":{"start":{"line":42,"column":62},"end":{"line":47,"column":1}}},"4":{"name":"(anonymous_4)","decl":{"start":{"line":46,"column":31},"end":{"line":46,"column":34}},"loc":{"start":{"line":46,"column":37},"end":{"line":46,"column":66}}}},"branchMap":{"0":{"loc":{"start":{"line":30,"column":2},"end":{"line":32,"column":null}},"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":32,"column":null}}]}},"s":{"0":110,"1":110,"2":220,"3":220,"4":220,"5":220,"6":110,"7":36,"8":112,"9":0,"10":112,"11":4552,"12":112,"13":36,"14":438,"15":438,"16":864,"17":36},"f":{"0":110,"1":112,"2":4552,"3":438,"4":864},"b":{"0":[0]}},"/home/flakie/package/packages/client-common/src/version.ts":{"path":"/home/flakie/package/packages/client-common/src/version.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":32}}},"fnMap":{},"branchMap":{},"s":{"0":36},"f":{},"b":{}},"/home/flakie/package/packages/client-common/src/methods/index.ts":{"path":"/home/flakie/package/packages/client-common/src/methods/index.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":31}}},"fnMap":{},"branchMap":{},"s":{"0":36},"f":{},"b":{}},"/home/flakie/package/packages/client-common/src/methods/client/index.ts":{"path":"/home/flakie/package/packages/client-common/src/methods/client/index.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}}},"fnMap":{},"branchMap":{},"s":{"0":36},"f":{},"b":{}},"/home/flakie/package/packages/client-common/src/methods/client/destroy.ts":{"path":"/home/flakie/package/packages/client-common/src/methods/client/destroy.ts","statementMap":{"0":{"start":{"line":4,"column":13},"end":{"line":8,"column":2}},"1":{"start":{"line":5,"column":2},"end":{"line":7,"column":4}},"2":{"start":{"line":6,"column":4},"end":{"line":6,"column":78}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":23},"end":{"line":4,"column":24}},"loc":{"start":{"line":4,"column":71},"end":{"line":8,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":37}},"loc":{"start":{"line":5,"column":39},"end":{"line":7,"column":3}}}},"branchMap":{},"s":{"0":36,"1":0,"2":0},"f":{"0":0,"1":0},"b":{}},"/home/flakie/package/packages/client-common/src/types/index.ts":{"path":"/home/flakie/package/packages/client-common/src/types/index.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":23}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":43}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":23}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":34}}},"fnMap":{},"branchMap":{},"s":{"0":36,"1":36,"2":36,"3":36,"4":36,"5":36},"f":{},"b":{}},"/home/flakie/package/packages/client-common/src/types/AuthModeType.ts":{"path":"/home/flakie/package/packages/client-common/src/types/AuthModeType.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":11,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":36},"f":{},"b":{}},"/home/flakie/package/packages/transporter/src/stackTrace.ts":{"path":"/home/flakie/package/packages/transporter/src/stackTrace.ts","statementMap":{"0":{"start":{"line":6,"column":2},"end":{"line":6,"column":80}},"1":{"start":{"line":6,"column":38},"end":{"line":6,"column":78}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":16}},"3":{"start":{"line":10,"column":60},"end":{"line":14,"column":8}},"4":{"start":{"line":16,"column":2},"end":{"line":25,"column":4}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":16}}},"fnMap":{"0":{"name":"stackTraceWithoutCredentials","decl":{"start":{"line":3,"column":16},"end":{"line":3,"column":44}},"loc":{"start":{"line":4,"column":35},"end":{"line":7,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":24},"end":{"line":6,"column":34}},"loc":{"start":{"line":6,"column":38},"end":{"line":6,"column":78}}},"2":{"name":"stackFrameWithoutCredentials","decl":{"start":{"line":9,"column":16},"end":{"line":9,"column":44}},"loc":{"start":{"line":9,"column":67},"end":{"line":26,"column":1}}}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":60},"end":{"line":14,"column":8}},"type":"cond-expr","locations":[{"start":{"line":13,"column":6},"end":{"line":13,"column":38}},{"start":{"line":14,"column":6},"end":{"line":14,"column":8}}]}},"s":{"0":112,"1":140,"2":27,"3":204,"4":204,"5":27},"f":{"0":112,"1":140,"2":204},"b":{"0":[204,0]}},"/home/flakie/package/packages/transporter/src/errors/index.ts":{"path":"/home/flakie/package/packages/transporter/src/errors/index.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":33}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":45}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}}},"fnMap":{},"branchMap":{},"s":{"0":27,"1":27,"2":27},"f":{},"b":{}},"/home/flakie/package/packages/transporter/src/errors/createApiError.ts":{"path":"/home/flakie/package/packages/transporter/src/errors/createApiError.ts","statementMap":{"0":{"start":{"line":8,"column":2},"end":{"line":13,"column":4}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":16}}},"fnMap":{"0":{"name":"createApiError","decl":{"start":{"line":3,"column":16},"end":{"line":3,"column":30}},"loc":{"start":{"line":6,"column":46},"end":{"line":14,"column":1}}}},"branchMap":{},"s":{"0":88,"1":27},"f":{"0":88},"b":{}},"/home/flakie/package/packages/transporter/src/errors/createDeserializationError.ts":{"path":"/home/flakie/package/packages/transporter/src/errors/createDeserializationError.ts","statementMap":{"0":{"start":{"line":9,"column":2},"end":{"line":13,"column":4}},"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":16}}},"fnMap":{"0":{"name":"createDeserializationError","decl":{"start":{"line":5,"column":16},"end":{"line":5,"column":42}},"loc":{"start":{"line":7,"column":20},"end":{"line":14,"column":1}}}},"branchMap":{},"s":{"0":2,"1":27},"f":{"0":2},"b":{}},"/home/flakie/package/packages/transporter/src/errors/createRetryError.ts":{"path":"/home/flakie/package/packages/transporter/src/errors/createRetryError.ts","statementMap":{"0":{"start":{"line":4,"column":2},"end":{"line":9,"column":4}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":16}}},"fnMap":{"0":{"name":"createRetryError","decl":{"start":{"line":3,"column":16},"end":{"line":3,"column":32}},"loc":{"start":{"line":3,"column":77},"end":{"line":10,"column":1}}}},"branchMap":{},"s":{"0":24,"1":27},"f":{"0":24},"b":{}},"/home/flakie/package/packages/transporter/src/__tests__/fixtures.ts":{"path":"/home/flakie/package/packages/transporter/src/__tests__/fixtures.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":56}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":63}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":48}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":null}},"4":{"start":{"line":12,"column":0},"end":{"line":12,"column":43}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":70}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":61}},"7":{"start":{"line":17,"column":2},"end":{"line":28,"column":4}},"8":{"start":{"line":20,"column":6},"end":{"line":26,"column":9}},"9":{"start":{"line":21,"column":8},"end":{"line":25,"column":11}},"10":{"start":{"line":16,"column":0},"end":{"line":16,"column":16}},"11":{"start":{"line":32,"column":2},"end":{"line":128,"column":4}},"12":{"start":{"line":34,"column":6},"end":{"line":34,"column":35}},"13":{"start":{"line":38,"column":6},"end":{"line":58,"column":21}},"14":{"start":{"line":62,"column":6},"end":{"line":67,"column":8}},"15":{"start":{"line":71,"column":6},"end":{"line":76,"column":9}},"16":{"start":{"line":80,"column":6},"end":{"line":85,"column":9}},"17":{"start":{"line":89,"column":6},"end":{"line":92,"column":9}},"18":{"start":{"line":96,"column":56},"end":{"line":101,"column":8}},"19":{"start":{"line":103,"column":6},"end":{"line":117,"column":null}},"20":{"start":{"line":104,"column":26},"end":{"line":107,"column":null}},"21":{"start":{"line":110,"column":42},"end":{"line":110,"column":67}},"22":{"start":{"line":113,"column":8},"end":{"line":116,"column":10}},"23":{"start":{"line":119,"column":6},"end":{"line":126,"column":8}},"24":{"start":{"line":31,"column":0},"end":{"line":31,"column":16}}},"fnMap":{"0":{"name":"createFakeRequester","decl":{"start":{"line":16,"column":16},"end":{"line":16,"column":35}},"loc":{"start":{"line":16,"column":35},"end":{"line":29,"column":1}}},"1":{"name":"(anonymous_2)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":8}},"loc":{"start":{"line":19,"column":34},"end":{"line":27,"column":5}}},"2":{"name":"(anonymous_3)","decl":{"start":{"line":20,"column":25},"end":{"line":20,"column":26}},"loc":{"start":{"line":20,"column":43},"end":{"line":26,"column":7}}},"3":{"name":"createFixtures","decl":{"start":{"line":31,"column":16},"end":{"line":31,"column":30}},"loc":{"start":{"line":31,"column":30},"end":{"line":129,"column":1}}},"4":{"name":"(anonymous_5)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":13}},"loc":{"start":{"line":33,"column":13},"end":{"line":35,"column":5}}},"5":{"name":"(anonymous_6)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":15}},"loc":{"start":{"line":37,"column":55},"end":{"line":59,"column":5}}},"6":{"name":"(anonymous_7)","decl":{"start":{"line":61,"column":4},"end":{"line":61,"column":22}},"loc":{"start":{"line":61,"column":22},"end":{"line":68,"column":5}}},"7":{"name":"(anonymous_8)","decl":{"start":{"line":70,"column":4},"end":{"line":70,"column":15}},"loc":{"start":{"line":70,"column":33},"end":{"line":77,"column":5}}},"8":{"name":"(anonymous_9)","decl":{"start":{"line":79,"column":4},"end":{"line":79,"column":16}},"loc":{"start":{"line":79,"column":34},"end":{"line":86,"column":5}}},"9":{"name":"(anonymous_10)","decl":{"start":{"line":88,"column":4},"end":{"line":88,"column":23}},"loc":{"start":{"line":88,"column":41},"end":{"line":93,"column":5}}},"10":{"name":"(anonymous_11)","decl":{"start":{"line":95,"column":4},"end":{"line":95,"column":11}},"loc":{"start":{"line":95,"column":29},"end":{"line":127,"column":5}}}},"branchMap":{"0":{"loc":{"start":{"line":37,"column":38},"end":{"line":37,"column":55}},"type":"default-arg","locations":[{"start":{"line":37,"column":53},"end":{"line":37,"column":55}}]},"1":{"loc":{"start":{"line":70,"column":16},"end":{"line":70,"column":33}},"type":"default-arg","locations":[{"start":{"line":70,"column":31},"end":{"line":70,"column":33}}]},"2":{"loc":{"start":{"line":79,"column":17},"end":{"line":79,"column":34}},"type":"default-arg","locations":[{"start":{"line":79,"column":32},"end":{"line":79,"column":34}}]},"3":{"loc":{"start":{"line":88,"column":24},"end":{"line":88,"column":41}},"type":"default-arg","locations":[{"start":{"line":88,"column":39},"end":{"line":88,"column":41}}]},"4":{"loc":{"start":{"line":95,"column":12},"end":{"line":95,"column":29}},"type":"default-arg","locations":[{"start":{"line":95,"column":27},"end":{"line":95,"column":29}}]},"5":{"loc":{"start":{"line":103,"column":6},"end":{"line":117,"column":null}},"type":"if","locations":[{"start":{"line":103,"column":6},"end":{"line":117,"column":null}}]},"6":{"loc":{"start":{"line":114,"column":22},"end":{"line":114,"column":58}},"type":"cond-expr","locations":[{"start":{"line":114,"column":50},"end":{"line":114,"column":53}},{"start":{"line":114,"column":56},"end":{"line":114,"column":58}}]},"7":{"loc":{"start":{"line":115,"column":35},"end":{"line":115,"column":71}},"type":"cond-expr","locations":[{"start":{"line":115,"column":63},"end":{"line":115,"column":66}},{"start":{"line":115,"column":69},"end":{"line":115,"column":71}}]}},"s":{"0":22,"1":22,"2":22,"3":22,"4":22,"5":22,"6":22,"7":108,"8":0,"9":0,"10":22,"11":202,"12":0,"13":108,"14":24,"15":44,"16":24,"17":2,"18":70,"19":70,"20":70,"21":70,"22":70,"23":70,"24":22},"f":{"0":108,"1":0,"2":0,"3":202,"4":0,"5":108,"6":24,"7":44,"8":24,"9":2,"10":70},"b":{"0":[72],"1":[14],"2":[16],"3":[0],"4":[0],"5":[70],"6":[6,64],"7":[6,64]}},"/home/flakie/package/packages/cache-common/src/index.ts":{"path":"/home/flakie/package/packages/cache-common/src/index.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":42}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":30}}},"fnMap":{},"branchMap":{},"s":{"0":27,"1":27,"2":27},"f":{},"b":{}},"/home/flakie/package/packages/cache-common/src/createFallbackableCache.ts":{"path":"/home/flakie/package/packages/cache-common/src/createFallbackableCache.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":56}},"1":{"start":{"line":6,"column":17},"end":{"line":6,"column":36}},"2":{"start":{"line":7,"column":18},"end":{"line":7,"column":32}},"3":{"start":{"line":9,"column":2},"end":{"line":11,"column":null}},"4":{"start":{"line":10,"column":4},"end":{"line":10,"column":29}},"5":{"start":{"line":13,"column":2},"end":{"line":43,"column":4}},"6":{"start":{"line":18,"column":20},"end":{"line":18,"column":37}},"7":{"start":{"line":21,"column":6},"end":{"line":23,"column":9}},"8":{"start":{"line":22,"column":8},"end":{"line":22,"column":82}},"9":{"start":{"line":27,"column":6},"end":{"line":29,"column":9}},"10":{"start":{"line":28,"column":8},"end":{"line":28,"column":67}},"11":{"start":{"line":33,"column":6},"end":{"line":35,"column":9}},"12":{"start":{"line":34,"column":8},"end":{"line":34,"column":63}},"13":{"start":{"line":39,"column":6},"end":{"line":41,"column":9}},"14":{"start":{"line":40,"column":8},"end":{"line":40,"column":59}},"15":{"start":{"line":5,"column":0},"end":{"line":5,"column":16}}},"fnMap":{"0":{"name":"createFallbackableCache","decl":{"start":{"line":5,"column":16},"end":{"line":5,"column":39}},"loc":{"start":{"line":5,"column":73},"end":{"line":44,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":7}},"loc":{"start":{"line":19,"column":7},"end":{"line":24,"column":5}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":14},"end":{"line":18,"column":17}},"loc":{"start":{"line":18,"column":20},"end":{"line":18,"column":37}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":21,"column":58},"end":{"line":21,"column":61}},"loc":{"start":{"line":21,"column":63},"end":{"line":23,"column":7}}},"4":{"name":"(anonymous_4)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":7}},"loc":{"start":{"line":26,"column":51},"end":{"line":30,"column":5}}},"5":{"name":"(anonymous_5)","decl":{"start":{"line":27,"column":43},"end":{"line":27,"column":46}},"loc":{"start":{"line":27,"column":48},"end":{"line":29,"column":7}}},"6":{"name":"(anonymous_6)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":10}},"loc":{"start":{"line":32,"column":31},"end":{"line":36,"column":5}}},"7":{"name":"(anonymous_7)","decl":{"start":{"line":33,"column":39},"end":{"line":33,"column":42}},"loc":{"start":{"line":33,"column":44},"end":{"line":35,"column":7}}},"8":{"name":"(anonymous_8)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":9}},"loc":{"start":{"line":38,"column":9},"end":{"line":42,"column":5}}},"9":{"name":"(anonymous_9)","decl":{"start":{"line":39,"column":35},"end":{"line":39,"column":38}},"loc":{"start":{"line":39,"column":40},"end":{"line":41,"column":7}}}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":2},"end":{"line":11,"column":null}},"type":"if","locations":[{"start":{"line":9,"column":2},"end":{"line":11,"column":null}}]},"1":{"loc":{"start":{"line":17,"column":6},"end":{"line":19,"column":null}},"type":"default-arg","locations":[{"start":{"line":17,"column":36},"end":{"line":19,"column":null}}]}},"s":{"0":27,"1":146,"2":146,"3":146,"4":6,"5":140,"6":6,"7":22,"8":12,"9":16,"10":8,"11":0,"12":0,"13":6,"14":4,"15":27},"f":{"0":146,"1":22,"2":6,"3":12,"4":16,"5":8,"6":0,"7":0,"8":6,"9":4},"b":{"0":[6],"1":[12]}},"/home/flakie/package/packages/cache-common/src/createNullCache.ts":{"path":"/home/flakie/package/packages/cache-common/src/createNullCache.ts","statementMap":{"0":{"start":{"line":4,"column":2},"end":{"line":30,"column":4}},"1":{"start":{"line":9,"column":20},"end":{"line":9,"column":37}},"2":{"start":{"line":12,"column":20},"end":{"line":12,"column":34}},"3":{"start":{"line":14,"column":6},"end":{"line":16,"column":36}},"4":{"start":{"line":15,"column":24},"end":{"line":15,"column":66}},"5":{"start":{"line":16,"column":28},"end":{"line":16,"column":34}},"6":{"start":{"line":20,"column":6},"end":{"line":20,"column":36}},"7":{"start":{"line":24,"column":6},"end":{"line":24,"column":31}},"8":{"start":{"line":28,"column":6},"end":{"line":28,"column":31}},"9":{"start":{"line":3,"column":0},"end":{"line":3,"column":16}}},"fnMap":{"0":{"name":"createNullCache","decl":{"start":{"line":3,"column":16},"end":{"line":3,"column":31}},"loc":{"start":{"line":3,"column":31},"end":{"line":31,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":7}},"loc":{"start":{"line":10,"column":7},"end":{"line":17,"column":5}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":14},"end":{"line":9,"column":17}},"loc":{"start":{"line":9,"column":20},"end":{"line":9,"column":37}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":15,"column":14},"end":{"line":15,"column":20}},"loc":{"start":{"line":15,"column":24},"end":{"line":15,"column":66}}},"4":{"name":"(anonymous_4)","decl":{"start":{"line":16,"column":14},"end":{"line":16,"column":15}},"loc":{"start":{"line":16,"column":28},"end":{"line":16,"column":34}}},"5":{"name":"(anonymous_5)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":7}},"loc":{"start":{"line":19,"column":52},"end":{"line":21,"column":5}}},"6":{"name":"(anonymous_6)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":10}},"loc":{"start":{"line":23,"column":32},"end":{"line":25,"column":5}}},"7":{"name":"(anonymous_7)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":9}},"loc":{"start":{"line":27,"column":9},"end":{"line":29,"column":5}}}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":6},"end":{"line":10,"column":null}},"type":"default-arg","locations":[{"start":{"line":8,"column":36},"end":{"line":10,"column":null}}]}},"s":{"0":240,"1":110,"2":366,"3":366,"4":246,"5":246,"6":304,"7":158,"8":2,"9":27},"f":{"0":240,"1":366,"2":110,"3":246,"4":246,"5":304,"6":158,"7":2},"b":{"0":[170]}},"/home/flakie/package/packages/cache-common/src/types/index.ts":{"path":"/home/flakie/package/packages/cache-common/src/types/index.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":24}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":43}}},"fnMap":{},"branchMap":{},"s":{"0":27,"1":27,"2":27},"f":{},"b":{}},"/home/flakie/package/packages/cache-in-memory/src/index.ts":{"path":"/home/flakie/package/packages/cache-in-memory/src/index.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":38}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}}},"fnMap":{},"branchMap":{},"s":{"0":27,"1":27},"f":{},"b":{}},"/home/flakie/package/packages/cache-in-memory/src/createInMemoryCache.ts":{"path":"/home/flakie/package/packages/cache-in-memory/src/createInMemoryCache.ts","statementMap":{"0":{"start":{"line":7,"column":35},"end":{"line":7,"column":37}},"1":{"start":{"line":9,"column":2},"end":{"line":50,"column":4}},"2":{"start":{"line":14,"column":20},"end":{"line":14,"column":37}},"3":{"start":{"line":17,"column":26},"end":{"line":17,"column":45}},"4":{"start":{"line":19,"column":6},"end":{"line":23,"column":null}},"5":{"start":{"line":20,"column":8},"end":{"line":22,"column":10}},"6":{"start":{"line":25,"column":22},"end":{"line":25,"column":36}},"7":{"start":{"line":26,"column":19},"end":{"line":26,"column":71}},"8":{"start":{"line":26,"column":53},"end":{"line":26,"column":70}},"9":{"start":{"line":28,"column":6},"end":{"line":28,"column":78}},"10":{"start":{"line":28,"column":45},"end":{"line":28,"column":56}},"11":{"start":{"line":28,"column":69},"end":{"line":28,"column":76}},"12":{"start":{"line":33,"column":6},"end":{"line":33,"column":88}},"13":{"start":{"line":35,"column":6},"end":{"line":35,"column":36}},"14":{"start":{"line":40,"column":6},"end":{"line":40,"column":40}},"15":{"start":{"line":42,"column":6},"end":{"line":42,"column":31}},"16":{"start":{"line":46,"column":6},"end":{"line":46,"column":17}},"17":{"start":{"line":48,"column":6},"end":{"line":48,"column":31}},"18":{"start":{"line":5,"column":0},"end":{"line":5,"column":16}}},"fnMap":{"0":{"name":"createInMemoryCache","decl":{"start":{"line":5,"column":16},"end":{"line":5,"column":35}},"loc":{"start":{"line":5,"column":90},"end":{"line":51,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":7}},"loc":{"start":{"line":15,"column":7},"end":{"line":29,"column":5}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":14},"end":{"line":14,"column":17}},"loc":{"start":{"line":14,"column":20},"end":{"line":14,"column":37}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":26,"column":47},"end":{"line":26,"column":50}},"loc":{"start":{"line":26,"column":53},"end":{"line":26,"column":70}}},"4":{"name":"(anonymous_4)","decl":{"start":{"line":28,"column":26},"end":{"line":28,"column":27}},"loc":{"start":{"line":28,"column":45},"end":{"line":28,"column":56}}},"5":{"name":"(anonymous_5)","decl":{"start":{"line":28,"column":63},"end":{"line":28,"column":66}},"loc":{"start":{"line":28,"column":69},"end":{"line":28,"column":76}}},"6":{"name":"(anonymous_6)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":7}},"loc":{"start":{"line":31,"column":51},"end":{"line":36,"column":5}}},"7":{"name":"(anonymous_7)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":10}},"loc":{"start":{"line":38,"column":31},"end":{"line":43,"column":5}}},"8":{"name":"(anonymous_8)","decl":{"start":{"line":45,"column":4},"end":{"line":45,"column":9}},"loc":{"start":{"line":45,"column":9},"end":{"line":49,"column":5}}}},"branchMap":{"0":{"loc":{"start":{"line":5,"column":36},"end":{"line":5,"column":90}},"type":"default-arg","locations":[{"start":{"line":5,"column":68},"end":{"line":5,"column":90}}]},"1":{"loc":{"start":{"line":13,"column":6},"end":{"line":15,"column":null}},"type":"default-arg","locations":[{"start":{"line":13,"column":36},"end":{"line":15,"column":null}}]},"2":{"loc":{"start":{"line":19,"column":6},"end":{"line":23,"column":null}},"type":"if","locations":[{"start":{"line":19,"column":6},"end":{"line":23,"column":null}}]},"3":{"loc":{"start":{"line":21,"column":10},"end":{"line":21,"column":84}},"type":"cond-expr","locations":[{"start":{"line":21,"column":33},"end":{"line":21,"column":63}},{"start":{"line":21,"column":66},"end":{"line":21,"column":84}}]},"4":{"loc":{"start":{"line":26,"column":19},"end":{"line":26,"column":71}},"type":"binary-expr","locations":[{"start":{"line":26,"column":20},"end":{"line":26,"column":26}},{"start":{"line":26,"column":30},"end":{"line":26,"column":41}},{"start":{"line":26,"column":47},"end":{"line":26,"column":70}}]},"5":{"loc":{"start":{"line":33,"column":35},"end":{"line":33,"column":87}},"type":"cond-expr","locations":[{"start":{"line":33,"column":58},"end":{"line":33,"column":79}},{"start":{"line":33,"column":82},"end":{"line":33,"column":87}}]}},"s":{"0":471,"1":471,"2":650,"3":836,"4":836,"5":122,"6":714,"7":714,"8":0,"9":714,"10":674,"11":674,"12":154,"13":154,"14":50,"15":50,"16":6,"17":6,"18":27},"f":{"0":471,"1":836,"2":650,"3":0,"4":674,"5":674,"6":154,"7":50,"8":6},"b":{"0":[361],"1":[762],"2":[122],"3":[122,0],"4":[714,714,0],"5":[154,0]}},"/home/flakie/package/packages/cache-in-memory/src/types/index.ts":{"path":"/home/flakie/package/packages/cache-in-memory/src/types/index.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":39}}},"fnMap":{},"branchMap":{},"s":{"0":27},"f":{},"b":{}},"/home/flakie/package/packages/algoliasearch/src/builds/browser.ts":{"path":"/home/flakie/package/packages/algoliasearch/src/builds/browser.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":86}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":64}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":63}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":null}},"4":{"start":{"line":20,"column":0},"end":{"line":20,"column":66}},"5":{"start":{"line":21,"column":0},"end":{"line":21,"column":null}},"6":{"start":{"line":30,"column":0},"end":{"line":30,"column":null}},"7":{"start":{"line":191,"column":0},"end":{"line":191,"column":54}},"8":{"start":{"line":192,"column":0},"end":{"line":192,"column":62}},"9":{"start":{"line":193,"column":0},"end":{"line":193,"column":75}},"10":{"start":{"line":194,"column":0},"end":{"line":194,"column":80}},"11":{"start":{"line":203,"column":24},"end":{"line":222,"column":4}},"12":{"start":{"line":223,"column":30},"end":{"line":223,"column":62}},"13":{"start":{"line":224,"column":30},"end":{"line":235,"column":3}},"14":{"start":{"line":224,"column":36},"end":{"line":235,"column":3}},"15":{"start":{"line":227,"column":4},"end":{"line":234,"column":7}},"16":{"start":{"line":237,"column":2},"end":{"line":347,"column":5}},"17":{"start":{"line":278,"column":25},"end":{"line":322,"column":7}},"18":{"start":{"line":279,"column":8},"end":{"line":321,"column":11}},"19":{"start":{"line":323,"column":27},"end":{"line":335,"column":7}},"20":{"start":{"line":324,"column":8},"end":{"line":334,"column":11}},"21":{"start":{"line":337,"column":32},"end":{"line":345,"column":7}},"22":{"start":{"line":340,"column":8},"end":{"line":342,"column":10}},"23":{"start":{"line":344,"column":8},"end":{"line":344,"column":52}},"24":{"start":{"line":198,"column":0},"end":{"line":198,"column":24}},"25":{"start":{"line":351,"column":0},"end":{"line":351,"column":32}},"26":{"start":{"line":694,"column":0},"end":{"line":694,"column":25}}},"fnMap":{"0":{"name":"algoliasearch","decl":{"start":{"line":198,"column":24},"end":{"line":198,"column":37}},"loc":{"start":{"line":201,"column":32},"end":{"line":348,"column":1}}},"1":{"name":"(anonymous_2)","decl":{"start":{"line":224,"column":30},"end":{"line":224,"column":33}},"loc":{"start":{"line":224,"column":36},"end":{"line":235,"column":3}}},"2":{"name":"(anonymous_3)","decl":{"start":{"line":224,"column":36},"end":{"line":224,"column":null}},"loc":{"start":{"line":226,"column":29},"end":{"line":235,"column":3}}},"3":{"name":"(anonymous_4)","decl":{"start":{"line":278,"column":17},"end":{"line":278,"column":21}},"loc":{"start":{"line":278,"column":25},"end":{"line":322,"column":7}}},"4":{"name":"(anonymous_5)","decl":{"start":{"line":278,"column":25},"end":{"line":278,"column":26}},"loc":{"start":{"line":278,"column":60},"end":{"line":322,"column":7}}},"5":{"name":"(anonymous_6)","decl":{"start":{"line":323,"column":21},"end":{"line":323,"column":24}},"loc":{"start":{"line":323,"column":27},"end":{"line":335,"column":7}}},"6":{"name":"(anonymous_7)","decl":{"start":{"line":323,"column":27},"end":{"line":323,"column":28}},"loc":{"start":{"line":323,"column":85},"end":{"line":335,"column":7}}},"7":{"name":"(anonymous_8)","decl":{"start":{"line":337,"column":26},"end":{"line":337,"column":29}},"loc":{"start":{"line":337,"column":32},"end":{"line":345,"column":7}}},"8":{"name":"(anonymous_9)","decl":{"start":{"line":337,"column":32},"end":{"line":337,"column":null}},"loc":{"start":{"line":339,"column":33},"end":{"line":345,"column":7}}}},"branchMap":{},"s":{"0":22,"1":22,"2":22,"3":22,"4":22,"5":22,"6":22,"7":22,"8":22,"9":22,"10":22,"11":108,"12":108,"13":108,"14":108,"15":0,"16":108,"17":108,"18":0,"19":108,"20":0,"21":108,"22":0,"23":0,"24":22,"25":22,"26":22},"f":{"0":108,"1":108,"2":0,"3":108,"4":0,"5":108,"6":0,"7":108,"8":0},"b":{}},"/home/flakie/package/packages/cache-browser-local-storage/src/index.ts":{"path":"/home/flakie/package/packages/cache-browser-local-storage/src/index.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":49}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}}},"fnMap":{},"branchMap":{},"s":{"0":26,"1":26},"f":{},"b":{}},"/home/flakie/package/packages/cache-browser-local-storage/src/createBrowserLocalStorageCache.ts":{"path":"/home/flakie/package/packages/cache-browser-local-storage/src/createBrowserLocalStorageCache.ts","statementMap":{"0":{"start":{"line":6,"column":23},"end":{"line":6,"column":63}},"1":{"start":{"line":10,"column":21},"end":{"line":16,"column":3}},"2":{"start":{"line":11,"column":4},"end":{"line":13,"column":null}},"3":{"start":{"line":12,"column":6},"end":{"line":12,"column":60}},"4":{"start":{"line":15,"column":4},"end":{"line":15,"column":19}},"5":{"start":{"line":18,"column":23},"end":{"line":20,"column":3}},"6":{"start":{"line":19,"column":4},"end":{"line":19,"column":66}},"7":{"start":{"line":22,"column":2},"end":{"line":72,"column":4}},"8":{"start":{"line":27,"column":20},"end":{"line":27,"column":37}},"9":{"start":{"line":30,"column":6},"end":{"line":40,"column":34}},"10":{"start":{"line":32,"column":30},"end":{"line":32,"column":49}},"11":{"start":{"line":33,"column":24},"end":{"line":33,"column":59}},"12":{"start":{"line":35,"column":10},"end":{"line":35,"column":77}},"13":{"start":{"line":38,"column":10},"end":{"line":38,"column":68}},"14":{"start":{"line":40,"column":27},"end":{"line":40,"column":32}},"15":{"start":{"line":44,"column":6},"end":{"line":53,"column":9}},"16":{"start":{"line":45,"column":26},"end":{"line":45,"column":40}},"17":{"start":{"line":48,"column":8},"end":{"line":48,"column":47}},"18":{"start":{"line":50,"column":8},"end":{"line":50,"column":70}},"19":{"start":{"line":52,"column":8},"end":{"line":52,"column":21}},"20":{"start":{"line":57,"column":6},"end":{"line":64,"column":9}},"21":{"start":{"line":58,"column":26},"end":{"line":58,"column":40}},"22":{"start":{"line":61,"column":8},"end":{"line":61,"column":46}},"23":{"start":{"line":63,"column":8},"end":{"line":63,"column":70}},"24":{"start":{"line":68,"column":6},"end":{"line":70,"column":9}},"25":{"start":{"line":69,"column":8},"end":{"line":69,"column":46}},"26":{"start":{"line":5,"column":0},"end":{"line":5,"column":16}}},"fnMap":{"0":{"name":"createBrowserLocalStorageCache","decl":{"start":{"line":5,"column":16},"end":{"line":5,"column":46}},"loc":{"start":{"line":5,"column":82},"end":{"line":73,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":21},"end":{"line":10,"column":24}},"loc":{"start":{"line":10,"column":26},"end":{"line":16,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":23},"end":{"line":18,"column":58}},"loc":{"start":{"line":18,"column":60},"end":{"line":20,"column":3}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":7}},"loc":{"start":{"line":28,"column":7},"end":{"line":41,"column":5}}},"4":{"name":"(anonymous_4)","decl":{"start":{"line":27,"column":14},"end":{"line":27,"column":17}},"loc":{"start":{"line":27,"column":20},"end":{"line":27,"column":37}}},"5":{"name":"(anonymous_5)","decl":{"start":{"line":31,"column":14},"end":{"line":31,"column":17}},"loc":{"start":{"line":31,"column":19},"end":{"line":36,"column":9}}},"6":{"name":"(anonymous_6)","decl":{"start":{"line":37,"column":14},"end":{"line":37,"column":15}},"loc":{"start":{"line":37,"column":34},"end":{"line":39,"column":9}}},"7":{"name":"(anonymous_7)","decl":{"start":{"line":40,"column":14},"end":{"line":40,"column":15}},"loc":{"start":{"line":40,"column":27},"end":{"line":40,"column":32}}},"8":{"name":"(anonymous_8)","decl":{"start":{"line":43,"column":4},"end":{"line":43,"column":7}},"loc":{"start":{"line":43,"column":51},"end":{"line":54,"column":5}}},"9":{"name":"(anonymous_9)","decl":{"start":{"line":44,"column":36},"end":{"line":44,"column":39}},"loc":{"start":{"line":44,"column":41},"end":{"line":53,"column":7}}},"10":{"name":"(anonymous_10)","decl":{"start":{"line":56,"column":4},"end":{"line":56,"column":10}},"loc":{"start":{"line":56,"column":31},"end":{"line":65,"column":5}}},"11":{"name":"(anonymous_11)","decl":{"start":{"line":57,"column":36},"end":{"line":57,"column":39}},"loc":{"start":{"line":57,"column":41},"end":{"line":64,"column":7}}},"12":{"name":"(anonymous_12)","decl":{"start":{"line":67,"column":4},"end":{"line":67,"column":9}},"loc":{"start":{"line":67,"column":9},"end":{"line":71,"column":5}}},"13":{"name":"(anonymous_13)","decl":{"start":{"line":68,"column":36},"end":{"line":68,"column":39}},"loc":{"start":{"line":68,"column":41},"end":{"line":70,"column":7}}}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":4},"end":{"line":13,"column":null}},"type":"if","locations":[{"start":{"line":11,"column":4},"end":{"line":13,"column":null}}]},"1":{"loc":{"start":{"line":12,"column":16},"end":{"line":12,"column":59}},"type":"binary-expr","locations":[{"start":{"line":12,"column":16},"end":{"line":12,"column":36}},{"start":{"line":12,"column":40},"end":{"line":12,"column":59}}]},"2":{"loc":{"start":{"line":19,"column":22},"end":{"line":19,"column":64}},"type":"binary-expr","locations":[{"start":{"line":19,"column":22},"end":{"line":19,"column":56}},{"start":{"line":19,"column":60},"end":{"line":19,"column":64}}]},"3":{"loc":{"start":{"line":26,"column":6},"end":{"line":28,"column":null}},"type":"default-arg","locations":[{"start":{"line":26,"column":36},"end":{"line":28,"column":null}}]},"4":{"loc":{"start":{"line":35,"column":30},"end":{"line":35,"column":53}},"type":"binary-expr","locations":[{"start":{"line":35,"column":30},"end":{"line":35,"column":35}},{"start":{"line":35,"column":39},"end":{"line":35,"column":53}}]},"5":{"loc":{"start":{"line":38,"column":37},"end":{"line":38,"column":65}},"type":"binary-expr","locations":[{"start":{"line":38,"column":37},"end":{"line":38,"column":43}},{"start":{"line":38,"column":47},"end":{"line":38,"column":65}}]}},"s":{"0":128,"1":128,"2":36,"3":18,"4":35,"5":128,"6":32,"7":128,"8":0,"9":19,"10":19,"11":19,"12":0,"13":0,"14":0,"15":11,"16":11,"17":0,"18":0,"19":0,"20":2,"21":2,"22":0,"23":0,"24":4,"25":4,"26":26},"f":{"0":128,"1":36,"2":32,"3":19,"4":0,"5":19,"6":0,"7":0,"8":11,"9":11,"10":2,"11":2,"12":4,"13":4},"b":{"0":[18],"1":[18,8],"2":[32,0],"3":[3],"4":[0,0],"5":[0,0]}},"/home/flakie/package/packages/cache-browser-local-storage/src/types/index.ts":{"path":"/home/flakie/package/packages/cache-browser-local-storage/src/types/index.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":45}}},"fnMap":{},"branchMap":{},"s":{"0":26},"f":{},"b":{}},"/home/flakie/package/packages/client-analytics/src/index.ts":{"path":"/home/flakie/package/packages/client-analytics/src/index.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":40}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":30}}},"fnMap":{},"branchMap":{},"s":{"0":22,"1":22,"2":22},"f":{},"b":{}},"/home/flakie/package/packages/client-analytics/src/createAnalyticsClient.ts":{"path":"/home/flakie/package/packages/client-analytics/src/createAnalyticsClient.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":null}},"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":57}},"2":{"start":{"line":12,"column":13},"end":{"line":37,"column":2}},"3":{"start":{"line":16,"column":17},"end":{"line":16,"column":39}},"4":{"start":{"line":17,"column":15},"end":{"line":17,"column":80}},"5":{"start":{"line":19,"column":22},"end":{"line":32,"column":4}},"6":{"start":{"line":34,"column":16},"end":{"line":34,"column":29}},"7":{"start":{"line":36,"column":2},"end":{"line":36,"column":61}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":11}},"loc":{"start":{"line":15,"column":14},"end":{"line":37,"column":1}}}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":17},"end":{"line":16,"column":39}},"type":"binary-expr","locations":[{"start":{"line":16,"column":17},"end":{"line":16,"column":31}},{"start":{"line":16,"column":35},"end":{"line":16,"column":39}}]}},"s":{"0":22,"1":22,"2":22,"3":0,"4":0,"5":0,"6":0,"7":0},"f":{"0":0},"b":{"0":[0,0]}},"/home/flakie/package/packages/client-analytics/src/methods/index.ts":{"path":"/home/flakie/package/packages/client-analytics/src/methods/index.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":28}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":28}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":29}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":29}}},"fnMap":{},"branchMap":{},"s":{"0":22,"1":22,"2":22,"3":22,"4":22},"f":{},"b":{}},"/home/flakie/package/packages/client-analytics/src/methods/addABTest.ts":{"path":"/home/flakie/package/packages/client-analytics/src/methods/addABTest.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":55}},"1":{"start":{"line":6,"column":13},"end":{"line":20,"column":2}},"2":{"start":{"line":7,"column":2},"end":{"line":19,"column":4}},"3":{"start":{"line":11,"column":4},"end":{"line":18,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":25},"end":{"line":6,"column":26}},"loc":{"start":{"line":6,"column":51},"end":{"line":20,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":null}},"loc":{"start":{"line":10,"column":44},"end":{"line":19,"column":3}}}},"branchMap":{},"s":{"0":22,"1":22,"2":0,"3":0},"f":{"0":0,"1":0},"b":{}},"/home/flakie/package/packages/client-analytics/src/methods/deleteABTest.ts":{"path":"/home/flakie/package/packages/client-analytics/src/methods/deleteABTest.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":48}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":7,"column":13},"end":{"line":20,"column":2}},"3":{"start":{"line":8,"column":2},"end":{"line":19,"column":4}},"4":{"start":{"line":12,"column":4},"end":{"line":18,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":28},"end":{"line":7,"column":29}},"loc":{"start":{"line":7,"column":54},"end":{"line":20,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":null}},"loc":{"start":{"line":11,"column":47},"end":{"line":19,"column":3}}}},"branchMap":{},"s":{"0":22,"1":22,"2":22,"3":0,"4":0},"f":{"0":0,"1":0},"b":{}},"/home/flakie/package/packages/client-analytics/src/methods/getABTest.ts":{"path":"/home/flakie/package/packages/client-analytics/src/methods/getABTest.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":48}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":7,"column":13},"end":{"line":20,"column":2}},"3":{"start":{"line":8,"column":2},"end":{"line":19,"column":4}},"4":{"start":{"line":12,"column":4},"end":{"line":18,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":25},"end":{"line":7,"column":26}},"loc":{"start":{"line":7,"column":51},"end":{"line":20,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":null}},"loc":{"start":{"line":11,"column":44},"end":{"line":19,"column":3}}}},"branchMap":{},"s":{"0":22,"1":22,"2":22,"3":0,"4":0},"f":{"0":0,"1":0},"b":{}},"/home/flakie/package/packages/client-analytics/src/methods/getABTests.ts":{"path":"/home/flakie/package/packages/client-analytics/src/methods/getABTests.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":55}},"1":{"start":{"line":6,"column":13},"end":{"line":18,"column":2}},"2":{"start":{"line":7,"column":2},"end":{"line":17,"column":4}},"3":{"start":{"line":10,"column":4},"end":{"line":16,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":26},"end":{"line":6,"column":27}},"loc":{"start":{"line":6,"column":52},"end":{"line":18,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":null}},"loc":{"start":{"line":9,"column":45},"end":{"line":17,"column":3}}}},"branchMap":{},"s":{"0":22,"1":22,"2":0,"3":0},"f":{"0":0,"1":0},"b":{}},"/home/flakie/package/packages/client-analytics/src/methods/stopABTest.ts":{"path":"/home/flakie/package/packages/client-analytics/src/methods/stopABTest.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":48}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":7,"column":13},"end":{"line":20,"column":2}},"3":{"start":{"line":8,"column":2},"end":{"line":19,"column":4}},"4":{"start":{"line":12,"column":4},"end":{"line":18,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":26},"end":{"line":7,"column":27}},"loc":{"start":{"line":7,"column":52},"end":{"line":20,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":null}},"loc":{"start":{"line":11,"column":45},"end":{"line":19,"column":3}}}},"branchMap":{},"s":{"0":22,"1":22,"2":22,"3":0,"4":0},"f":{"0":0,"1":0},"b":{}},"/home/flakie/package/packages/client-analytics/src/types/index.ts":{"path":"/home/flakie/package/packages/client-analytics/src/types/index.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":25}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":36}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":34}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":41}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":39}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":36}},"6":{"start":{"line":11,"column":0},"end":{"line":11,"column":36}},"7":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}},"8":{"start":{"line":13,"column":0},"end":{"line":13,"column":37}},"9":{"start":{"line":14,"column":0},"end":{"line":14,"column":26}},"10":{"start":{"line":15,"column":0},"end":{"line":15,"column":34}}},"fnMap":{},"branchMap":{},"s":{"0":22,"1":22,"2":22,"3":22,"4":22,"5":22,"6":22,"7":22,"8":22,"9":22,"10":22},"f":{},"b":{}},"/home/flakie/package/packages/client-personalization/src/index.ts":{"path":"/home/flakie/package/packages/client-personalization/src/index.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":46}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":30}}},"fnMap":{},"branchMap":{},"s":{"0":22,"1":22,"2":22},"f":{},"b":{}},"/home/flakie/package/packages/client-personalization/src/createPersonalizationClient.ts":{"path":"/home/flakie/package/packages/client-personalization/src/createPersonalizationClient.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":null}},"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":57}},"2":{"start":{"line":12,"column":13},"end":{"line":35,"column":2}},"3":{"start":{"line":16,"column":17},"end":{"line":16,"column":39}},"4":{"start":{"line":17,"column":15},"end":{"line":17,"column":80}},"5":{"start":{"line":19,"column":22},"end":{"line":32,"column":4}},"6":{"start":{"line":34,"column":2},"end":{"line":34,"column":76}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":11}},"loc":{"start":{"line":15,"column":14},"end":{"line":35,"column":1}}}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":17},"end":{"line":16,"column":39}},"type":"binary-expr","locations":[{"start":{"line":16,"column":17},"end":{"line":16,"column":31}},{"start":{"line":16,"column":35},"end":{"line":16,"column":39}}]}},"s":{"0":22,"1":22,"2":22,"3":0,"4":0,"5":0,"6":0},"f":{"0":0},"b":{"0":[0,0]}},"/home/flakie/package/packages/client-personalization/src/methods/index.ts":{"path":"/home/flakie/package/packages/client-personalization/src/methods/index.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":45}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":45}}},"fnMap":{},"branchMap":{},"s":{"0":22,"1":22},"f":{},"b":{}},"/home/flakie/package/packages/client-personalization/src/methods/getPersonalizationStrategy.ts":{"path":"/home/flakie/package/packages/client-personalization/src/methods/getPersonalizationStrategy.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":55}},"1":{"start":{"line":6,"column":13},"end":{"line":18,"column":2}},"2":{"start":{"line":7,"column":2},"end":{"line":17,"column":4}},"3":{"start":{"line":10,"column":4},"end":{"line":16,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":42},"end":{"line":6,"column":43}},"loc":{"start":{"line":6,"column":74},"end":{"line":18,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":null}},"loc":{"start":{"line":9,"column":61},"end":{"line":17,"column":3}}}},"branchMap":{},"s":{"0":22,"1":22,"2":0,"3":0},"f":{"0":0,"1":0},"b":{}},"/home/flakie/package/packages/client-personalization/src/methods/setPersonalizationStrategy.ts":{"path":"/home/flakie/package/packages/client-personalization/src/methods/setPersonalizationStrategy.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":55}},"1":{"start":{"line":10,"column":13},"end":{"line":24,"column":2}},"2":{"start":{"line":11,"column":2},"end":{"line":23,"column":4}},"3":{"start":{"line":15,"column":4},"end":{"line":22,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":42},"end":{"line":10,"column":43}},"loc":{"start":{"line":10,"column":74},"end":{"line":24,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":9},"end":{"line":11,"column":null}},"loc":{"start":{"line":14,"column":61},"end":{"line":23,"column":3}}}},"branchMap":{},"s":{"0":22,"1":22,"2":0,"3":0},"f":{"0":0,"1":0},"b":{}},"/home/flakie/package/packages/client-personalization/src/types/index.ts":{"path":"/home/flakie/package/packages/client-personalization/src/types/index.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":53}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":40}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":47}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":42}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":53}}},"fnMap":{},"branchMap":{},"s":{"0":22,"1":22,"2":22,"3":22,"4":22},"f":{},"b":{}},"/home/flakie/package/packages/client-search/src/index.ts":{"path":"/home/flakie/package/packages/client-search/src/index.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":41}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":37}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":32}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":30}}},"fnMap":{},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":23,"4":23},"f":{},"b":{}},"/home/flakie/package/packages/client-search/src/createBrowsablePromise.ts":{"path":"/home/flakie/package/packages/client-search/src/createBrowsablePromise.ts","statementMap":{"0":{"start":{"line":9,"column":17},"end":{"line":43,"column":3}},"1":{"start":{"line":10,"column":4},"end":{"line":42,"column":7}},"2":{"start":{"line":15,"column":6},"end":{"line":17,"column":null}},"3":{"start":{"line":16,"column":8},"end":{"line":16,"column":37}},"4":{"start":{"line":24,"column":6},"end":{"line":26,"column":null}},"5":{"start":{"line":25,"column":8},"end":{"line":25,"column":25}},"6":{"start":{"line":33,"column":6},"end":{"line":37,"column":null}},"7":{"start":{"line":34,"column":8},"end":{"line":36,"column":11}},"8":{"start":{"line":39,"column":6},"end":{"line":41,"column":9}},"9":{"start":{"line":45,"column":2},"end":{"line":45,"column":20}},"10":{"start":{"line":3,"column":0},"end":{"line":3,"column":16}}},"fnMap":{"0":{"name":"createBrowsablePromise","decl":{"start":{"line":3,"column":16},"end":{"line":3,"column":38}},"loc":{"start":{"line":7,"column":28},"end":{"line":46,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":17},"end":{"line":9,"column":18}},"loc":{"start":{"line":9,"column":60},"end":{"line":43,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":10,"column":38},"end":{"line":10,"column":46}},"loc":{"start":{"line":10,"column":49},"end":{"line":42,"column":5}}}},"branchMap":{"0":{"loc":{"start":{"line":15,"column":6},"end":{"line":17,"column":null}},"type":"if","locations":[{"start":{"line":15,"column":6},"end":{"line":17,"column":null}}]},"1":{"loc":{"start":{"line":24,"column":6},"end":{"line":26,"column":null}},"type":"if","locations":[{"start":{"line":24,"column":6},"end":{"line":26,"column":null}}]},"2":{"loc":{"start":{"line":33,"column":6},"end":{"line":37,"column":null}},"type":"if","locations":[{"start":{"line":33,"column":6},"end":{"line":37,"column":null}}]},"3":{"loc":{"start":{"line":40,"column":15},"end":{"line":40,"column":29}},"type":"binary-expr","locations":[{"start":{"line":40,"column":15},"end":{"line":40,"column":24}},{"start":{"line":40,"column":28},"end":{"line":40,"column":29}}]}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":23},"f":{"0":0,"1":0,"2":0},"b":{"0":[0],"1":[0],"2":[0],"3":[0,0]}},"/home/flakie/package/packages/client-search/src/createSearchClient.ts":{"path":"/home/flakie/package/packages/client-search/src/createSearchClient.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":null}},"1":{"start":{"line":9,"column":0},"end":{"line":9,"column":80}},"2":{"start":{"line":13,"column":13},"end":{"line":64,"column":2}},"3":{"start":{"line":17,"column":16},"end":{"line":17,"column":29}},"4":{"start":{"line":19,"column":15},"end":{"line":22,"column":null}},"5":{"start":{"line":25,"column":22},"end":{"line":47,"column":4}},"6":{"start":{"line":49,"column":15},"end":{"line":61,"column":4}},"7":{"start":{"line":53,"column":6},"end":{"line":53,"column":54}},"8":{"start":{"line":56,"column":6},"end":{"line":59,"column":31}},"9":{"start":{"line":59,"column":20},"end":{"line":59,"column":29}},"10":{"start":{"line":63,"column":2},"end":{"line":63,"column":43}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":11}},"loc":{"start":{"line":16,"column":14},"end":{"line":64,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":52,"column":4},"end":{"line":52,"column":19}},"loc":{"start":{"line":52,"column":53},"end":{"line":54,"column":5}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":55,"column":4},"end":{"line":55,"column":14}},"loc":{"start":{"line":55,"column":14},"end":{"line":60,"column":5}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":59,"column":14},"end":{"line":59,"column":17}},"loc":{"start":{"line":59,"column":20},"end":{"line":59,"column":29}}}},"branchMap":{"0":{"loc":{"start":{"line":20,"column":4},"end":{"line":20,"column":78}},"type":"cond-expr","locations":[{"start":{"line":20,"column":37},"end":{"line":20,"column":53}},{"start":{"line":20,"column":56},"end":{"line":20,"column":78}}]}},"s":{"0":23,"1":23,"2":23,"3":110,"4":110,"5":110,"6":110,"7":0,"8":0,"9":0,"10":110},"f":{"0":110,"1":0,"2":0,"3":0},"b":{"0":[2,108]}},"/home/flakie/package/packages/client-search/src/errors/index.ts":{"path":"/home/flakie/package/packages/client-search/src/errors/index.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":45}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":44}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":48}}},"fnMap":{},"branchMap":{},"s":{"0":23,"1":23,"2":23},"f":{},"b":{}},"/home/flakie/package/packages/client-search/src/errors/createMissingObjectIDError.ts":{"path":"/home/flakie/package/packages/client-search/src/errors/createMissingObjectIDError.ts","statementMap":{"0":{"start":{"line":2,"column":2},"end":{"line":10,"column":4}},"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":16}}},"fnMap":{"0":{"name":"createMissingObjectIDError","decl":{"start":{"line":1,"column":16},"end":{"line":1,"column":42}},"loc":{"start":{"line":1,"column":42},"end":{"line":11,"column":1}}}},"branchMap":{},"s":{"0":0,"1":23},"f":{"0":0},"b":{}},"/home/flakie/package/packages/client-search/src/errors/createObjectNotFoundError.ts":{"path":"/home/flakie/package/packages/client-search/src/errors/createObjectNotFoundError.ts","statementMap":{"0":{"start":{"line":2,"column":2},"end":{"line":5,"column":4}},"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":16}}},"fnMap":{"0":{"name":"createObjectNotFoundError","decl":{"start":{"line":1,"column":16},"end":{"line":1,"column":41}},"loc":{"start":{"line":1,"column":41},"end":{"line":6,"column":1}}}},"branchMap":{},"s":{"0":0,"1":23},"f":{"0":0},"b":{}},"/home/flakie/package/packages/client-search/src/errors/createValidUntilNotFoundError.ts":{"path":"/home/flakie/package/packages/client-search/src/errors/createValidUntilNotFoundError.ts","statementMap":{"0":{"start":{"line":2,"column":2},"end":{"line":5,"column":4}},"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":16}}},"fnMap":{"0":{"name":"createValidUntilNotFoundError","decl":{"start":{"line":1,"column":16},"end":{"line":1,"column":45}},"loc":{"start":{"line":1,"column":45},"end":{"line":6,"column":1}}}},"branchMap":{},"s":{"0":0,"1":23},"f":{"0":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/index.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":31}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}}},"fnMap":{},"branchMap":{},"s":{"0":23,"1":23},"f":{},"b":{}},"/home/flakie/package/packages/client-search/src/methods/client/index.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/index.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":28}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":32}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":41}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":28}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":28}},"6":{"start":{"line":11,"column":0},"end":{"line":11,"column":31}},"7":{"start":{"line":12,"column":0},"end":{"line":12,"column":31}},"8":{"start":{"line":13,"column":0},"end":{"line":13,"column":32}},"9":{"start":{"line":14,"column":0},"end":{"line":14,"column":31}},"10":{"start":{"line":15,"column":0},"end":{"line":15,"column":42}},"11":{"start":{"line":16,"column":0},"end":{"line":16,"column":40}},"12":{"start":{"line":17,"column":0},"end":{"line":17,"column":28}},"13":{"start":{"line":18,"column":0},"end":{"line":18,"column":29}},"14":{"start":{"line":19,"column":0},"end":{"line":19,"column":40}},"15":{"start":{"line":20,"column":0},"end":{"line":20,"column":26}},"16":{"start":{"line":21,"column":0},"end":{"line":21,"column":52}},"17":{"start":{"line":22,"column":0},"end":{"line":22,"column":32}},"18":{"start":{"line":23,"column":0},"end":{"line":23,"column":28}},"19":{"start":{"line":24,"column":0},"end":{"line":24,"column":37}},"20":{"start":{"line":25,"column":0},"end":{"line":25,"column":28}},"21":{"start":{"line":26,"column":0},"end":{"line":26,"column":30}},"22":{"start":{"line":27,"column":0},"end":{"line":27,"column":31}},"23":{"start":{"line":28,"column":0},"end":{"line":28,"column":30}},"24":{"start":{"line":29,"column":0},"end":{"line":29,"column":30}},"25":{"start":{"line":30,"column":0},"end":{"line":30,"column":28}},"26":{"start":{"line":31,"column":0},"end":{"line":31,"column":32}},"27":{"start":{"line":32,"column":0},"end":{"line":32,"column":37}},"28":{"start":{"line":33,"column":0},"end":{"line":33,"column":34}},"29":{"start":{"line":34,"column":0},"end":{"line":34,"column":47}},"30":{"start":{"line":35,"column":0},"end":{"line":35,"column":31}},"31":{"start":{"line":36,"column":0},"end":{"line":36,"column":43}},"32":{"start":{"line":37,"column":0},"end":{"line":37,"column":32}},"33":{"start":{"line":38,"column":0},"end":{"line":38,"column":40}},"34":{"start":{"line":39,"column":0},"end":{"line":39,"column":42}},"35":{"start":{"line":40,"column":0},"end":{"line":40,"column":32}},"36":{"start":{"line":41,"column":0},"end":{"line":41,"column":40}},"37":{"start":{"line":42,"column":0},"end":{"line":42,"column":31}},"38":{"start":{"line":43,"column":0},"end":{"line":43,"column":30}}},"fnMap":{},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":23,"4":23,"5":23,"6":23,"7":23,"8":23,"9":23,"10":23,"11":23,"12":23,"13":23,"14":23,"15":23,"16":23,"17":23,"18":23,"19":23,"20":23,"21":23,"22":23,"23":23,"24":23,"25":23,"26":23,"27":23,"28":23,"29":23,"30":23,"31":23,"32":23,"33":23,"34":23,"35":23,"36":23,"37":23,"38":23},"f":{},"b":{}},"/home/flakie/package/packages/client-search/src/methods/client/addApiKey.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/addApiKey.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":null}},"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":55}},"2":{"start":{"line":10,"column":0},"end":{"line":10,"column":null}},"3":{"start":{"line":19,"column":13},"end":{"line":56,"column":2}},"4":{"start":{"line":20,"column":2},"end":{"line":55,"column":4}},"5":{"start":{"line":25,"column":44},"end":{"line":25,"column":64}},"6":{"start":{"line":27,"column":17},"end":{"line":30,"column":6}},"7":{"start":{"line":32,"column":42},"end":{"line":42,"column":5}},"8":{"start":{"line":33,"column":6},"end":{"line":41,"column":9}},"9":{"start":{"line":34,"column":8},"end":{"line":40,"column":11}},"10":{"start":{"line":35,"column":10},"end":{"line":37,"column":null}},"11":{"start":{"line":36,"column":12},"end":{"line":36,"column":27}},"12":{"start":{"line":39,"column":10},"end":{"line":39,"column":25}},"13":{"start":{"line":44,"column":4},"end":{"line":54,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":19,"column":25},"end":{"line":19,"column":26}},"loc":{"start":{"line":19,"column":48},"end":{"line":56,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":20,"column":9},"end":{"line":20,"column":null}},"loc":{"start":{"line":24,"column":52},"end":{"line":55,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":32,"column":42},"end":{"line":32,"column":43}},"loc":{"start":{"line":32,"column":75},"end":{"line":42,"column":5}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":33,"column":55},"end":{"line":33,"column":60}},"loc":{"start":{"line":33,"column":63},"end":{"line":41,"column":7}}},"4":{"name":"(anonymous_4)","decl":{"start":{"line":34,"column":71},"end":{"line":34,"column":72}},"loc":{"start":{"line":34,"column":94},"end":{"line":40,"column":9}}}},"branchMap":{"0":{"loc":{"start":{"line":25,"column":44},"end":{"line":25,"column":64}},"type":"binary-expr","locations":[{"start":{"line":25,"column":44},"end":{"line":25,"column":58}},{"start":{"line":25,"column":62},"end":{"line":25,"column":64}}]},"1":{"loc":{"start":{"line":29,"column":10},"end":{"line":29,"column":66}},"type":"cond-expr","locations":[{"start":{"line":29,"column":42},"end":{"line":29,"column":61}},{"start":{"line":29,"column":64},"end":{"line":29,"column":66}}]},"2":{"loc":{"start":{"line":35,"column":10},"end":{"line":37,"column":null}},"type":"if","locations":[{"start":{"line":35,"column":10},"end":{"line":37,"column":null}}]}},"s":{"0":23,"1":23,"2":23,"3":23,"4":108,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"f":{"0":108,"1":0,"2":0,"3":0,"4":0},"b":{"0":[0,0],"1":[0,0],"2":[0]}},"/home/flakie/package/packages/client-search/src/methods/client/assignUserID.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/assignUserID.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":55}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":82}},"2":{"start":{"line":6,"column":13},"end":{"line":26,"column":2}},"3":{"start":{"line":7,"column":2},"end":{"line":25,"column":4}},"4":{"start":{"line":12,"column":33},"end":{"line":12,"column":75}},"5":{"start":{"line":15,"column":4},"end":{"line":15,"column":71}},"6":{"start":{"line":17,"column":4},"end":{"line":24,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":28},"end":{"line":6,"column":29}},"loc":{"start":{"line":6,"column":51},"end":{"line":26,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":null}},"loc":{"start":{"line":11,"column":47},"end":{"line":25,"column":3}}}},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":108,"4":0,"5":0,"6":0},"f":{"0":108,"1":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/client/assignUserIDs.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/assignUserIDs.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":55}},"1":{"start":{"line":6,"column":13},"end":{"line":24,"column":2}},"2":{"start":{"line":7,"column":2},"end":{"line":23,"column":4}},"3":{"start":{"line":12,"column":4},"end":{"line":22,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":29},"end":{"line":6,"column":30}},"loc":{"start":{"line":6,"column":52},"end":{"line":24,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":null}},"loc":{"start":{"line":11,"column":48},"end":{"line":23,"column":3}}}},"branchMap":{},"s":{"0":23,"1":23,"2":108,"3":0},"f":{"0":108,"1":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/client/clearDictionaryEntries.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/clearDictionaryEntries.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":88}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":11,"column":0},"end":{"line":11,"column":32}},"3":{"start":{"line":13,"column":13},"end":{"line":33,"column":2}},"4":{"start":{"line":14,"column":2},"end":{"line":32,"column":4}},"5":{"start":{"line":18,"column":4},"end":{"line":31,"column":6}},"6":{"start":{"line":30,"column":40},"end":{"line":30,"column":94}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":38},"end":{"line":13,"column":39}},"loc":{"start":{"line":13,"column":61},"end":{"line":33,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":null}},"loc":{"start":{"line":17,"column":60},"end":{"line":32,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":30,"column":6},"end":{"line":30,"column":7}},"loc":{"start":{"line":30,"column":40},"end":{"line":30,"column":94}}}},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":23,"4":108,"5":0,"6":0},"f":{"0":108,"1":0,"2":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/client/copyIndex.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/copyIndex.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":94}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":100}},"3":{"start":{"line":7,"column":13},"end":{"line":34,"column":2}},"4":{"start":{"line":8,"column":2},"end":{"line":33,"column":4}},"5":{"start":{"line":13,"column":47},"end":{"line":17,"column":5}},"6":{"start":{"line":14,"column":6},"end":{"line":16,"column":55}},"7":{"start":{"line":19,"column":4},"end":{"line":32,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":25},"end":{"line":7,"column":26}},"loc":{"start":{"line":7,"column":48},"end":{"line":34,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":null}},"loc":{"start":{"line":12,"column":57},"end":{"line":33,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":47},"end":{"line":13,"column":48}},"loc":{"start":{"line":13,"column":80},"end":{"line":17,"column":5}}}},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":23,"4":108,"5":0,"6":0,"7":0},"f":{"0":108,"1":0,"2":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/client/copyRules.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/copyRules.ts","statementMap":{"0":{"start":{"line":4,"column":0},"end":{"line":4,"column":83}},"1":{"start":{"line":6,"column":13},"end":{"line":17,"column":2}},"2":{"start":{"line":7,"column":2},"end":{"line":16,"column":4}},"3":{"start":{"line":12,"column":4},"end":{"line":15,"column":7}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":25},"end":{"line":6,"column":26}},"loc":{"start":{"line":6,"column":48},"end":{"line":17,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":null}},"loc":{"start":{"line":11,"column":57},"end":{"line":16,"column":3}}}},"branchMap":{},"s":{"0":23,"1":23,"2":108,"3":0},"f":{"0":108,"1":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/client/copySettings.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/copySettings.ts","statementMap":{"0":{"start":{"line":4,"column":0},"end":{"line":4,"column":83}},"1":{"start":{"line":6,"column":13},"end":{"line":17,"column":2}},"2":{"start":{"line":7,"column":2},"end":{"line":16,"column":4}},"3":{"start":{"line":12,"column":4},"end":{"line":15,"column":7}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":28},"end":{"line":6,"column":29}},"loc":{"start":{"line":6,"column":51},"end":{"line":17,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":null}},"loc":{"start":{"line":11,"column":57},"end":{"line":16,"column":3}}}},"branchMap":{},"s":{"0":23,"1":23,"2":108,"3":0},"f":{"0":108,"1":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/client/copySynonyms.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/copySynonyms.ts","statementMap":{"0":{"start":{"line":4,"column":0},"end":{"line":4,"column":83}},"1":{"start":{"line":6,"column":13},"end":{"line":17,"column":2}},"2":{"start":{"line":7,"column":2},"end":{"line":16,"column":4}},"3":{"start":{"line":12,"column":4},"end":{"line":15,"column":7}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":28},"end":{"line":6,"column":29}},"loc":{"start":{"line":6,"column":51},"end":{"line":17,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":null}},"loc":{"start":{"line":11,"column":57},"end":{"line":16,"column":3}}}},"branchMap":{},"s":{"0":23,"1":23,"2":108,"3":0},"f":{"0":108,"1":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/client/customRequest.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/customRequest.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":55}},"1":{"start":{"line":6,"column":13},"end":{"line":14,"column":2}},"2":{"start":{"line":7,"column":2},"end":{"line":13,"column":4}},"3":{"start":{"line":8,"column":4},"end":{"line":10,"column":null}},"4":{"start":{"line":9,"column":6},"end":{"line":9,"column":60}},"5":{"start":{"line":12,"column":4},"end":{"line":12,"column":59}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":29},"end":{"line":6,"column":47}},"loc":{"start":{"line":6,"column":69},"end":{"line":14,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":10}},"loc":{"start":{"line":7,"column":93},"end":{"line":13,"column":3}}}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":4},"end":{"line":10,"column":null}},"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":10,"column":null}}]}},"s":{"0":23,"1":23,"2":110,"3":0,"4":0,"5":0},"f":{"0":110,"1":0},"b":{"0":[0]}},"/home/flakie/package/packages/client-search/src/methods/client/deleteApiKey.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/deleteApiKey.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":null}},"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":55}},"2":{"start":{"line":11,"column":0},"end":{"line":11,"column":70}},"3":{"start":{"line":13,"column":13},"end":{"line":41,"column":2}},"4":{"start":{"line":14,"column":2},"end":{"line":40,"column":4}},"5":{"start":{"line":18,"column":45},"end":{"line":28,"column":5}},"6":{"start":{"line":19,"column":6},"end":{"line":27,"column":9}},"7":{"start":{"line":20,"column":8},"end":{"line":26,"column":13}},"8":{"start":{"line":23,"column":12},"end":{"line":25,"column":null}},"9":{"start":{"line":24,"column":14},"end":{"line":24,"column":29}},"10":{"start":{"line":30,"column":4},"end":{"line":39,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":28},"end":{"line":13,"column":29}},"loc":{"start":{"line":13,"column":51},"end":{"line":41,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":null}},"loc":{"start":{"line":17,"column":55},"end":{"line":40,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":45},"end":{"line":18,"column":46}},"loc":{"start":{"line":18,"column":71},"end":{"line":28,"column":5}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":19,"column":36},"end":{"line":19,"column":41}},"loc":{"start":{"line":19,"column":44},"end":{"line":27,"column":7}}},"4":{"name":"(anonymous_4)","decl":{"start":{"line":22,"column":17},"end":{"line":22,"column":18}},"loc":{"start":{"line":22,"column":40},"end":{"line":26,"column":11}}}},"branchMap":{"0":{"loc":{"start":{"line":23,"column":12},"end":{"line":25,"column":null}},"type":"if","locations":[{"start":{"line":23,"column":12},"end":{"line":25,"column":null}}]}},"s":{"0":23,"1":23,"2":23,"3":23,"4":108,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"f":{"0":108,"1":0,"2":0,"3":0,"4":0},"b":{"0":[0]}},"/home/flakie/package/packages/client-search/src/methods/client/deleteDictionaryEntries.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/deleteDictionaryEntries.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":88}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":11,"column":0},"end":{"line":11,"column":32}},"3":{"start":{"line":13,"column":13},"end":{"line":36,"column":2}},"4":{"start":{"line":14,"column":2},"end":{"line":35,"column":4}},"5":{"start":{"line":19,"column":21},"end":{"line":22,"column":7}},"6":{"start":{"line":19,"column":48},"end":{"line":22,"column":6}},"7":{"start":{"line":24,"column":4},"end":{"line":34,"column":6}},"8":{"start":{"line":33,"column":40},"end":{"line":33,"column":94}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":39},"end":{"line":13,"column":40}},"loc":{"start":{"line":13,"column":62},"end":{"line":36,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":null}},"loc":{"start":{"line":18,"column":60},"end":{"line":35,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":19,"column":35},"end":{"line":19,"column":43}},"loc":{"start":{"line":19,"column":48},"end":{"line":22,"column":6}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":33,"column":6},"end":{"line":33,"column":7}},"loc":{"start":{"line":33,"column":40},"end":{"line":33,"column":94}}}},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":23,"4":108,"5":0,"6":0,"7":0,"8":0},"f":{"0":108,"1":0,"2":0,"3":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/client/generateSecuredApiKey.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/generateSecuredApiKey.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":64}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":33}},"2":{"start":{"line":6,"column":13},"end":{"line":17,"column":2}},"3":{"start":{"line":7,"column":2},"end":{"line":16,"column":4}},"4":{"start":{"line":8,"column":28},"end":{"line":8,"column":66}},"5":{"start":{"line":10,"column":23},"end":{"line":13,"column":20}},"6":{"start":{"line":15,"column":4},"end":{"line":15,"column":72}}},"fnMap":{"0":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":37},"end":{"line":6,"column":40}},"loc":{"start":{"line":6,"column":42},"end":{"line":17,"column":1}}},"1":{"name":"(anonymous_2)","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":10}},"loc":{"start":{"line":7,"column":83},"end":{"line":16,"column":3}}}},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":0,"4":0,"5":0,"6":0},"f":{"0":0,"1":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/client/getApiKey.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/getApiKey.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":48}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":7,"column":13},"end":{"line":20,"column":2}},"3":{"start":{"line":8,"column":2},"end":{"line":19,"column":4}},"4":{"start":{"line":12,"column":4},"end":{"line":18,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":25},"end":{"line":7,"column":26}},"loc":{"start":{"line":7,"column":48},"end":{"line":20,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":null}},"loc":{"start":{"line":11,"column":44},"end":{"line":19,"column":3}}}},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":108,"4":0},"f":{"0":108,"1":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/client/getAppTask.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/getAppTask.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":48}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":7,"column":13},"end":{"line":20,"column":2}},"3":{"start":{"line":8,"column":2},"end":{"line":19,"column":4}},"4":{"start":{"line":12,"column":4},"end":{"line":18,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":26},"end":{"line":7,"column":27}},"loc":{"start":{"line":7,"column":49},"end":{"line":20,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":null}},"loc":{"start":{"line":11,"column":45},"end":{"line":19,"column":3}}}},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":108,"4":0},"f":{"0":108,"1":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/client/getDictionarySettings.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/getDictionarySettings.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":55}},"1":{"start":{"line":6,"column":13},"end":{"line":16,"column":2}},"2":{"start":{"line":7,"column":2},"end":{"line":15,"column":4}},"3":{"start":{"line":8,"column":4},"end":{"line":14,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":37},"end":{"line":6,"column":38}},"loc":{"start":{"line":6,"column":60},"end":{"line":16,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":10}},"loc":{"start":{"line":7,"column":95},"end":{"line":15,"column":3}}}},"branchMap":{},"s":{"0":23,"1":23,"2":108,"3":0},"f":{"0":108,"1":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/client/getLogs.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/getLogs.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":55}},"1":{"start":{"line":6,"column":13},"end":{"line":16,"column":2}},"2":{"start":{"line":7,"column":2},"end":{"line":15,"column":4}},"3":{"start":{"line":8,"column":4},"end":{"line":14,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":23},"end":{"line":6,"column":24}},"loc":{"start":{"line":6,"column":46},"end":{"line":16,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":10}},"loc":{"start":{"line":7,"column":81},"end":{"line":15,"column":3}}}},"branchMap":{},"s":{"0":23,"1":23,"2":108,"3":0},"f":{"0":108,"1":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/client/getSecuredApiKeyRemainingValidity.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/getSecuredApiKeyRemainingValidity.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":54}},"1":{"start":{"line":3,"column":13},"end":{"line":15,"column":2}},"2":{"start":{"line":4,"column":2},"end":{"line":14,"column":4}},"3":{"start":{"line":5,"column":26},"end":{"line":5,"column":80}},"4":{"start":{"line":6,"column":18},"end":{"line":6,"column":36}},"5":{"start":{"line":7,"column":18},"end":{"line":7,"column":44}},"6":{"start":{"line":9,"column":4},"end":{"line":11,"column":null}},"7":{"start":{"line":10,"column":6},"end":{"line":10,"column":44}},"8":{"start":{"line":13,"column":4},"end":{"line":13,"column":76}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":49},"end":{"line":3,"column":52}},"loc":{"start":{"line":3,"column":54},"end":{"line":15,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":10}},"loc":{"start":{"line":4,"column":43},"end":{"line":14,"column":3}}}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":4},"end":{"line":11,"column":null}},"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":11,"column":null}}]}},"s":{"0":23,"1":23,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"f":{"0":0,"1":0},"b":{"0":[0]}},"/home/flakie/package/packages/client-search/src/methods/client/getTopUserIDs.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/getTopUserIDs.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":55}},"1":{"start":{"line":6,"column":13},"end":{"line":16,"column":2}},"2":{"start":{"line":7,"column":2},"end":{"line":15,"column":4}},"3":{"start":{"line":8,"column":4},"end":{"line":14,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":29},"end":{"line":6,"column":30}},"loc":{"start":{"line":6,"column":52},"end":{"line":16,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":10}},"loc":{"start":{"line":7,"column":87},"end":{"line":15,"column":3}}}},"branchMap":{},"s":{"0":23,"1":23,"2":108,"3":0},"f":{"0":108,"1":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/client/getUserID.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/getUserID.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":48}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":7,"column":13},"end":{"line":17,"column":2}},"3":{"start":{"line":8,"column":2},"end":{"line":16,"column":4}},"4":{"start":{"line":9,"column":4},"end":{"line":15,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":25},"end":{"line":7,"column":26}},"loc":{"start":{"line":7,"column":48},"end":{"line":17,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":10}},"loc":{"start":{"line":8,"column":96},"end":{"line":16,"column":3}}}},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":108,"4":0},"f":{"0":108,"1":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/client/hasPendingMappings.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/hasPendingMappings.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":55}},"1":{"start":{"line":6,"column":13},"end":{"line":25,"column":2}},"2":{"start":{"line":7,"column":2},"end":{"line":24,"column":4}},"3":{"start":{"line":10,"column":45},"end":{"line":10,"column":65}},"4":{"start":{"line":12,"column":4},"end":{"line":15,"column":null}},"5":{"start":{"line":14,"column":6},"end":{"line":14,"column":33}},"6":{"start":{"line":17,"column":4},"end":{"line":23,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":34},"end":{"line":6,"column":35}},"loc":{"start":{"line":6,"column":57},"end":{"line":25,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":null}},"loc":{"start":{"line":9,"column":53},"end":{"line":24,"column":3}}}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":45},"end":{"line":10,"column":65}},"type":"binary-expr","locations":[{"start":{"line":10,"column":45},"end":{"line":10,"column":59}},{"start":{"line":10,"column":63},"end":{"line":10,"column":65}}]},"1":{"loc":{"start":{"line":12,"column":4},"end":{"line":15,"column":null}},"type":"if","locations":[{"start":{"line":12,"column":4},"end":{"line":15,"column":null}}]}},"s":{"0":23,"1":23,"2":108,"3":0,"4":0,"5":0,"6":0},"f":{"0":108,"1":0},"b":{"0":[0,0],"1":[0]}},"/home/flakie/package/packages/client-search/src/methods/client/initIndex.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/initIndex.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":52}},"1":{"start":{"line":6,"column":13},"end":{"line":16,"column":2}},"2":{"start":{"line":7,"column":2},"end":{"line":15,"column":4}},"3":{"start":{"line":8,"column":37},"end":{"line":12,"column":6}},"4":{"start":{"line":14,"column":4},"end":{"line":14,"column":52}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":25},"end":{"line":6,"column":26}},"loc":{"start":{"line":6,"column":61},"end":{"line":16,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":10}},"loc":{"start":{"line":7,"column":37},"end":{"line":15,"column":3}}}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":21},"end":{"line":7,"column":33}},"type":"default-arg","locations":[{"start":{"line":7,"column":31},"end":{"line":7,"column":33}}]}},"s":{"0":23,"1":23,"2":0,"3":0,"4":0},"f":{"0":0,"1":0},"b":{"0":[0]}},"/home/flakie/package/packages/client-search/src/methods/client/listApiKeys.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/listApiKeys.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":55}},"1":{"start":{"line":6,"column":13},"end":{"line":16,"column":2}},"2":{"start":{"line":7,"column":2},"end":{"line":15,"column":4}},"3":{"start":{"line":8,"column":4},"end":{"line":14,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":27},"end":{"line":6,"column":28}},"loc":{"start":{"line":6,"column":50},"end":{"line":16,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":10}},"loc":{"start":{"line":7,"column":85},"end":{"line":15,"column":3}}}},"branchMap":{},"s":{"0":23,"1":23,"2":108,"3":0},"f":{"0":108,"1":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/client/listClusters.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/listClusters.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":55}},"1":{"start":{"line":6,"column":13},"end":{"line":16,"column":2}},"2":{"start":{"line":7,"column":2},"end":{"line":15,"column":4}},"3":{"start":{"line":8,"column":4},"end":{"line":14,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":28},"end":{"line":6,"column":29}},"loc":{"start":{"line":6,"column":51},"end":{"line":16,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":10}},"loc":{"start":{"line":7,"column":86},"end":{"line":15,"column":3}}}},"branchMap":{},"s":{"0":23,"1":23,"2":108,"3":0},"f":{"0":108,"1":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/client/listIndices.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/listIndices.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":55}},"1":{"start":{"line":6,"column":13},"end":{"line":16,"column":2}},"2":{"start":{"line":7,"column":2},"end":{"line":15,"column":4}},"3":{"start":{"line":8,"column":4},"end":{"line":14,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":27},"end":{"line":6,"column":28}},"loc":{"start":{"line":6,"column":50},"end":{"line":16,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":10}},"loc":{"start":{"line":7,"column":85},"end":{"line":15,"column":3}}}},"branchMap":{},"s":{"0":23,"1":23,"2":108,"3":0},"f":{"0":108,"1":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/client/listUserIDs.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/listUserIDs.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":55}},"1":{"start":{"line":6,"column":13},"end":{"line":18,"column":2}},"2":{"start":{"line":7,"column":2},"end":{"line":17,"column":4}},"3":{"start":{"line":10,"column":4},"end":{"line":16,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":27},"end":{"line":6,"column":28}},"loc":{"start":{"line":6,"column":50},"end":{"line":18,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":null}},"loc":{"start":{"line":9,"column":46},"end":{"line":17,"column":3}}}},"branchMap":{},"s":{"0":23,"1":23,"2":108,"3":0},"f":{"0":108,"1":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/client/moveIndex.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/moveIndex.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":94}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":82}},"3":{"start":{"line":7,"column":13},"end":{"line":34,"column":2}},"4":{"start":{"line":8,"column":2},"end":{"line":33,"column":4}},"5":{"start":{"line":13,"column":47},"end":{"line":17,"column":5}},"6":{"start":{"line":14,"column":6},"end":{"line":16,"column":55}},"7":{"start":{"line":19,"column":4},"end":{"line":32,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":25},"end":{"line":7,"column":26}},"loc":{"start":{"line":7,"column":48},"end":{"line":34,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":null}},"loc":{"start":{"line":12,"column":57},"end":{"line":33,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":47},"end":{"line":13,"column":48}},"loc":{"start":{"line":13,"column":80},"end":{"line":17,"column":5}}}},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":23,"4":108,"5":0,"6":0,"7":0},"f":{"0":108,"1":0,"2":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/client/multipleBatch.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/multipleBatch.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":86}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":null}},"3":{"start":{"line":13,"column":13},"end":{"line":42,"column":2}},"4":{"start":{"line":14,"column":2},"end":{"line":41,"column":4}},"5":{"start":{"line":18,"column":46},"end":{"line":26,"column":5}},"6":{"start":{"line":19,"column":6},"end":{"line":25,"column":8}},"7":{"start":{"line":21,"column":10},"end":{"line":23,"column":70}},"8":{"start":{"line":28,"column":4},"end":{"line":40,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":29},"end":{"line":13,"column":30}},"loc":{"start":{"line":13,"column":52},"end":{"line":42,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":null}},"loc":{"start":{"line":17,"column":56},"end":{"line":41,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":46},"end":{"line":18,"column":47}},"loc":{"start":{"line":18,"column":79},"end":{"line":26,"column":5}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":20,"column":41},"end":{"line":20,"column":50}},"loc":{"start":{"line":20,"column":53},"end":{"line":24,"column":9}}}},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":23,"4":108,"5":0,"6":0,"7":0,"8":0},"f":{"0":108,"1":0,"2":0,"3":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/client/multipleGetObjects.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/multipleGetObjects.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":55}},"1":{"start":{"line":6,"column":13},"end":{"line":22,"column":2}},"2":{"start":{"line":7,"column":2},"end":{"line":21,"column":4}},"3":{"start":{"line":11,"column":4},"end":{"line":20,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":34},"end":{"line":6,"column":35}},"loc":{"start":{"line":6,"column":57},"end":{"line":22,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":null}},"loc":{"start":{"line":10,"column":62},"end":{"line":21,"column":3}}}},"branchMap":{},"s":{"0":23,"1":23,"2":108,"3":0},"f":{"0":108,"1":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/client/multipleQueries.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/multipleQueries.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":55}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":80}},"2":{"start":{"line":11,"column":13},"end":{"line":35,"column":2}},"3":{"start":{"line":12,"column":2},"end":{"line":34,"column":4}},"4":{"start":{"line":16,"column":21},"end":{"line":21,"column":6}},"5":{"start":{"line":17,"column":6},"end":{"line":20,"column":8}},"6":{"start":{"line":23,"column":4},"end":{"line":33,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":31},"end":{"line":11,"column":32}},"loc":{"start":{"line":11,"column":54},"end":{"line":35,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":9},"end":{"line":12,"column":null}},"loc":{"start":{"line":15,"column":59},"end":{"line":34,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":33},"end":{"line":16,"column":38}},"loc":{"start":{"line":16,"column":41},"end":{"line":21,"column":5}}}},"branchMap":{"0":{"loc":{"start":{"line":19,"column":41},"end":{"line":19,"column":59}},"type":"binary-expr","locations":[{"start":{"line":19,"column":41},"end":{"line":19,"column":53}},{"start":{"line":19,"column":57},"end":{"line":19,"column":59}}]}},"s":{"0":23,"1":23,"2":23,"3":220,"4":0,"5":0,"6":0},"f":{"0":220,"1":0,"2":0},"b":{"0":[0,0]}},"/home/flakie/package/packages/client-search/src/methods/client/multipleSearchForFacetValues.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/multipleSearchForFacetValues.ts","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":3,"column":null}},"1":{"start":{"line":12,"column":13},"end":{"line":33,"column":2}},"2":{"start":{"line":13,"column":2},"end":{"line":32,"column":4}},"3":{"start":{"line":20,"column":4},"end":{"line":31,"column":6}},"4":{"start":{"line":22,"column":53},"end":{"line":22,"column":65}},"5":{"start":{"line":24,"column":8},"end":{"line":29,"column":11}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":44},"end":{"line":12,"column":45}},"loc":{"start":{"line":12,"column":67},"end":{"line":33,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":9},"end":{"line":13,"column":null}},"loc":{"start":{"line":19,"column":66},"end":{"line":32,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":21,"column":18},"end":{"line":21,"column":23}},"loc":{"start":{"line":21,"column":26},"end":{"line":30,"column":7}}}},"branchMap":{},"s":{"0":23,"1":23,"2":220,"3":0,"4":0,"5":0},"f":{"0":220,"1":0,"2":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/client/removeUserID.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/removeUserID.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":55}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":82}},"2":{"start":{"line":6,"column":13},"end":{"line":24,"column":2}},"3":{"start":{"line":7,"column":2},"end":{"line":23,"column":4}},"4":{"start":{"line":11,"column":33},"end":{"line":11,"column":75}},"5":{"start":{"line":14,"column":4},"end":{"line":14,"column":71}},"6":{"start":{"line":16,"column":4},"end":{"line":22,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":28},"end":{"line":6,"column":29}},"loc":{"start":{"line":6,"column":51},"end":{"line":24,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":null}},"loc":{"start":{"line":10,"column":47},"end":{"line":23,"column":3}}}},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":108,"4":0,"5":0,"6":0},"f":{"0":108,"1":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/client/replaceDictionaryEntries.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/replaceDictionaryEntries.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":88}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":32}},"3":{"start":{"line":14,"column":13},"end":{"line":37,"column":2}},"4":{"start":{"line":15,"column":2},"end":{"line":36,"column":4}},"5":{"start":{"line":20,"column":21},"end":{"line":23,"column":7}},"6":{"start":{"line":20,"column":43},"end":{"line":23,"column":6}},"7":{"start":{"line":25,"column":4},"end":{"line":35,"column":6}},"8":{"start":{"line":34,"column":40},"end":{"line":34,"column":94}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":40},"end":{"line":14,"column":41}},"loc":{"start":{"line":14,"column":63},"end":{"line":37,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":9},"end":{"line":15,"column":null}},"loc":{"start":{"line":19,"column":60},"end":{"line":36,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":33},"end":{"line":20,"column":38}},"loc":{"start":{"line":20,"column":43},"end":{"line":23,"column":6}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":34,"column":6},"end":{"line":34,"column":7}},"loc":{"start":{"line":34,"column":40},"end":{"line":34,"column":94}}}},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":23,"4":108,"5":0,"6":0,"7":0,"8":0},"f":{"0":108,"1":0,"2":0,"3":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/client/restoreApiKey.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/restoreApiKey.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":null}},"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":55}},"2":{"start":{"line":11,"column":0},"end":{"line":11,"column":71}},"3":{"start":{"line":13,"column":13},"end":{"line":41,"column":2}},"4":{"start":{"line":14,"column":2},"end":{"line":40,"column":4}},"5":{"start":{"line":18,"column":46},"end":{"line":28,"column":5}},"6":{"start":{"line":19,"column":6},"end":{"line":27,"column":9}},"7":{"start":{"line":20,"column":8},"end":{"line":26,"column":11}},"8":{"start":{"line":21,"column":10},"end":{"line":23,"column":null}},"9":{"start":{"line":22,"column":12},"end":{"line":22,"column":27}},"10":{"start":{"line":25,"column":10},"end":{"line":25,"column":25}},"11":{"start":{"line":30,"column":4},"end":{"line":39,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":29},"end":{"line":13,"column":30}},"loc":{"start":{"line":13,"column":52},"end":{"line":41,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":null}},"loc":{"start":{"line":17,"column":56},"end":{"line":40,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":46},"end":{"line":18,"column":47}},"loc":{"start":{"line":18,"column":72},"end":{"line":28,"column":5}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":19,"column":36},"end":{"line":19,"column":41}},"loc":{"start":{"line":19,"column":44},"end":{"line":27,"column":7}}},"4":{"name":"(anonymous_4)","decl":{"start":{"line":20,"column":65},"end":{"line":20,"column":66}},"loc":{"start":{"line":20,"column":88},"end":{"line":26,"column":9}}}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":10},"end":{"line":23,"column":null}},"type":"if","locations":[{"start":{"line":21,"column":10},"end":{"line":23,"column":null}}]}},"s":{"0":23,"1":23,"2":23,"3":23,"4":108,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"f":{"0":108,"1":0,"2":0,"3":0,"4":0},"b":{"0":[0]}},"/home/flakie/package/packages/client-search/src/methods/client/saveDictionaryEntries.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/saveDictionaryEntries.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":88}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":32}},"3":{"start":{"line":14,"column":13},"end":{"line":37,"column":2}},"4":{"start":{"line":15,"column":2},"end":{"line":36,"column":4}},"5":{"start":{"line":20,"column":21},"end":{"line":23,"column":7}},"6":{"start":{"line":20,"column":43},"end":{"line":23,"column":6}},"7":{"start":{"line":25,"column":4},"end":{"line":35,"column":6}},"8":{"start":{"line":34,"column":40},"end":{"line":34,"column":94}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":37},"end":{"line":14,"column":38}},"loc":{"start":{"line":14,"column":60},"end":{"line":37,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":9},"end":{"line":15,"column":null}},"loc":{"start":{"line":19,"column":60},"end":{"line":36,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":33},"end":{"line":20,"column":38}},"loc":{"start":{"line":20,"column":43},"end":{"line":23,"column":6}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":34,"column":6},"end":{"line":34,"column":7}},"loc":{"start":{"line":34,"column":40},"end":{"line":34,"column":94}}}},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":23,"4":108,"5":0,"6":0,"7":0,"8":0},"f":{"0":108,"1":0,"2":0,"3":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/client/searchDictionaryEntries.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/searchDictionaryEntries.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":48}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":7,"column":13},"end":{"line":25,"column":2}},"3":{"start":{"line":8,"column":2},"end":{"line":24,"column":4}},"4":{"start":{"line":13,"column":4},"end":{"line":23,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":39},"end":{"line":7,"column":40}},"loc":{"start":{"line":7,"column":62},"end":{"line":25,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":null}},"loc":{"start":{"line":12,"column":58},"end":{"line":24,"column":3}}}},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":108,"4":0},"f":{"0":108,"1":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/client/searchUserIDs.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/searchUserIDs.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":55}},"1":{"start":{"line":6,"column":13},"end":{"line":22,"column":2}},"2":{"start":{"line":7,"column":2},"end":{"line":21,"column":4}},"3":{"start":{"line":11,"column":4},"end":{"line":20,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":29},"end":{"line":6,"column":30}},"loc":{"start":{"line":6,"column":52},"end":{"line":22,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":null}},"loc":{"start":{"line":10,"column":48},"end":{"line":21,"column":3}}}},"branchMap":{},"s":{"0":23,"1":23,"2":108,"3":0},"f":{"0":108,"1":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/client/setDictionarySettings.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/setDictionarySettings.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":80}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"3":{"start":{"line":8,"column":13},"end":{"line":25,"column":2}},"4":{"start":{"line":9,"column":2},"end":{"line":24,"column":4}},"5":{"start":{"line":13,"column":4},"end":{"line":23,"column":6}},"6":{"start":{"line":22,"column":40},"end":{"line":22,"column":94}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":37},"end":{"line":8,"column":38}},"loc":{"start":{"line":8,"column":60},"end":{"line":25,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":null}},"loc":{"start":{"line":12,"column":60},"end":{"line":24,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":22,"column":6},"end":{"line":22,"column":7}},"loc":{"start":{"line":22,"column":40},"end":{"line":22,"column":94}}}},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":23,"4":108,"5":0,"6":0},"f":{"0":108,"1":0,"2":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/client/updateApiKey.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/updateApiKey.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":null}},"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":55}},"2":{"start":{"line":11,"column":0},"end":{"line":11,"column":null}},"3":{"start":{"line":19,"column":13},"end":{"line":70,"column":2}},"4":{"start":{"line":20,"column":2},"end":{"line":69,"column":4}},"5":{"start":{"line":25,"column":26},"end":{"line":25,"column":59}},"6":{"start":{"line":26,"column":44},"end":{"line":26,"column":64}},"7":{"start":{"line":27,"column":17},"end":{"line":27,"column":59}},"8":{"start":{"line":29,"column":25},"end":{"line":38,"column":15}},"9":{"start":{"line":40,"column":23},"end":{"line":49,"column":5}},"10":{"start":{"line":41,"column":6},"end":{"line":48,"column":11}},"11":{"start":{"line":44,"column":12},"end":{"line":44,"column":53}},"12":{"start":{"line":47,"column":10},"end":{"line":47,"column":81}},"13":{"start":{"line":51,"column":45},"end":{"line":56,"column":8}},"14":{"start":{"line":52,"column":6},"end":{"line":56,"column":8}},"15":{"start":{"line":53,"column":8},"end":{"line":55,"column":11}},"16":{"start":{"line":54,"column":10},"end":{"line":54,"column":77}},"17":{"start":{"line":58,"column":4},"end":{"line":68,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":19,"column":28},"end":{"line":19,"column":29}},"loc":{"start":{"line":19,"column":51},"end":{"line":70,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":20,"column":9},"end":{"line":20,"column":null}},"loc":{"start":{"line":24,"column":55},"end":{"line":69,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":40,"column":23},"end":{"line":40,"column":24}},"loc":{"start":{"line":40,"column":73},"end":{"line":49,"column":5}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":43,"column":10},"end":{"line":43,"column":11}},"loc":{"start":{"line":44,"column":12},"end":{"line":44,"column":53}}},"4":{"name":"(anonymous_4)","decl":{"start":{"line":46,"column":15},"end":{"line":46,"column":27}},"loc":{"start":{"line":46,"column":30},"end":{"line":48,"column":9}}},"5":{"name":"(anonymous_5)","decl":{"start":{"line":51,"column":45},"end":{"line":51,"column":46}},"loc":{"start":{"line":52,"column":6},"end":{"line":56,"column":8}}},"6":{"name":"(anonymous_6)","decl":{"start":{"line":52,"column":29},"end":{"line":52,"column":34}},"loc":{"start":{"line":52,"column":37},"end":{"line":56,"column":7}}},"7":{"name":"(anonymous_7)","decl":{"start":{"line":53,"column":64},"end":{"line":53,"column":81}},"loc":{"start":{"line":53,"column":84},"end":{"line":55,"column":9}}}},"branchMap":{"0":{"loc":{"start":{"line":26,"column":44},"end":{"line":26,"column":64}},"type":"binary-expr","locations":[{"start":{"line":26,"column":44},"end":{"line":26,"column":58}},{"start":{"line":26,"column":62},"end":{"line":26,"column":64}}]},"1":{"loc":{"start":{"line":27,"column":17},"end":{"line":27,"column":59}},"type":"cond-expr","locations":[{"start":{"line":27,"column":35},"end":{"line":27,"column":54}},{"start":{"line":27,"column":57},"end":{"line":27,"column":59}}]},"2":{"loc":{"start":{"line":54,"column":17},"end":{"line":54,"column":76}},"type":"cond-expr","locations":[{"start":{"line":54,"column":49},"end":{"line":54,"column":66}},{"start":{"line":54,"column":69},"end":{"line":54,"column":76}}]}},"s":{"0":23,"1":23,"2":23,"3":23,"4":108,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"f":{"0":108,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0]}},"/home/flakie/package/packages/client-search/src/methods/client/waitAppTask.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/client/waitAppTask.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":64}},"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":31}},"2":{"start":{"line":7,"column":13},"end":{"line":15,"column":2}},"3":{"start":{"line":8,"column":2},"end":{"line":14,"column":4}},"4":{"start":{"line":9,"column":4},"end":{"line":13,"column":7}},"5":{"start":{"line":10,"column":6},"end":{"line":12,"column":9}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":69}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":27},"end":{"line":7,"column":28}},"loc":{"start":{"line":7,"column":50},"end":{"line":15,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":10}},"loc":{"start":{"line":8,"column":86},"end":{"line":14,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":34},"end":{"line":9,"column":39}},"loc":{"start":{"line":9,"column":42},"end":{"line":13,"column":5}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":10,"column":59},"end":{"line":10,"column":67}},"loc":{"start":{"line":10,"column":70},"end":{"line":12,"column":7}}}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":15},"end":{"line":11,"column":68}},"type":"cond-expr","locations":[{"start":{"line":11,"column":49},"end":{"line":11,"column":56}},{"start":{"line":11,"column":59},"end":{"line":11,"column":68}}]}},"s":{"0":23,"1":23,"2":23,"3":108,"4":0,"5":0,"6":0},"f":{"0":108,"1":0,"2":0,"3":0},"b":{"0":[0,0]}},"/home/flakie/package/packages/client-search/src/methods/index/index.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/index.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":24}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":30}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":33}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":31}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":31}},"6":{"start":{"line":11,"column":0},"end":{"line":11,"column":29}},"7":{"start":{"line":12,"column":0},"end":{"line":12,"column":32}},"8":{"start":{"line":13,"column":0},"end":{"line":13,"column":27}},"9":{"start":{"line":14,"column":0},"end":{"line":14,"column":30}},"10":{"start":{"line":15,"column":0},"end":{"line":15,"column":31}},"11":{"start":{"line":16,"column":0},"end":{"line":16,"column":32}},"12":{"start":{"line":17,"column":0},"end":{"line":17,"column":29}},"13":{"start":{"line":18,"column":0},"end":{"line":18,"column":32}},"14":{"start":{"line":19,"column":0},"end":{"line":19,"column":25}},"15":{"start":{"line":20,"column":0},"end":{"line":20,"column":30}},"16":{"start":{"line":21,"column":0},"end":{"line":21,"column":29}},"17":{"start":{"line":22,"column":0},"end":{"line":22,"column":28}},"18":{"start":{"line":23,"column":0},"end":{"line":23,"column":36}},"19":{"start":{"line":24,"column":0},"end":{"line":24,"column":29}},"20":{"start":{"line":25,"column":0},"end":{"line":25,"column":26}},"21":{"start":{"line":26,"column":0},"end":{"line":26,"column":30}},"22":{"start":{"line":27,"column":0},"end":{"line":27,"column":29}},"23":{"start":{"line":28,"column":0},"end":{"line":28,"column":26}},"24":{"start":{"line":29,"column":0},"end":{"line":29,"column":38}},"25":{"start":{"line":30,"column":0},"end":{"line":30,"column":39}},"26":{"start":{"line":31,"column":0},"end":{"line":31,"column":36}},"27":{"start":{"line":32,"column":0},"end":{"line":32,"column":34}},"28":{"start":{"line":33,"column":0},"end":{"line":33,"column":37}},"29":{"start":{"line":34,"column":0},"end":{"line":34,"column":29}},"30":{"start":{"line":35,"column":0},"end":{"line":35,"column":30}},"31":{"start":{"line":36,"column":0},"end":{"line":36,"column":27}},"32":{"start":{"line":37,"column":0},"end":{"line":37,"column":28}},"33":{"start":{"line":38,"column":0},"end":{"line":38,"column":30}},"34":{"start":{"line":39,"column":0},"end":{"line":39,"column":31}},"35":{"start":{"line":40,"column":0},"end":{"line":40,"column":25}},"36":{"start":{"line":41,"column":0},"end":{"line":41,"column":39}},"37":{"start":{"line":42,"column":0},"end":{"line":42,"column":30}},"38":{"start":{"line":43,"column":0},"end":{"line":43,"column":33}},"39":{"start":{"line":44,"column":0},"end":{"line":44,"column":30}},"40":{"start":{"line":45,"column":0},"end":{"line":45,"column":27}}},"fnMap":{},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":23,"4":23,"5":23,"6":23,"7":23,"8":23,"9":23,"10":23,"11":23,"12":23,"13":23,"14":23,"15":23,"16":23,"17":23,"18":23,"19":23,"20":23,"21":23,"22":23,"23":23,"24":23,"25":23,"26":23,"27":23,"28":23,"29":23,"30":23,"31":23,"32":23,"33":23,"34":23,"35":23,"36":23,"37":23,"38":23,"39":23,"40":23},"f":{},"b":{}},"/home/flakie/package/packages/client-search/src/methods/index/batch.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/batch.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":94}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":75}},"3":{"start":{"line":7,"column":13},"end":{"line":30,"column":2}},"4":{"start":{"line":8,"column":2},"end":{"line":29,"column":4}},"5":{"start":{"line":12,"column":38},"end":{"line":14,"column":5}},"6":{"start":{"line":13,"column":6},"end":{"line":13,"column":65}},"7":{"start":{"line":16,"column":4},"end":{"line":28,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":21},"end":{"line":7,"column":22}},"loc":{"start":{"line":7,"column":43},"end":{"line":30,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":null}},"loc":{"start":{"line":11,"column":48},"end":{"line":29,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":38},"end":{"line":12,"column":39}},"loc":{"start":{"line":12,"column":71},"end":{"line":14,"column":5}}}},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":23,"4":0,"5":0,"6":0,"7":0},"f":{"0":0,"1":0,"2":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/index/browseObjects.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/browseObjects.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":48}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":null}},"3":{"start":{"line":13,"column":13},"end":{"line":31,"column":2}},"4":{"start":{"line":14,"column":2},"end":{"line":30,"column":4}},"5":{"start":{"line":17,"column":4},"end":{"line":29,"column":7}},"6":{"start":{"line":18,"column":30},"end":{"line":18,"column":59}},"7":{"start":{"line":21,"column":8},"end":{"line":27,"column":null}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":29},"end":{"line":13,"column":30}},"loc":{"start":{"line":13,"column":51},"end":{"line":31,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":null}},"loc":{"start":{"line":16,"column":31},"end":{"line":30,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":18},"end":{"line":18,"column":26}},"loc":{"start":{"line":18,"column":30},"end":{"line":18,"column":59}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":20,"column":15},"end":{"line":20,"column":16}},"loc":{"start":{"line":21,"column":8},"end":{"line":27,"column":null}}}},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":23,"4":0,"5":0,"6":0,"7":0},"f":{"0":0,"1":0,"2":0,"3":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/index/browseRules.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/browseRules.ts","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":3,"column":null}},"1":{"start":{"line":13,"column":13},"end":{"line":42,"column":2}},"2":{"start":{"line":14,"column":2},"end":{"line":41,"column":4}},"3":{"start":{"line":17,"column":20},"end":{"line":20,"column":6}},"4":{"start":{"line":22,"column":4},"end":{"line":40,"column":7}},"5":{"start":{"line":23,"column":30},"end":{"line":23,"column":72}},"6":{"start":{"line":26,"column":8},"end":{"line":38,"column":10}},"7":{"start":{"line":28,"column":12},"end":{"line":36,"column":14}},"8":{"start":{"line":32,"column":16},"end":{"line":32,"column":54}},"9":{"start":{"line":34,"column":16},"end":{"line":34,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":27},"end":{"line":13,"column":28}},"loc":{"start":{"line":13,"column":49},"end":{"line":42,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":null}},"loc":{"start":{"line":16,"column":31},"end":{"line":41,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":23,"column":18},"end":{"line":23,"column":26}},"loc":{"start":{"line":23,"column":30},"end":{"line":23,"column":72}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":25,"column":6},"end":{"line":25,"column":13}},"loc":{"start":{"line":25,"column":18},"end":{"line":39,"column":7}}},"4":{"name":"(anonymous_4)","decl":{"start":{"line":27,"column":10},"end":{"line":27,"column":11}},"loc":{"start":{"line":27,"column":45},"end":{"line":37,"column":11}}},"5":{"name":"(anonymous_5)","decl":{"start":{"line":30,"column":38},"end":{"line":30,"column":42}},"loc":{"start":{"line":30,"column":45},"end":{"line":35,"column":15}}}},"branchMap":{},"s":{"0":23,"1":23,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/index/browseSynonyms.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/browseSynonyms.ts","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":3,"column":null}},"1":{"start":{"line":13,"column":13},"end":{"line":42,"column":2}},"2":{"start":{"line":14,"column":2},"end":{"line":41,"column":4}},"3":{"start":{"line":17,"column":20},"end":{"line":20,"column":6}},"4":{"start":{"line":22,"column":4},"end":{"line":40,"column":7}},"5":{"start":{"line":23,"column":30},"end":{"line":23,"column":72}},"6":{"start":{"line":26,"column":8},"end":{"line":38,"column":10}},"7":{"start":{"line":28,"column":12},"end":{"line":36,"column":14}},"8":{"start":{"line":32,"column":16},"end":{"line":32,"column":57}},"9":{"start":{"line":34,"column":16},"end":{"line":34,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":30},"end":{"line":13,"column":31}},"loc":{"start":{"line":13,"column":52},"end":{"line":42,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":null}},"loc":{"start":{"line":16,"column":31},"end":{"line":41,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":23,"column":18},"end":{"line":23,"column":26}},"loc":{"start":{"line":23,"column":30},"end":{"line":23,"column":72}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":25,"column":6},"end":{"line":25,"column":13}},"loc":{"start":{"line":25,"column":18},"end":{"line":39,"column":7}}},"4":{"name":"(anonymous_4)","decl":{"start":{"line":27,"column":10},"end":{"line":27,"column":11}},"loc":{"start":{"line":27,"column":48},"end":{"line":37,"column":11}}},"5":{"name":"(anonymous_5)","decl":{"start":{"line":30,"column":38},"end":{"line":30,"column":45}},"loc":{"start":{"line":30,"column":48},"end":{"line":35,"column":15}}}},"branchMap":{},"s":{"0":23,"1":23,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/index/chunkedBatch.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/chunkedBatch.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":80}},"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":null}},"2":{"start":{"line":13,"column":13},"end":{"line":72,"column":2}},"3":{"start":{"line":14,"column":2},"end":{"line":71,"column":4}},"4":{"start":{"line":19,"column":38},"end":{"line":19,"column":58}},"5":{"start":{"line":21,"column":21},"end":{"line":24,"column":6}},"6":{"start":{"line":26,"column":25},"end":{"line":62,"column":5}},"7":{"start":{"line":28,"column":54},"end":{"line":28,"column":56}},"8":{"start":{"line":33,"column":6},"end":{"line":40,"column":null}},"9":{"start":{"line":35,"column":8},"end":{"line":35,"column":40}},"10":{"start":{"line":37,"column":8},"end":{"line":39,"column":null}},"11":{"start":{"line":38,"column":10},"end":{"line":38,"column":16}},"12":{"start":{"line":42,"column":6},"end":{"line":44,"column":null}},"13":{"start":{"line":43,"column":8},"end":{"line":43,"column":41}},"14":{"start":{"line":46,"column":6},"end":{"line":61,"column":9}},"15":{"start":{"line":48,"column":10},"end":{"line":51,"column":12}},"16":{"start":{"line":55,"column":8},"end":{"line":55,"column":70}},"17":{"start":{"line":56,"column":8},"end":{"line":56,"column":42}},"18":{"start":{"line":58,"column":8},"end":{"line":58,"column":16}},"19":{"start":{"line":60,"column":8},"end":{"line":60,"column":35}},"20":{"start":{"line":64,"column":4},"end":{"line":70,"column":7}},"21":{"start":{"line":65,"column":6},"end":{"line":69,"column":8}},"22":{"start":{"line":67,"column":10},"end":{"line":67,"column":60}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":28},"end":{"line":13,"column":29}},"loc":{"start":{"line":13,"column":50},"end":{"line":72,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":null}},"loc":{"start":{"line":18,"column":55},"end":{"line":71,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":26,"column":25},"end":{"line":26,"column":26}},"loc":{"start":{"line":26,"column":92},"end":{"line":62,"column":5}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":47,"column":24},"end":{"line":47,"column":28}},"loc":{"start":{"line":47,"column":31},"end":{"line":52,"column":9}}},"4":{"name":"(anonymous_4)","decl":{"start":{"line":54,"column":13},"end":{"line":54,"column":16}},"loc":{"start":{"line":54,"column":19},"end":{"line":61,"column":7}}},"5":{"name":"(anonymous_5)","decl":{"start":{"line":64,"column":49},"end":{"line":64,"column":50}},"loc":{"start":{"line":64,"column":94},"end":{"line":70,"column":5}}},"6":{"name":"(anonymous_6)","decl":{"start":{"line":66,"column":41},"end":{"line":66,"column":47}},"loc":{"start":{"line":66,"column":50},"end":{"line":68,"column":9}}}},"branchMap":{"0":{"loc":{"start":{"line":19,"column":38},"end":{"line":19,"column":58}},"type":"binary-expr","locations":[{"start":{"line":19,"column":38},"end":{"line":19,"column":52}},{"start":{"line":19,"column":56},"end":{"line":19,"column":58}}]},"1":{"loc":{"start":{"line":26,"column":26},"end":{"line":26,"column":47}},"type":"default-arg","locations":[{"start":{"line":26,"column":46},"end":{"line":26,"column":47}}]},"2":{"loc":{"start":{"line":37,"column":8},"end":{"line":39,"column":null}},"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":39,"column":null}}]},"3":{"loc":{"start":{"line":37,"column":36},"end":{"line":37,"column":53}},"type":"binary-expr","locations":[{"start":{"line":37,"column":36},"end":{"line":37,"column":45}},{"start":{"line":37,"column":49},"end":{"line":37,"column":53}}]},"4":{"loc":{"start":{"line":42,"column":6},"end":{"line":44,"column":null}},"type":"if","locations":[{"start":{"line":42,"column":6},"end":{"line":44,"column":null}}]}},"s":{"0":23,"1":23,"2":23,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"b":{"0":[0,0],"1":[0],"2":[0],"3":[0,0],"4":[0]}},"/home/flakie/package/packages/client-search/src/methods/index/clearObjects.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/clearObjects.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":88}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"3":{"start":{"line":8,"column":13},"end":{"line":21,"column":2}},"4":{"start":{"line":9,"column":2},"end":{"line":20,"column":4}},"5":{"start":{"line":10,"column":4},"end":{"line":19,"column":6}},"6":{"start":{"line":18,"column":40},"end":{"line":18,"column":91}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":28},"end":{"line":8,"column":29}},"loc":{"start":{"line":8,"column":50},"end":{"line":21,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":10}},"loc":{"start":{"line":9,"column":88},"end":{"line":20,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":6},"end":{"line":18,"column":7}},"loc":{"start":{"line":18,"column":40},"end":{"line":18,"column":91}}}},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":23,"4":0,"5":0,"6":0},"f":{"0":0,"1":0,"2":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/index/clearRules.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/clearRules.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":88}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":82}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":81}},"4":{"start":{"line":7,"column":13},"end":{"line":28,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":27,"column":4}},"6":{"start":{"line":11,"column":46},"end":{"line":11,"column":66}},"7":{"start":{"line":12,"column":33},"end":{"line":12,"column":68}},"8":{"start":{"line":13,"column":4},"end":{"line":15,"column":null}},"9":{"start":{"line":14,"column":6},"end":{"line":14,"column":65}},"10":{"start":{"line":17,"column":4},"end":{"line":26,"column":6}},"11":{"start":{"line":25,"column":40},"end":{"line":25,"column":91}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":26},"end":{"line":7,"column":27}},"loc":{"start":{"line":7,"column":48},"end":{"line":28,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":null}},"loc":{"start":{"line":10,"column":49},"end":{"line":27,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":25,"column":6},"end":{"line":25,"column":7}},"loc":{"start":{"line":25,"column":40},"end":{"line":25,"column":91}}}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":46},"end":{"line":11,"column":66}},"type":"binary-expr","locations":[{"start":{"line":11,"column":46},"end":{"line":11,"column":60}},{"start":{"line":11,"column":64},"end":{"line":11,"column":66}}]},"1":{"loc":{"start":{"line":13,"column":4},"end":{"line":15,"column":null}},"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":15,"column":null}}]}},"s":{"0":23,"1":23,"2":23,"3":23,"4":23,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"f":{"0":0,"1":0,"2":0},"b":{"0":[0,0],"1":[0]}},"/home/flakie/package/packages/client-search/src/methods/index/clearSynonyms.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/clearSynonyms.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":88}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":82}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":84}},"4":{"start":{"line":7,"column":13},"end":{"line":29,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":28,"column":4}},"6":{"start":{"line":11,"column":46},"end":{"line":11,"column":66}},"7":{"start":{"line":13,"column":33},"end":{"line":13,"column":68}},"8":{"start":{"line":14,"column":4},"end":{"line":16,"column":null}},"9":{"start":{"line":15,"column":6},"end":{"line":15,"column":65}},"10":{"start":{"line":18,"column":4},"end":{"line":27,"column":6}},"11":{"start":{"line":26,"column":40},"end":{"line":26,"column":91}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":29},"end":{"line":7,"column":30}},"loc":{"start":{"line":7,"column":51},"end":{"line":29,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":null}},"loc":{"start":{"line":10,"column":49},"end":{"line":28,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":26,"column":6},"end":{"line":26,"column":7}},"loc":{"start":{"line":26,"column":40},"end":{"line":26,"column":91}}}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":46},"end":{"line":11,"column":66}},"type":"binary-expr","locations":[{"start":{"line":11,"column":46},"end":{"line":11,"column":60}},{"start":{"line":11,"column":64},"end":{"line":11,"column":66}}]},"1":{"loc":{"start":{"line":14,"column":4},"end":{"line":16,"column":null}},"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":16,"column":null}}]}},"s":{"0":23,"1":23,"2":23,"3":23,"4":23,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"f":{"0":0,"1":0,"2":0},"b":{"0":[0,0],"1":[0]}},"/home/flakie/package/packages/client-search/src/methods/index/deleteBy.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/deleteBy.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":88}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"3":{"start":{"line":8,"column":13},"end":{"line":25,"column":2}},"4":{"start":{"line":9,"column":2},"end":{"line":24,"column":4}},"5":{"start":{"line":13,"column":4},"end":{"line":23,"column":6}},"6":{"start":{"line":22,"column":40},"end":{"line":22,"column":91}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":24},"end":{"line":8,"column":25}},"loc":{"start":{"line":8,"column":46},"end":{"line":25,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":null}},"loc":{"start":{"line":12,"column":49},"end":{"line":24,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":22,"column":6},"end":{"line":22,"column":7}},"loc":{"start":{"line":22,"column":40},"end":{"line":22,"column":91}}}},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":23,"4":0,"5":0,"6":0},"f":{"0":0,"1":0,"2":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/index/deleteIndex.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/deleteIndex.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":88}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"3":{"start":{"line":8,"column":13},"end":{"line":21,"column":2}},"4":{"start":{"line":9,"column":2},"end":{"line":20,"column":4}},"5":{"start":{"line":10,"column":4},"end":{"line":19,"column":6}},"6":{"start":{"line":18,"column":40},"end":{"line":18,"column":91}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":27},"end":{"line":8,"column":28}},"loc":{"start":{"line":8,"column":49},"end":{"line":21,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":10}},"loc":{"start":{"line":9,"column":88},"end":{"line":20,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":6},"end":{"line":18,"column":7}},"loc":{"start":{"line":18,"column":40},"end":{"line":18,"column":91}}}},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":23,"4":0,"5":0,"6":0},"f":{"0":0,"1":0,"2":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/index/deleteObject.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/deleteObject.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":80}},"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":77}},"2":{"start":{"line":6,"column":13},"end":{"line":18,"column":2}},"3":{"start":{"line":7,"column":2},"end":{"line":17,"column":4}},"4":{"start":{"line":11,"column":4},"end":{"line":16,"column":6}},"5":{"start":{"line":13,"column":8},"end":{"line":13,"column":47}},"6":{"start":{"line":15,"column":40},"end":{"line":15,"column":91}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":28},"end":{"line":6,"column":29}},"loc":{"start":{"line":6,"column":50},"end":{"line":18,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":null}},"loc":{"start":{"line":10,"column":49},"end":{"line":17,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":59},"end":{"line":12,"column":67}},"loc":{"start":{"line":12,"column":70},"end":{"line":14,"column":7}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":15,"column":6},"end":{"line":15,"column":7}},"loc":{"start":{"line":15,"column":40},"end":{"line":15,"column":91}}}},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":0,"4":0,"5":0,"6":0},"f":{"0":0,"1":0,"2":0,"3":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/index/deleteObjects.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/deleteObjects.ts","statementMap":{"0":{"start":{"line":4,"column":0},"end":{"line":4,"column":null}},"1":{"start":{"line":12,"column":13},"end":{"line":23,"column":2}},"2":{"start":{"line":13,"column":2},"end":{"line":22,"column":4}},"3":{"start":{"line":17,"column":20},"end":{"line":19,"column":6}},"4":{"start":{"line":18,"column":6},"end":{"line":18,"column":26}},"5":{"start":{"line":21,"column":4},"end":{"line":21,"column":85}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":29},"end":{"line":12,"column":30}},"loc":{"start":{"line":12,"column":51},"end":{"line":23,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":9},"end":{"line":13,"column":null}},"loc":{"start":{"line":16,"column":55},"end":{"line":22,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":34},"end":{"line":17,"column":42}},"loc":{"start":{"line":17,"column":45},"end":{"line":19,"column":5}}}},"branchMap":{},"s":{"0":23,"1":23,"2":0,"3":0,"4":0,"5":0},"f":{"0":0,"1":0,"2":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/index/deleteRule.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/deleteRule.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":88}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":82}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"4":{"start":{"line":7,"column":13},"end":{"line":30,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":29,"column":4}},"6":{"start":{"line":12,"column":46},"end":{"line":12,"column":66}},"7":{"start":{"line":14,"column":33},"end":{"line":14,"column":68}},"8":{"start":{"line":15,"column":4},"end":{"line":17,"column":null}},"9":{"start":{"line":16,"column":6},"end":{"line":16,"column":65}},"10":{"start":{"line":19,"column":4},"end":{"line":28,"column":6}},"11":{"start":{"line":27,"column":40},"end":{"line":27,"column":91}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":26},"end":{"line":7,"column":27}},"loc":{"start":{"line":7,"column":48},"end":{"line":30,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":null}},"loc":{"start":{"line":11,"column":49},"end":{"line":29,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":27,"column":6},"end":{"line":27,"column":7}},"loc":{"start":{"line":27,"column":40},"end":{"line":27,"column":91}}}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":46},"end":{"line":12,"column":66}},"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":60}},{"start":{"line":12,"column":64},"end":{"line":12,"column":66}}]},"1":{"loc":{"start":{"line":15,"column":4},"end":{"line":17,"column":null}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":17,"column":null}}]}},"s":{"0":23,"1":23,"2":23,"3":23,"4":23,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"f":{"0":0,"1":0,"2":0},"b":{"0":[0,0],"1":[0]}},"/home/flakie/package/packages/client-search/src/methods/index/deleteSynonym.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/deleteSynonym.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":88}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":82}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":84}},"4":{"start":{"line":7,"column":13},"end":{"line":30,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":29,"column":4}},"6":{"start":{"line":12,"column":46},"end":{"line":12,"column":66}},"7":{"start":{"line":14,"column":33},"end":{"line":14,"column":68}},"8":{"start":{"line":15,"column":4},"end":{"line":17,"column":null}},"9":{"start":{"line":16,"column":6},"end":{"line":16,"column":65}},"10":{"start":{"line":19,"column":4},"end":{"line":28,"column":6}},"11":{"start":{"line":27,"column":40},"end":{"line":27,"column":91}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":29},"end":{"line":7,"column":30}},"loc":{"start":{"line":7,"column":51},"end":{"line":30,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":null}},"loc":{"start":{"line":11,"column":49},"end":{"line":29,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":27,"column":6},"end":{"line":27,"column":7}},"loc":{"start":{"line":27,"column":40},"end":{"line":27,"column":91}}}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":46},"end":{"line":12,"column":66}},"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":60}},{"start":{"line":12,"column":64},"end":{"line":12,"column":66}}]},"1":{"loc":{"start":{"line":15,"column":4},"end":{"line":17,"column":null}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":17,"column":null}}]}},"s":{"0":23,"1":23,"2":23,"3":23,"4":23,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"f":{"0":0,"1":0,"2":0},"b":{"0":[0,0],"1":[0]}},"/home/flakie/package/packages/client-search/src/methods/index/exists.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/exists.ts","statementMap":{"0":{"start":{"line":4,"column":0},"end":{"line":4,"column":32}},"1":{"start":{"line":6,"column":13},"end":{"line":18,"column":2}},"2":{"start":{"line":7,"column":2},"end":{"line":17,"column":4}},"3":{"start":{"line":8,"column":4},"end":{"line":16,"column":9}},"4":{"start":{"line":9,"column":18},"end":{"line":9,"column":22}},"5":{"start":{"line":11,"column":8},"end":{"line":13,"column":null}},"6":{"start":{"line":12,"column":10},"end":{"line":12,"column":22}},"7":{"start":{"line":15,"column":8},"end":{"line":15,"column":21}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":22},"end":{"line":6,"column":23}},"loc":{"start":{"line":6,"column":44},"end":{"line":18,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":10}},"loc":{"start":{"line":7,"column":73},"end":{"line":17,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":12},"end":{"line":9,"column":15}},"loc":{"start":{"line":9,"column":18},"end":{"line":9,"column":22}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":10,"column":13},"end":{"line":10,"column":18}},"loc":{"start":{"line":10,"column":21},"end":{"line":16,"column":7}}}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":8},"end":{"line":13,"column":null}},"type":"if","locations":[{"start":{"line":11,"column":8},"end":{"line":13,"column":null}}]}},"s":{"0":23,"1":23,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"f":{"0":0,"1":0,"2":0,"3":0},"b":{"0":[0]}},"/home/flakie/package/packages/client-search/src/methods/index/findAnswers.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/findAnswers.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":48}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":7,"column":13},"end":{"line":26,"column":2}},"3":{"start":{"line":8,"column":2},"end":{"line":25,"column":4}},"4":{"start":{"line":13,"column":4},"end":{"line":24,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":27},"end":{"line":7,"column":28}},"loc":{"start":{"line":7,"column":49},"end":{"line":26,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":null}},"loc":{"start":{"line":12,"column":55},"end":{"line":25,"column":3}}}},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":0,"4":0},"f":{"0":0,"1":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/index/findObject.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/findObject.ts","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":3,"column":null}},"1":{"start":{"line":12,"column":13},"end":{"line":49,"column":2}},"2":{"start":{"line":13,"column":2},"end":{"line":48,"column":4}},"3":{"start":{"line":17,"column":44},"end":{"line":17,"column":64}},"4":{"start":{"line":20,"column":15},"end":{"line":20,"column":16}},"5":{"start":{"line":22,"column":24},"end":{"line":45,"column":5}},"6":{"start":{"line":23,"column":6},"end":{"line":44,"column":9}},"7":{"start":{"line":25,"column":8},"end":{"line":34,"column":null}},"8":{"start":{"line":27,"column":10},"end":{"line":33,"column":null}},"9":{"start":{"line":28,"column":12},"end":{"line":32,"column":14}},"10":{"start":{"line":36,"column":8},"end":{"line":36,"column":15}},"11":{"start":{"line":39,"column":8},"end":{"line":41,"column":null}},"12":{"start":{"line":40,"column":10},"end":{"line":40,"column":44}},"13":{"start":{"line":43,"column":8},"end":{"line":43,"column":29}},"14":{"start":{"line":47,"column":4},"end":{"line":47,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":26},"end":{"line":12,"column":27}},"loc":{"start":{"line":12,"column":48},"end":{"line":49,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":9},"end":{"line":13,"column":null}},"loc":{"start":{"line":16,"column":54},"end":{"line":48,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":22,"column":24},"end":{"line":22,"column":75}},"loc":{"start":{"line":22,"column":77},"end":{"line":45,"column":5}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":23,"column":75},"end":{"line":23,"column":81}},"loc":{"start":{"line":23,"column":84},"end":{"line":44,"column":7}}}},"branchMap":{"0":{"loc":{"start":{"line":17,"column":44},"end":{"line":17,"column":64}},"type":"binary-expr","locations":[{"start":{"line":17,"column":44},"end":{"line":17,"column":58}},{"start":{"line":17,"column":62},"end":{"line":17,"column":64}}]},"1":{"loc":{"start":{"line":23,"column":35},"end":{"line":23,"column":46}},"type":"binary-expr","locations":[{"start":{"line":23,"column":35},"end":{"line":23,"column":40}},{"start":{"line":23,"column":44},"end":{"line":23,"column":46}}]},"2":{"loc":{"start":{"line":27,"column":10},"end":{"line":33,"column":null}},"type":"if","locations":[{"start":{"line":27,"column":10},"end":{"line":33,"column":null}}]},"3":{"loc":{"start":{"line":39,"column":8},"end":{"line":41,"column":null}},"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":41,"column":null}}]},"4":{"loc":{"start":{"line":39,"column":12},"end":{"line":39,"column":56}},"type":"binary-expr","locations":[{"start":{"line":39,"column":12},"end":{"line":39,"column":30}},{"start":{"line":39,"column":34},"end":{"line":39,"column":56}}]}},"s":{"0":23,"1":23,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"f":{"0":0,"1":0,"2":0,"3":0},"b":{"0":[0,0],"1":[0,0],"2":[0],"3":[0],"4":[0,0]}},"/home/flakie/package/packages/client-search/src/methods/index/getObject.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/getObject.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":48}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":7,"column":13},"end":{"line":20,"column":2}},"3":{"start":{"line":8,"column":2},"end":{"line":19,"column":4}},"4":{"start":{"line":12,"column":4},"end":{"line":18,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":25},"end":{"line":7,"column":26}},"loc":{"start":{"line":7,"column":47},"end":{"line":20,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":null}},"loc":{"start":{"line":11,"column":55},"end":{"line":19,"column":3}}}},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":0,"4":0},"f":{"0":0,"1":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/index/getObjectPosition.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/getObjectPosition.ts","statementMap":{"0":{"start":{"line":3,"column":13},"end":{"line":14,"column":2}},"1":{"start":{"line":4,"column":2},"end":{"line":13,"column":4}},"2":{"start":{"line":6,"column":4},"end":{"line":10,"column":null}},"3":{"start":{"line":7,"column":6},"end":{"line":9,"column":null}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":38}},"5":{"start":{"line":12,"column":4},"end":{"line":12,"column":14}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":33},"end":{"line":3,"column":45}},"loc":{"start":{"line":3,"column":47},"end":{"line":14,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":10}},"loc":{"start":{"line":4,"column":79},"end":{"line":13,"column":3}}}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":6},"end":{"line":9,"column":null}},"type":"if","locations":[{"start":{"line":7,"column":6},"end":{"line":9,"column":null}}]}},"s":{"0":23,"1":0,"2":0,"3":0,"4":0,"5":0},"f":{"0":0,"1":0},"b":{"0":[0]}},"/home/flakie/package/packages/client-search/src/methods/index/getObjects.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/getObjects.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":55}},"1":{"start":{"line":6,"column":13},"end":{"line":32,"column":2}},"2":{"start":{"line":7,"column":2},"end":{"line":31,"column":4}},"3":{"start":{"line":11,"column":49},"end":{"line":11,"column":69}},"4":{"start":{"line":13,"column":21},"end":{"line":19,"column":6}},"5":{"start":{"line":14,"column":6},"end":{"line":18,"column":8}},"6":{"start":{"line":21,"column":4},"end":{"line":30,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":26},"end":{"line":6,"column":27}},"loc":{"start":{"line":6,"column":48},"end":{"line":32,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":null}},"loc":{"start":{"line":10,"column":54},"end":{"line":31,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":35},"end":{"line":13,"column":43}},"loc":{"start":{"line":13,"column":46},"end":{"line":19,"column":5}}}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":49},"end":{"line":11,"column":69}},"type":"binary-expr","locations":[{"start":{"line":11,"column":49},"end":{"line":11,"column":63}},{"start":{"line":11,"column":67},"end":{"line":11,"column":69}}]},"1":{"loc":{"start":{"line":17,"column":12},"end":{"line":17,"column":64}},"type":"cond-expr","locations":[{"start":{"line":17,"column":35},"end":{"line":17,"column":59}},{"start":{"line":17,"column":62},"end":{"line":17,"column":64}}]}},"s":{"0":23,"1":23,"2":0,"3":0,"4":0,"5":0,"6":0},"f":{"0":0,"1":0,"2":0},"b":{"0":[0,0],"1":[0,0]}},"/home/flakie/package/packages/client-search/src/methods/index/getRule.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/getRule.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":48}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":7,"column":13},"end":{"line":17,"column":2}},"3":{"start":{"line":8,"column":2},"end":{"line":16,"column":4}},"4":{"start":{"line":9,"column":4},"end":{"line":15,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":23},"end":{"line":7,"column":24}},"loc":{"start":{"line":7,"column":45},"end":{"line":17,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":10}},"loc":{"start":{"line":8,"column":88},"end":{"line":16,"column":3}}}},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":0,"4":0},"f":{"0":0,"1":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/index/getSettings.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/getSettings.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":48}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":7,"column":13},"end":{"line":20,"column":2}},"3":{"start":{"line":8,"column":2},"end":{"line":19,"column":4}},"4":{"start":{"line":9,"column":4},"end":{"line":18,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":27},"end":{"line":7,"column":28}},"loc":{"start":{"line":7,"column":49},"end":{"line":20,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":10}},"loc":{"start":{"line":8,"column":74},"end":{"line":19,"column":3}}}},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":0,"4":0},"f":{"0":0,"1":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/index/getSynonym.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/getSynonym.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":48}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":7,"column":13},"end":{"line":17,"column":2}},"3":{"start":{"line":8,"column":2},"end":{"line":16,"column":4}},"4":{"start":{"line":9,"column":4},"end":{"line":15,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":26},"end":{"line":7,"column":27}},"loc":{"start":{"line":7,"column":48},"end":{"line":17,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":10}},"loc":{"start":{"line":8,"column":91},"end":{"line":16,"column":3}}}},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":0,"4":0},"f":{"0":0,"1":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/index/getTask.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/getTask.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":48}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":7,"column":13},"end":{"line":20,"column":2}},"3":{"start":{"line":8,"column":2},"end":{"line":19,"column":4}},"4":{"start":{"line":12,"column":4},"end":{"line":18,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":23},"end":{"line":7,"column":24}},"loc":{"start":{"line":7,"column":45},"end":{"line":20,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":null}},"loc":{"start":{"line":11,"column":45},"end":{"line":19,"column":3}}}},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":0,"4":0},"f":{"0":0,"1":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/index/partialUpdateObject.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/partialUpdateObject.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":80}},"1":{"start":{"line":10,"column":0},"end":{"line":10,"column":51}},"2":{"start":{"line":12,"column":13},"end":{"line":27,"column":2}},"3":{"start":{"line":13,"column":2},"end":{"line":26,"column":4}},"4":{"start":{"line":17,"column":4},"end":{"line":25,"column":6}},"5":{"start":{"line":19,"column":8},"end":{"line":22,"column":10}},"6":{"start":{"line":24,"column":40},"end":{"line":24,"column":91}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":35},"end":{"line":12,"column":36}},"loc":{"start":{"line":12,"column":57},"end":{"line":27,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":9},"end":{"line":13,"column":null}},"loc":{"start":{"line":16,"column":62},"end":{"line":26,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":64},"end":{"line":18,"column":72}},"loc":{"start":{"line":18,"column":75},"end":{"line":23,"column":7}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":6},"end":{"line":24,"column":7}},"loc":{"start":{"line":24,"column":40},"end":{"line":24,"column":91}}}},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":0,"4":0,"5":0,"6":0},"f":{"0":0,"1":0,"2":0,"3":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/index/partialUpdateObjects.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/partialUpdateObjects.ts","statementMap":{"0":{"start":{"line":4,"column":0},"end":{"line":4,"column":null}},"1":{"start":{"line":13,"column":13},"end":{"line":26,"column":2}},"2":{"start":{"line":14,"column":2},"end":{"line":25,"column":4}},"3":{"start":{"line":18,"column":46},"end":{"line":18,"column":66}},"4":{"start":{"line":20,"column":19},"end":{"line":22,"column":51}},"5":{"start":{"line":24,"column":4},"end":{"line":24,"column":56}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":36},"end":{"line":13,"column":37}},"loc":{"start":{"line":13,"column":58},"end":{"line":26,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":null}},"loc":{"start":{"line":17,"column":55},"end":{"line":25,"column":3}}}},"branchMap":{"0":{"loc":{"start":{"line":18,"column":46},"end":{"line":18,"column":66}},"type":"binary-expr","locations":[{"start":{"line":18,"column":46},"end":{"line":18,"column":60}},{"start":{"line":18,"column":64},"end":{"line":18,"column":66}}]},"1":{"loc":{"start":{"line":20,"column":19},"end":{"line":22,"column":51}},"type":"cond-expr","locations":[{"start":{"line":21,"column":8},"end":{"line":21,"column":43}},{"start":{"line":22,"column":8},"end":{"line":22,"column":51}}]}},"s":{"0":23,"1":23,"2":0,"3":0,"4":0,"5":0},"f":{"0":0,"1":0},"b":{"0":[0,0],"1":[0,0]}},"/home/flakie/package/packages/client-search/src/methods/index/replaceAllObjects.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/replaceAllObjects.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":88}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":null}},"3":{"start":{"line":16,"column":13},"end":{"line":111,"column":2}},"4":{"start":{"line":17,"column":2},"end":{"line":110,"column":4}},"5":{"start":{"line":21,"column":76},"end":{"line":21,"column":96}},"6":{"start":{"line":23,"column":22},"end":{"line":43,"column":5}},"7":{"start":{"line":29,"column":6},"end":{"line":42,"column":8}},"8":{"start":{"line":41,"column":42},"end":{"line":41,"column":93}},"9":{"start":{"line":45,"column":25},"end":{"line":47,"column":19}},"10":{"start":{"line":49,"column":31},"end":{"line":49,"column":70}},"11":{"start":{"line":51,"column":35},"end":{"line":55,"column":6}},"12":{"start":{"line":63,"column":8},"end":{"line":63,"column":10}},"13":{"start":{"line":65,"column":32},"end":{"line":68,"column":6}},"14":{"start":{"line":71,"column":4},"end":{"line":71,"column":40}},"15":{"start":{"line":73,"column":50},"end":{"line":103,"column":8}},"16":{"start":{"line":78,"column":43},"end":{"line":82,"column":10}},"17":{"start":{"line":85,"column":8},"end":{"line":85,"column":51}},"18":{"start":{"line":87,"column":8},"end":{"line":87,"column":92}},"19":{"start":{"line":90,"column":36},"end":{"line":90,"column":98}},"20":{"start":{"line":93,"column":8},"end":{"line":93,"column":44}},"21":{"start":{"line":95,"column":8},"end":{"line":95,"column":78}},"22":{"start":{"line":97,"column":18},"end":{"line":97,"column":40}},"23":{"start":{"line":99,"column":8},"end":{"line":102,"column":10}},"24":{"start":{"line":105,"column":4},"end":{"line":109,"column":7}},"25":{"start":{"line":106,"column":6},"end":{"line":108,"column":8}},"26":{"start":{"line":107,"column":34},"end":{"line":107,"column":91}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":16,"column":33},"end":{"line":16,"column":34}},"loc":{"start":{"line":16,"column":55},"end":{"line":111,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":17,"column":9},"end":{"line":17,"column":null}},"loc":{"start":{"line":20,"column":55},"end":{"line":110,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":23,"column":22},"end":{"line":23,"column":null}},"loc":{"start":{"line":28,"column":59},"end":{"line":43,"column":5}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":41,"column":8},"end":{"line":41,"column":9}},"loc":{"start":{"line":41,"column":42},"end":{"line":41,"column":93}}},"4":{"name":"(anonymous_4)","decl":{"start":{"line":77,"column":12},"end":{"line":77,"column":15}},"loc":{"start":{"line":77,"column":17},"end":{"line":88,"column":7}}},"5":{"name":"(anonymous_5)","decl":{"start":{"line":89,"column":12},"end":{"line":89,"column":15}},"loc":{"start":{"line":89,"column":17},"end":{"line":96,"column":7}}},"6":{"name":"(anonymous_6)","decl":{"start":{"line":97,"column":12},"end":{"line":97,"column":15}},"loc":{"start":{"line":97,"column":18},"end":{"line":97,"column":40}}},"7":{"name":"(anonymous_7)","decl":{"start":{"line":98,"column":12},"end":{"line":98,"column":13}},"loc":{"start":{"line":98,"column":66},"end":{"line":103,"column":7}}},"8":{"name":"(anonymous_8)","decl":{"start":{"line":105,"column":41},"end":{"line":105,"column":42}},"loc":{"start":{"line":105,"column":67},"end":{"line":109,"column":5}}},"9":{"name":"(anonymous_9)","decl":{"start":{"line":107,"column":22},"end":{"line":107,"column":30}},"loc":{"start":{"line":107,"column":34},"end":{"line":107,"column":91}}}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":76},"end":{"line":21,"column":96}},"type":"binary-expr","locations":[{"start":{"line":21,"column":76},"end":{"line":21,"column":90}},{"start":{"line":21,"column":94},"end":{"line":21,"column":96}}]},"1":{"loc":{"start":{"line":73,"column":51},"end":{"line":75,"column":27}},"type":"cond-expr","locations":[{"start":{"line":74,"column":8},"end":{"line":74,"column":41}},{"start":{"line":75,"column":8},"end":{"line":75,"column":27}}]},"2":{"loc":{"start":{"line":87,"column":15},"end":{"line":87,"column":91}},"type":"cond-expr","locations":[{"start":{"line":87,"column":22},"end":{"line":87,"column":62}},{"start":{"line":87,"column":65},"end":{"line":87,"column":91}}]},"3":{"loc":{"start":{"line":95,"column":15},"end":{"line":95,"column":77}},"type":"cond-expr","locations":[{"start":{"line":95,"column":22},"end":{"line":95,"column":55}},{"start":{"line":95,"column":58},"end":{"line":95,"column":77}}]}},"s":{"0":23,"1":23,"2":23,"3":23,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]}},"/home/flakie/package/packages/client-search/src/methods/index/replaceAllRules.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/replaceAllRules.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":30}},"1":{"start":{"line":7,"column":13},"end":{"line":17,"column":2}},"2":{"start":{"line":8,"column":2},"end":{"line":16,"column":4}},"3":{"start":{"line":12,"column":4},"end":{"line":15,"column":7}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":31},"end":{"line":7,"column":32}},"loc":{"start":{"line":7,"column":53},"end":{"line":17,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":null}},"loc":{"start":{"line":11,"column":52},"end":{"line":16,"column":3}}}},"branchMap":{},"s":{"0":23,"1":23,"2":0,"3":0},"f":{"0":0,"1":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/index/replaceAllSynonyms.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/replaceAllSynonyms.ts","statementMap":{"0":{"start":{"line":6,"column":0},"end":{"line":6,"column":33}},"1":{"start":{"line":8,"column":13},"end":{"line":22,"column":2}},"2":{"start":{"line":9,"column":2},"end":{"line":21,"column":4}},"3":{"start":{"line":17,"column":4},"end":{"line":20,"column":7}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":34},"end":{"line":8,"column":35}},"loc":{"start":{"line":8,"column":56},"end":{"line":22,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":null}},"loc":{"start":{"line":16,"column":55},"end":{"line":21,"column":3}}}},"branchMap":{},"s":{"0":23,"1":23,"2":0,"3":0},"f":{"0":0,"1":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/index/saveObject.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/saveObject.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":80}},"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":null}},"2":{"start":{"line":13,"column":13},"end":{"line":28,"column":2}},"3":{"start":{"line":14,"column":2},"end":{"line":27,"column":4}},"4":{"start":{"line":18,"column":4},"end":{"line":26,"column":6}},"5":{"start":{"line":20,"column":8},"end":{"line":23,"column":10}},"6":{"start":{"line":25,"column":40},"end":{"line":25,"column":91}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":26},"end":{"line":13,"column":27}},"loc":{"start":{"line":13,"column":48},"end":{"line":28,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":null}},"loc":{"start":{"line":17,"column":53},"end":{"line":27,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":19,"column":75},"end":{"line":19,"column":83}},"loc":{"start":{"line":19,"column":86},"end":{"line":24,"column":7}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":25,"column":6},"end":{"line":25,"column":7}},"loc":{"start":{"line":25,"column":40},"end":{"line":25,"column":91}}}},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":0,"4":0,"5":0,"6":0},"f":{"0":0,"1":0,"2":0,"3":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/index/saveObjects.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/saveObjects.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":80}},"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":null}},"2":{"start":{"line":14,"column":13},"end":{"line":36,"column":2}},"3":{"start":{"line":15,"column":2},"end":{"line":35,"column":4}},"4":{"start":{"line":19,"column":59},"end":{"line":19,"column":79}},"5":{"start":{"line":21,"column":19},"end":{"line":23,"column":36}},"6":{"start":{"line":25,"column":4},"end":{"line":32,"column":null}},"7":{"start":{"line":27,"column":6},"end":{"line":31,"column":null}},"8":{"start":{"line":28,"column":8},"end":{"line":30,"column":null}},"9":{"start":{"line":29,"column":10},"end":{"line":29,"column":85}},"10":{"start":{"line":34,"column":4},"end":{"line":34,"column":56}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":27},"end":{"line":14,"column":28}},"loc":{"start":{"line":14,"column":49},"end":{"line":36,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":9},"end":{"line":15,"column":null}},"loc":{"start":{"line":18,"column":55},"end":{"line":35,"column":3}}}},"branchMap":{"0":{"loc":{"start":{"line":19,"column":59},"end":{"line":19,"column":79}},"type":"binary-expr","locations":[{"start":{"line":19,"column":59},"end":{"line":19,"column":73}},{"start":{"line":19,"column":77},"end":{"line":19,"column":79}}]},"1":{"loc":{"start":{"line":21,"column":19},"end":{"line":23,"column":36}},"type":"cond-expr","locations":[{"start":{"line":22,"column":8},"end":{"line":22,"column":33}},{"start":{"line":23,"column":8},"end":{"line":23,"column":36}}]},"2":{"loc":{"start":{"line":25,"column":4},"end":{"line":32,"column":null}},"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":32,"column":null}}]},"3":{"loc":{"start":{"line":28,"column":8},"end":{"line":30,"column":null}},"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":30,"column":null}}]}},"s":{"0":23,"1":23,"2":23,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"f":{"0":0,"1":0},"b":{"0":[0,0],"1":[0,0],"2":[0],"3":[0]}},"/home/flakie/package/packages/client-search/src/methods/index/saveRule.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/saveRule.ts","statementMap":{"0":{"start":{"line":4,"column":0},"end":{"line":4,"column":89}},"1":{"start":{"line":6,"column":13},"end":{"line":13,"column":2}},"2":{"start":{"line":7,"column":2},"end":{"line":12,"column":4}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":51}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":24},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":46},"end":{"line":13,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":null}},"loc":{"start":{"line":10,"column":51},"end":{"line":12,"column":3}}}},"branchMap":{},"s":{"0":23,"1":23,"2":0,"3":0},"f":{"0":0,"1":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/index/saveRules.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/saveRules.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":88}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":82}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"4":{"start":{"line":8,"column":13},"end":{"line":36,"column":2}},"5":{"start":{"line":9,"column":2},"end":{"line":35,"column":4}},"6":{"start":{"line":13,"column":66},"end":{"line":13,"column":86}},"7":{"start":{"line":14,"column":33},"end":{"line":14,"column":68}},"8":{"start":{"line":16,"column":4},"end":{"line":18,"column":null}},"9":{"start":{"line":17,"column":6},"end":{"line":17,"column":65}},"10":{"start":{"line":20,"column":4},"end":{"line":22,"column":null}},"11":{"start":{"line":21,"column":6},"end":{"line":21,"column":66}},"12":{"start":{"line":24,"column":4},"end":{"line":34,"column":6}},"13":{"start":{"line":33,"column":40},"end":{"line":33,"column":91}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":25},"end":{"line":8,"column":26}},"loc":{"start":{"line":8,"column":47},"end":{"line":36,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":null}},"loc":{"start":{"line":12,"column":52},"end":{"line":35,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":33,"column":6},"end":{"line":33,"column":7}},"loc":{"start":{"line":33,"column":40},"end":{"line":33,"column":91}}}},"branchMap":{"0":{"loc":{"start":{"line":13,"column":66},"end":{"line":13,"column":86}},"type":"binary-expr","locations":[{"start":{"line":13,"column":66},"end":{"line":13,"column":80}},{"start":{"line":13,"column":84},"end":{"line":13,"column":86}}]},"1":{"loc":{"start":{"line":16,"column":4},"end":{"line":18,"column":null}},"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":18,"column":null}}]},"2":{"loc":{"start":{"line":20,"column":4},"end":{"line":22,"column":null}},"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":22,"column":null}}]}},"s":{"0":23,"1":23,"2":23,"3":23,"4":23,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"f":{"0":0,"1":0,"2":0},"b":{"0":[0,0],"1":[0],"2":[0]}},"/home/flakie/package/packages/client-search/src/methods/index/saveSynonym.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/saveSynonym.ts","statementMap":{"0":{"start":{"line":4,"column":0},"end":{"line":4,"column":null}},"1":{"start":{"line":12,"column":13},"end":{"line":19,"column":2}},"2":{"start":{"line":13,"column":2},"end":{"line":18,"column":4}},"3":{"start":{"line":17,"column":4},"end":{"line":17,"column":57}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":27},"end":{"line":12,"column":28}},"loc":{"start":{"line":12,"column":49},"end":{"line":19,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":9},"end":{"line":13,"column":null}},"loc":{"start":{"line":16,"column":54},"end":{"line":18,"column":3}}}},"branchMap":{},"s":{"0":23,"1":23,"2":0,"3":0},"f":{"0":0,"1":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/index/saveSynonyms.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/saveSynonyms.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":88}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":82}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"4":{"start":{"line":8,"column":13},"end":{"line":37,"column":2}},"5":{"start":{"line":9,"column":2},"end":{"line":36,"column":4}},"6":{"start":{"line":14,"column":6},"end":{"line":14,"column":26}},"7":{"start":{"line":15,"column":33},"end":{"line":15,"column":68}},"8":{"start":{"line":17,"column":4},"end":{"line":19,"column":null}},"9":{"start":{"line":18,"column":6},"end":{"line":18,"column":65}},"10":{"start":{"line":21,"column":4},"end":{"line":23,"column":null}},"11":{"start":{"line":22,"column":6},"end":{"line":22,"column":71}},"12":{"start":{"line":25,"column":4},"end":{"line":35,"column":6}},"13":{"start":{"line":34,"column":40},"end":{"line":34,"column":91}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":28},"end":{"line":8,"column":29}},"loc":{"start":{"line":8,"column":50},"end":{"line":37,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":null}},"loc":{"start":{"line":12,"column":55},"end":{"line":36,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":34,"column":6},"end":{"line":34,"column":7}},"loc":{"start":{"line":34,"column":40},"end":{"line":34,"column":91}}}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":6},"end":{"line":14,"column":26}},"type":"binary-expr","locations":[{"start":{"line":14,"column":6},"end":{"line":14,"column":20}},{"start":{"line":14,"column":24},"end":{"line":14,"column":26}}]},"1":{"loc":{"start":{"line":17,"column":4},"end":{"line":19,"column":null}},"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":19,"column":null}}]},"2":{"loc":{"start":{"line":21,"column":4},"end":{"line":23,"column":null}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":23,"column":null}}]},"3":{"loc":{"start":{"line":21,"column":8},"end":{"line":21,"column":56}},"type":"binary-expr","locations":[{"start":{"line":21,"column":8},"end":{"line":21,"column":31}},{"start":{"line":21,"column":35},"end":{"line":21,"column":56}}]}},"s":{"0":23,"1":23,"2":23,"3":23,"4":23,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"f":{"0":0,"1":0,"2":0},"b":{"0":[0,0],"1":[0],"2":[0],"3":[0,0]}},"/home/flakie/package/packages/client-search/src/methods/index/search.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/search.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":48}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":7,"column":13},"end":{"line":24,"column":2}},"3":{"start":{"line":8,"column":2},"end":{"line":23,"column":4}},"4":{"start":{"line":12,"column":4},"end":{"line":22,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":22},"end":{"line":7,"column":23}},"loc":{"start":{"line":7,"column":44},"end":{"line":24,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":null}},"loc":{"start":{"line":11,"column":50},"end":{"line":23,"column":3}}}},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":0,"4":0},"f":{"0":0,"1":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/index/searchForFacetValues.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/searchForFacetValues.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":48}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":7,"column":13},"end":{"line":25,"column":2}},"3":{"start":{"line":8,"column":2},"end":{"line":24,"column":4}},"4":{"start":{"line":13,"column":4},"end":{"line":23,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":36},"end":{"line":7,"column":37}},"loc":{"start":{"line":7,"column":58},"end":{"line":25,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":null}},"loc":{"start":{"line":12,"column":55},"end":{"line":24,"column":3}}}},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":0,"4":0},"f":{"0":0,"1":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/index/searchRules.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/searchRules.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":48}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":7,"column":13},"end":{"line":23,"column":2}},"3":{"start":{"line":8,"column":2},"end":{"line":22,"column":4}},"4":{"start":{"line":12,"column":4},"end":{"line":21,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":27},"end":{"line":7,"column":28}},"loc":{"start":{"line":7,"column":49},"end":{"line":23,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":null}},"loc":{"start":{"line":11,"column":47},"end":{"line":22,"column":3}}}},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":0,"4":0},"f":{"0":0,"1":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/index/searchSynonyms.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/searchSynonyms.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":48}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":7,"column":13},"end":{"line":23,"column":2}},"3":{"start":{"line":8,"column":2},"end":{"line":22,"column":4}},"4":{"start":{"line":12,"column":4},"end":{"line":21,"column":6}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":30},"end":{"line":7,"column":31}},"loc":{"start":{"line":7,"column":52},"end":{"line":23,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":null}},"loc":{"start":{"line":11,"column":49},"end":{"line":22,"column":3}}}},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":0,"4":0},"f":{"0":0,"1":0},"b":{}},"/home/flakie/package/packages/client-search/src/methods/index/setSettings.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/setSettings.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":88}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":82}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":97}},"4":{"start":{"line":7,"column":13},"end":{"line":31,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":30,"column":4}},"6":{"start":{"line":12,"column":46},"end":{"line":12,"column":66}},"7":{"start":{"line":13,"column":33},"end":{"line":13,"column":68}},"8":{"start":{"line":15,"column":4},"end":{"line":17,"column":null}},"9":{"start":{"line":16,"column":6},"end":{"line":16,"column":65}},"10":{"start":{"line":19,"column":4},"end":{"line":29,"column":6}},"11":{"start":{"line":28,"column":40},"end":{"line":28,"column":91}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":27},"end":{"line":7,"column":28}},"loc":{"start":{"line":7,"column":49},"end":{"line":31,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":null}},"loc":{"start":{"line":11,"column":54},"end":{"line":30,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":28,"column":6},"end":{"line":28,"column":7}},"loc":{"start":{"line":28,"column":40},"end":{"line":28,"column":91}}}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":46},"end":{"line":12,"column":66}},"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":60}},{"start":{"line":12,"column":64},"end":{"line":12,"column":66}}]},"1":{"loc":{"start":{"line":15,"column":4},"end":{"line":17,"column":null}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":17,"column":null}}]}},"s":{"0":23,"1":23,"2":23,"3":23,"4":23,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"f":{"0":0,"1":0,"2":0},"b":{"0":[0,0],"1":[0]}},"/home/flakie/package/packages/client-search/src/methods/index/waitTask.ts":{"path":"/home/flakie/package/packages/client-search/src/methods/index/waitTask.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":64}},"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":28}},"2":{"start":{"line":7,"column":13},"end":{"line":15,"column":2}},"3":{"start":{"line":8,"column":2},"end":{"line":14,"column":4}},"4":{"start":{"line":9,"column":4},"end":{"line":13,"column":7}},"5":{"start":{"line":10,"column":6},"end":{"line":12,"column":9}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":69}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":24},"end":{"line":7,"column":25}},"loc":{"start":{"line":7,"column":46},"end":{"line":15,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":10}},"loc":{"start":{"line":8,"column":86},"end":{"line":14,"column":3}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":34},"end":{"line":9,"column":39}},"loc":{"start":{"line":9,"column":42},"end":{"line":13,"column":5}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":10,"column":56},"end":{"line":10,"column":64}},"loc":{"start":{"line":10,"column":67},"end":{"line":12,"column":7}}}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":15},"end":{"line":11,"column":68}},"type":"cond-expr","locations":[{"start":{"line":11,"column":49},"end":{"line":11,"column":56}},{"start":{"line":11,"column":59},"end":{"line":11,"column":68}}]}},"s":{"0":23,"1":23,"2":23,"3":0,"4":0,"5":0,"6":0},"f":{"0":0,"1":0,"2":0,"3":0},"b":{"0":[0,0]}},"/home/flakie/package/packages/client-search/src/types/index.ts":{"path":"/home/flakie/package/packages/client-search/src/types/index.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":36}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":29}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":39}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":40}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":34}},"6":{"start":{"line":11,"column":0},"end":{"line":11,"column":31}},"7":{"start":{"line":12,"column":0},"end":{"line":12,"column":32}},"8":{"start":{"line":13,"column":0},"end":{"line":13,"column":32}},"9":{"start":{"line":14,"column":0},"end":{"line":14,"column":36}},"10":{"start":{"line":15,"column":0},"end":{"line":15,"column":33}},"11":{"start":{"line":16,"column":0},"end":{"line":16,"column":31}},"12":{"start":{"line":17,"column":0},"end":{"line":17,"column":39}},"13":{"start":{"line":18,"column":0},"end":{"line":18,"column":36}},"14":{"start":{"line":19,"column":0},"end":{"line":19,"column":39}},"15":{"start":{"line":20,"column":0},"end":{"line":20,"column":26}},"16":{"start":{"line":21,"column":0},"end":{"line":21,"column":35}},"17":{"start":{"line":22,"column":0},"end":{"line":22,"column":30}},"18":{"start":{"line":23,"column":0},"end":{"line":23,"column":39}},"19":{"start":{"line":24,"column":0},"end":{"line":24,"column":41}},"20":{"start":{"line":25,"column":0},"end":{"line":25,"column":33}},"21":{"start":{"line":26,"column":0},"end":{"line":26,"column":39}},"22":{"start":{"line":27,"column":0},"end":{"line":27,"column":43}},"23":{"start":{"line":28,"column":0},"end":{"line":28,"column":44}},"24":{"start":{"line":29,"column":0},"end":{"line":29,"column":34}},"25":{"start":{"line":30,"column":0},"end":{"line":30,"column":33}},"26":{"start":{"line":31,"column":0},"end":{"line":31,"column":37}},"27":{"start":{"line":32,"column":0},"end":{"line":32,"column":27}},"28":{"start":{"line":33,"column":0},"end":{"line":33,"column":37}},"29":{"start":{"line":34,"column":0},"end":{"line":34,"column":38}},"30":{"start":{"line":35,"column":0},"end":{"line":35,"column":36}},"31":{"start":{"line":36,"column":0},"end":{"line":36,"column":37}},"32":{"start":{"line":37,"column":0},"end":{"line":37,"column":36}},"33":{"start":{"line":38,"column":0},"end":{"line":38,"column":48}},"34":{"start":{"line":39,"column":0},"end":{"line":39,"column":33}},"35":{"start":{"line":40,"column":0},"end":{"line":40,"column":34}},"36":{"start":{"line":41,"column":0},"end":{"line":41,"column":35}},"37":{"start":{"line":42,"column":0},"end":{"line":42,"column":36}},"38":{"start":{"line":43,"column":0},"end":{"line":43,"column":37}},"39":{"start":{"line":44,"column":0},"end":{"line":44,"column":40}},"40":{"start":{"line":45,"column":0},"end":{"line":45,"column":44}},"41":{"start":{"line":46,"column":0},"end":{"line":46,"column":45}},"42":{"start":{"line":47,"column":0},"end":{"line":47,"column":22}},"43":{"start":{"line":48,"column":0},"end":{"line":48,"column":41}},"44":{"start":{"line":49,"column":0},"end":{"line":49,"column":25}},"45":{"start":{"line":50,"column":0},"end":{"line":50,"column":38}},"46":{"start":{"line":51,"column":0},"end":{"line":51,"column":39}},"47":{"start":{"line":52,"column":0},"end":{"line":52,"column":38}},"48":{"start":{"line":53,"column":0},"end":{"line":53,"column":37}},"49":{"start":{"line":54,"column":0},"end":{"line":54,"column":38}},"50":{"start":{"line":55,"column":0},"end":{"line":55,"column":22}},"51":{"start":{"line":56,"column":0},"end":{"line":56,"column":39}},"52":{"start":{"line":57,"column":0},"end":{"line":57,"column":40}},"53":{"start":{"line":58,"column":0},"end":{"line":58,"column":36}},"54":{"start":{"line":59,"column":0},"end":{"line":59,"column":45}},"55":{"start":{"line":60,"column":0},"end":{"line":60,"column":41}},"56":{"start":{"line":61,"column":0},"end":{"line":61,"column":39}},"57":{"start":{"line":62,"column":0},"end":{"line":62,"column":42}},"58":{"start":{"line":63,"column":0},"end":{"line":63,"column":37}},"59":{"start":{"line":64,"column":0},"end":{"line":64,"column":46}},"60":{"start":{"line":65,"column":0},"end":{"line":65,"column":46}},"61":{"start":{"line":66,"column":0},"end":{"line":66,"column":39}},"62":{"start":{"line":67,"column":0},"end":{"line":67,"column":43}},"63":{"start":{"line":68,"column":0},"end":{"line":68,"column":36}},"64":{"start":{"line":69,"column":0},"end":{"line":69,"column":40}},"65":{"start":{"line":70,"column":0},"end":{"line":70,"column":23}},"66":{"start":{"line":71,"column":0},"end":{"line":71,"column":37}},"67":{"start":{"line":72,"column":0},"end":{"line":72,"column":37}},"68":{"start":{"line":73,"column":0},"end":{"line":73,"column":35}},"69":{"start":{"line":74,"column":0},"end":{"line":74,"column":35}},"70":{"start":{"line":75,"column":0},"end":{"line":75,"column":36}},"71":{"start":{"line":76,"column":0},"end":{"line":76,"column":38}},"72":{"start":{"line":77,"column":0},"end":{"line":77,"column":38}},"73":{"start":{"line":78,"column":0},"end":{"line":78,"column":39}},"74":{"start":{"line":79,"column":0},"end":{"line":79,"column":31}},"75":{"start":{"line":80,"column":0},"end":{"line":80,"column":38}},"76":{"start":{"line":81,"column":0},"end":{"line":81,"column":50}},"77":{"start":{"line":82,"column":0},"end":{"line":82,"column":50}},"78":{"start":{"line":83,"column":0},"end":{"line":83,"column":47}},"79":{"start":{"line":84,"column":0},"end":{"line":84,"column":30}},"80":{"start":{"line":85,"column":0},"end":{"line":85,"column":32}},"81":{"start":{"line":86,"column":0},"end":{"line":86,"column":33}},"82":{"start":{"line":87,"column":0},"end":{"line":87,"column":37}},"83":{"start":{"line":88,"column":0},"end":{"line":88,"column":40}},"84":{"start":{"line":89,"column":0},"end":{"line":89,"column":41}},"85":{"start":{"line":90,"column":0},"end":{"line":90,"column":39}},"86":{"start":{"line":91,"column":0},"end":{"line":91,"column":40}},"87":{"start":{"line":92,"column":0},"end":{"line":92,"column":44}},"88":{"start":{"line":93,"column":0},"end":{"line":93,"column":37}},"89":{"start":{"line":94,"column":0},"end":{"line":94,"column":38}},"90":{"start":{"line":95,"column":0},"end":{"line":95,"column":27}},"91":{"start":{"line":96,"column":0},"end":{"line":96,"column":26}},"92":{"start":{"line":97,"column":0},"end":{"line":97,"column":37}},"93":{"start":{"line":98,"column":0},"end":{"line":98,"column":38}},"94":{"start":{"line":99,"column":0},"end":{"line":99,"column":39}},"95":{"start":{"line":100,"column":0},"end":{"line":100,"column":33}}},"fnMap":{},"branchMap":{},"s":{"0":23,"1":23,"2":23,"3":23,"4":23,"5":23,"6":23,"7":23,"8":23,"9":23,"10":23,"11":23,"12":23,"13":23,"14":23,"15":23,"16":23,"17":23,"18":23,"19":23,"20":23,"21":23,"22":23,"23":23,"24":23,"25":23,"26":23,"27":23,"28":23,"29":23,"30":23,"31":23,"32":23,"33":23,"34":23,"35":23,"36":23,"37":23,"38":23,"39":23,"40":23,"41":23,"42":23,"43":23,"44":23,"45":23,"46":23,"47":23,"48":23,"49":23,"50":23,"51":23,"52":23,"53":23,"54":23,"55":23,"56":23,"57":23,"58":23,"59":23,"60":23,"61":23,"62":23,"63":23,"64":23,"65":23,"66":23,"67":23,"68":23,"69":23,"70":23,"71":23,"72":23,"73":23,"74":23,"75":23,"76":23,"77":23,"78":23,"79":23,"80":23,"81":23,"82":23,"83":23,"84":23,"85":23,"86":23,"87":23,"88":23,"89":23,"90":23,"91":23,"92":23,"93":23,"94":23,"95":23},"f":{},"b":{}},"/home/flakie/package/packages/client-search/src/types/ApiKeyType.ts":{"path":"/home/flakie/package/packages/client-search/src/types/ApiKeyType.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":16,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":23},"f":{},"b":{}},"/home/flakie/package/packages/client-search/src/types/BatchActionType.ts":{"path":"/home/flakie/package/packages/client-search/src/types/BatchActionType.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":9,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":23},"f":{},"b":{}},"/home/flakie/package/packages/client-search/src/types/CopyIndexOptions.ts":{"path":"/home/flakie/package/packages/client-search/src/types/CopyIndexOptions.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":5,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":23},"f":{},"b":{}},"/home/flakie/package/packages/client-search/src/types/MultipleQueriesOptions.ts":{"path":"/home/flakie/package/packages/client-search/src/types/MultipleQueriesOptions.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":4,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":23},"f":{},"b":{}},"/home/flakie/package/packages/client-search/src/types/Synonym.ts":{"path":"/home/flakie/package/packages/client-search/src/types/Synonym.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":7,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":23},"f":{},"b":{}},"/home/flakie/package/packages/logger-common/src/index.ts":{"path":"/home/flakie/package/packages/logger-common/src/index.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}}},"fnMap":{},"branchMap":{},"s":{"0":27,"1":27},"f":{},"b":{}},"/home/flakie/package/packages/logger-common/src/createNullLogger.ts":{"path":"/home/flakie/package/packages/logger-common/src/createNullLogger.ts","statementMap":{"0":{"start":{"line":4,"column":2},"end":{"line":14,"column":4}},"1":{"start":{"line":6,"column":6},"end":{"line":6,"column":31}},"2":{"start":{"line":9,"column":6},"end":{"line":9,"column":31}},"3":{"start":{"line":12,"column":6},"end":{"line":12,"column":31}},"4":{"start":{"line":3,"column":0},"end":{"line":3,"column":16}}},"fnMap":{"0":{"name":"createNullLogger","decl":{"start":{"line":3,"column":16},"end":{"line":3,"column":32}},"loc":{"start":{"line":3,"column":32},"end":{"line":15,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":9}},"loc":{"start":{"line":5,"column":39},"end":{"line":7,"column":5}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":8}},"loc":{"start":{"line":8,"column":38},"end":{"line":10,"column":5}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":9}},"loc":{"start":{"line":11,"column":39},"end":{"line":13,"column":5}}}},"branchMap":{},"s":{"0":4,"1":2,"2":6,"3":2,"4":27},"f":{"0":4,"1":2,"2":6,"3":2},"b":{}},"/home/flakie/package/packages/logger-common/src/types/index.ts":{"path":"/home/flakie/package/packages/logger-common/src/types/index.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":31}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}}},"fnMap":{},"branchMap":{},"s":{"0":27,"1":27},"f":{},"b":{}},"/home/flakie/package/packages/logger-common/src/types/LogLevelType.ts":{"path":"/home/flakie/package/packages/logger-common/src/types/LogLevelType.ts","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":5,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":27},"f":{},"b":{}},"/home/flakie/package/packages/logger-console/src/index.ts":{"path":"/home/flakie/package/packages/logger-console/src/index.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":38}}},"fnMap":{},"branchMap":{},"s":{"0":23},"f":{},"b":{}},"/home/flakie/package/packages/logger-console/src/createConsoleLogger.ts":{"path":"/home/flakie/package/packages/logger-console/src/createConsoleLogger.ts","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":3,"column":76}},"1":{"start":{"line":6,"column":2},"end":{"line":28,"column":4}},"2":{"start":{"line":8,"column":6},"end":{"line":10,"column":null}},"3":{"start":{"line":9,"column":8},"end":{"line":9,"column":37}},"4":{"start":{"line":12,"column":6},"end":{"line":12,"column":31}},"5":{"start":{"line":16,"column":6},"end":{"line":18,"column":null}},"6":{"start":{"line":17,"column":8},"end":{"line":17,"column":36}},"7":{"start":{"line":20,"column":6},"end":{"line":20,"column":31}},"8":{"start":{"line":24,"column":6},"end":{"line":24,"column":35}},"9":{"start":{"line":26,"column":6},"end":{"line":26,"column":31}},"10":{"start":{"line":5,"column":0},"end":{"line":5,"column":16}}},"fnMap":{"0":{"name":"createConsoleLogger","decl":{"start":{"line":5,"column":16},"end":{"line":5,"column":35}},"loc":{"start":{"line":5,"column":58},"end":{"line":29,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":9}},"loc":{"start":{"line":7,"column":37},"end":{"line":13,"column":5}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":8}},"loc":{"start":{"line":15,"column":36},"end":{"line":21,"column":5}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":9}},"loc":{"start":{"line":23,"column":37},"end":{"line":27,"column":5}}}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":6},"end":{"line":10,"column":null}},"type":"if","locations":[{"start":{"line":8,"column":6},"end":{"line":10,"column":null}}]},"1":{"loc":{"start":{"line":16,"column":6},"end":{"line":18,"column":null}},"type":"if","locations":[{"start":{"line":16,"column":6},"end":{"line":18,"column":null}}]}},"s":{"0":25,"1":116,"2":6,"3":2,"4":6,"5":66,"6":4,"7":66,"8":6,"9":6,"10":25},"f":{"0":116,"1":6,"2":66,"3":6},"b":{"0":[2],"1":[4]}},"/home/flakie/package/packages/requester-browser-xhr/src/index.ts":{"path":"/home/flakie/package/packages/requester-browser-xhr/src/index.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":44}}},"fnMap":{},"branchMap":{},"s":{"0":24},"f":{},"b":{}},"/home/flakie/package/packages/requester-browser-xhr/src/createBrowserXhrRequester.ts":{"path":"/home/flakie/package/packages/requester-browser-xhr/src/createBrowserXhrRequester.ts","statementMap":{"0":{"start":{"line":4,"column":2},"end":{"line":70,"column":4}},"1":{"start":{"line":6,"column":6},"end":{"line":68,"column":9}},"2":{"start":{"line":7,"column":30},"end":{"line":7,"column":50}},"3":{"start":{"line":8,"column":8},"end":{"line":8,"column":62}},"4":{"start":{"line":10,"column":8},"end":{"line":12,"column":10}},"5":{"start":{"line":11,"column":10},"end":{"line":11,"column":67}},"6":{"start":{"line":14,"column":30},"end":{"line":24,"column":9}},"7":{"start":{"line":15,"column":10},"end":{"line":23,"column":29}},"8":{"start":{"line":16,"column":12},"end":{"line":16,"column":34}},"9":{"start":{"line":18,"column":12},"end":{"line":22,"column":15}},"10":{"start":{"line":26,"column":31},"end":{"line":26,"column":90}},"11":{"start":{"line":32,"column":8},"end":{"line":38,"column":10}},"12":{"start":{"line":33,"column":10},"end":{"line":37,"column":null}},"13":{"start":{"line":34,"column":12},"end":{"line":34,"column":41}},"14":{"start":{"line":36,"column":12},"end":{"line":36,"column":87}},"15":{"start":{"line":41,"column":8},"end":{"line":53,"column":10}},"16":{"start":{"line":56,"column":8},"end":{"line":65,"column":10}},"17":{"start":{"line":57,"column":10},"end":{"line":57,"column":39}},"18":{"start":{"line":58,"column":10},"end":{"line":58,"column":58}},"19":{"start":{"line":60,"column":10},"end":{"line":64,"column":13}},"20":{"start":{"line":67,"column":8},"end":{"line":67,"column":41}},"21":{"start":{"line":3,"column":0},"end":{"line":3,"column":16}}},"fnMap":{"0":{"name":"createBrowserXhrRequester","decl":{"start":{"line":3,"column":16},"end":{"line":3,"column":41}},"loc":{"start":{"line":3,"column":41},"end":{"line":71,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":8}},"loc":{"start":{"line":5,"column":25},"end":{"line":69,"column":5}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":6,"column":25},"end":{"line":6,"column":26}},"loc":{"start":{"line":6,"column":43},"end":{"line":68,"column":7}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":10,"column":45},"end":{"line":10,"column":48}},"loc":{"start":{"line":11,"column":10},"end":{"line":11,"column":67}}},"4":{"name":"(anonymous_4)","decl":{"start":{"line":14,"column":30},"end":{"line":14,"column":31}},"loc":{"start":{"line":14,"column":83},"end":{"line":24,"column":9}}},"5":{"name":"(anonymous_5)","decl":{"start":{"line":15,"column":28},"end":{"line":15,"column":31}},"loc":{"start":{"line":15,"column":33},"end":{"line":23,"column":11}}},"6":{"name":"(anonymous_6)","decl":{"start":{"line":32,"column":43},"end":{"line":32,"column":46}},"loc":{"start":{"line":32,"column":48},"end":{"line":38,"column":9}}},"7":{"name":"(anonymous_7)","decl":{"start":{"line":41,"column":32},"end":{"line":41,"column":35}},"loc":{"start":{"line":41,"column":37},"end":{"line":53,"column":9}}},"8":{"name":"(anonymous_8)","decl":{"start":{"line":56,"column":31},"end":{"line":56,"column":34}},"loc":{"start":{"line":56,"column":36},"end":{"line":65,"column":9}}}},"branchMap":{"0":{"loc":{"start":{"line":33,"column":10},"end":{"line":37,"column":null}},"type":"if","locations":[{"start":{"line":33,"column":10},"end":{"line":37,"column":null}}]},"1":{"loc":{"start":{"line":33,"column":14},"end":{"line":33,"column":94}},"type":"binary-expr","locations":[{"start":{"line":33,"column":14},"end":{"line":33,"column":61}},{"start":{"line":33,"column":65},"end":{"line":33,"column":94}}]}},"s":{"0":111,"1":12,"2":12,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":24},"f":{"0":111,"1":12,"2":12,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"0":[0],"1":[0,0]}},"/home/flakie/package/packages/algoliasearch/src/types/index.ts":{"path":"/home/flakie/package/packages/algoliasearch/src/types/index.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":39}}},"fnMap":{},"branchMap":{},"s":{"0":23},"f":{},"b":{}},"/home/flakie/package/packages/requester-fetch/src/index.ts":{"path":"/home/flakie/package/packages/requester-fetch/src/index.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":39}}},"fnMap":{},"branchMap":{},"s":{"0":1},"f":{},"b":{}},"/home/flakie/package/packages/requester-fetch/src/createFetchRequester.ts":{"path":"/home/flakie/package/packages/requester-fetch/src/createFetchRequester.ts","statementMap":{"0":{"start":{"line":4,"column":2},"end":{"line":4,"column":63}},"1":{"start":{"line":8,"column":2},"end":{"line":12,"column":null}},"2":{"start":{"line":9,"column":4},"end":{"line":9,"column":24}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":77}},"4":{"start":{"line":22,"column":2},"end":{"line":80,"column":4}},"5":{"start":{"line":24,"column":30},"end":{"line":24,"column":51}},"6":{"start":{"line":25,"column":21},"end":{"line":25,"column":43}},"7":{"start":{"line":27,"column":28},"end":{"line":31,"column":7}},"8":{"start":{"line":28,"column":8},"end":{"line":30,"column":27}},"9":{"start":{"line":29,"column":10},"end":{"line":29,"column":34}},"10":{"start":{"line":33,"column":29},"end":{"line":33,"column":66}},"11":{"start":{"line":38,"column":6},"end":{"line":57,"column":null}},"12":{"start":{"line":39,"column":8},"end":{"line":50,"column":11}},"13":{"start":{"line":52,"column":8},"end":{"line":56,"column":10}},"14":{"start":{"line":59,"column":6},"end":{"line":59,"column":35}},"15":{"start":{"line":61,"column":6},"end":{"line":61,"column":45}},"16":{"start":{"line":64,"column":6},"end":{"line":78,"column":null}},"17":{"start":{"line":65,"column":24},"end":{"line":65,"column":45}},"18":{"start":{"line":67,"column":8},"end":{"line":71,"column":10}},"19":{"start":{"line":73,"column":8},"end":{"line":77,"column":10}},"20":{"start":{"line":19,"column":0},"end":{"line":19,"column":16}}},"fnMap":{"0":{"name":"isAbortError","decl":{"start":{"line":3,"column":9},"end":{"line":3,"column":21}},"loc":{"start":{"line":3,"column":36},"end":{"line":5,"column":1}}},"1":{"name":"getErrorMessage","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":24}},"loc":{"start":{"line":7,"column":61},"end":{"line":13,"column":1}}},"2":{"name":"createFetchRequester","decl":{"start":{"line":19,"column":16},"end":{"line":19,"column":36}},"loc":{"start":{"line":21,"column":29},"end":{"line":81,"column":1}}},"3":{"name":"(anonymous_3)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":9}},"loc":{"start":{"line":23,"column":31},"end":{"line":79,"column":5}}},"4":{"name":"(anonymous_4)","decl":{"start":{"line":27,"column":28},"end":{"line":27,"column":29}},"loc":{"start":{"line":27,"column":64},"end":{"line":31,"column":7}}},"5":{"name":"(anonymous_5)","decl":{"start":{"line":28,"column":26},"end":{"line":28,"column":29}},"loc":{"start":{"line":28,"column":31},"end":{"line":30,"column":9}}}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":9},"end":{"line":4,"column":62}},"type":"binary-expr","locations":[{"start":{"line":4,"column":9},"end":{"line":4,"column":31}},{"start":{"line":4,"column":35},"end":{"line":4,"column":62}}]},"1":{"loc":{"start":{"line":8,"column":2},"end":{"line":12,"column":null}},"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":12,"column":null}},{"start":{"line":10,"column":9},"end":{"line":12,"column":null}}]},"2":{"loc":{"start":{"line":11,"column":11},"end":{"line":11,"column":76}},"type":"cond-expr","locations":[{"start":{"line":11,"column":36},"end":{"line":11,"column":49}},{"start":{"line":11,"column":52},"end":{"line":11,"column":76}}]},"3":{"loc":{"start":{"line":19,"column":37},"end":{"line":21,"column":29}},"type":"default-arg","locations":[{"start":{"line":21,"column":27},"end":{"line":21,"column":29}}]},"4":{"loc":{"start":{"line":20,"column":2},"end":{"line":20,"column":23}},"type":"default-arg","locations":[{"start":{"line":20,"column":21},"end":{"line":20,"column":23}}]},"5":{"loc":{"start":{"line":43,"column":16},"end":{"line":43,"column":46}},"type":"binary-expr","locations":[{"start":{"line":43,"column":16},"end":{"line":43,"column":40}},{"start":{"line":43,"column":44},"end":{"line":43,"column":46}}]},"6":{"loc":{"start":{"line":46,"column":16},"end":{"line":46,"column":36}},"type":"binary-expr","locations":[{"start":{"line":46,"column":16},"end":{"line":46,"column":28}},{"start":{"line":46,"column":32},"end":{"line":46,"column":36}}]}},"s":{"0":0,"1":0,"2":0,"3":0,"4":2,"5":13,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1},"f":{"0":0,"1":0,"2":2,"3":13,"4":0,"5":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[1],"4":[1],"5":[0,0],"6":[0,0]}},"/home/flakie/package/packages/requester-node-http/src/index.ts":{"path":"/home/flakie/package/packages/requester-node-http/src/index.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":42}}},"fnMap":{},"branchMap":{},"s":{"0":1},"f":{},"b":{}},"/home/flakie/package/packages/requester-node-http/src/createNodeHttpRequester.ts":{"path":"/home/flakie/package/packages/requester-node-http/src/createNodeHttpRequester.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":29}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":27}},"3":{"start":{"line":16,"column":21},"end":{"line":16,"column":40}},"4":{"start":{"line":17,"column":25},"end":{"line":17,"column":53}},"5":{"start":{"line":18,"column":26},"end":{"line":18,"column":55}},"6":{"start":{"line":26,"column":20},"end":{"line":26,"column":72}},"7":{"start":{"line":27,"column":21},"end":{"line":27,"column":75}},"8":{"start":{"line":29,"column":2},"end":{"line":113,"column":4}},"9":{"start":{"line":31,"column":6},"end":{"line":104,"column":9}},"10":{"start":{"line":32,"column":20},"end":{"line":32,"column":42}},"11":{"start":{"line":34,"column":21},"end":{"line":34,"column":87}},"12":{"start":{"line":36,"column":46},"end":{"line":47,"column":10}},"13":{"start":{"line":49,"column":20},"end":{"line":69,"column":10}},"14":{"start":{"line":51,"column":41},"end":{"line":51,"column":43}},"15":{"start":{"line":53,"column":10},"end":{"line":55,"column":13}},"16":{"start":{"line":54,"column":12},"end":{"line":54,"column":58}},"17":{"start":{"line":57,"column":10},"end":{"line":68,"column":13}},"18":{"start":{"line":59,"column":12},"end":{"line":59,"column":41}},"19":{"start":{"line":61,"column":12},"end":{"line":61,"column":60}},"20":{"start":{"line":63,"column":12},"end":{"line":67,"column":15}},"21":{"start":{"line":71,"column":30},"end":{"line":81,"column":9}},"22":{"start":{"line":72,"column":10},"end":{"line":80,"column":29}},"23":{"start":{"line":73,"column":12},"end":{"line":73,"column":24}},"24":{"start":{"line":75,"column":12},"end":{"line":79,"column":15}},"25":{"start":{"line":83,"column":31},"end":{"line":83,"column":90}},"26":{"start":{"line":88,"column":8},"end":{"line":92,"column":11}},"27":{"start":{"line":89,"column":10},"end":{"line":89,"column":39}},"28":{"start":{"line":90,"column":10},"end":{"line":90,"column":58}},"29":{"start":{"line":91,"column":10},"end":{"line":91,"column":76}},"30":{"start":{"line":94,"column":8},"end":{"line":97,"column":11}},"31":{"start":{"line":95,"column":10},"end":{"line":95,"column":39}},"32":{"start":{"line":96,"column":10},"end":{"line":96,"column":85}},"33":{"start":{"line":99,"column":8},"end":{"line":101,"column":null}},"34":{"start":{"line":100,"column":10},"end":{"line":100,"column":34}},"35":{"start":{"line":103,"column":8},"end":{"line":103,"column":18}},"36":{"start":{"line":108,"column":6},"end":{"line":108,"column":26}},"37":{"start":{"line":109,"column":6},"end":{"line":109,"column":27}},"38":{"start":{"line":111,"column":6},"end":{"line":111,"column":31}},"39":{"start":{"line":20,"column":0},"end":{"line":20,"column":16}}},"fnMap":{"0":{"name":"createNodeHttpRequester","decl":{"start":{"line":20,"column":16},"end":{"line":20,"column":39}},"loc":{"start":{"line":25,"column":32},"end":{"line":114,"column":1}}},"1":{"name":"(anonymous_2)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":8}},"loc":{"start":{"line":30,"column":25},"end":{"line":105,"column":5}}},"2":{"name":"(anonymous_3)","decl":{"start":{"line":31,"column":25},"end":{"line":31,"column":32}},"loc":{"start":{"line":31,"column":35},"end":{"line":104,"column":7}}},"3":{"name":"(anonymous_4)","decl":{"start":{"line":49,"column":80},"end":{"line":49,"column":88}},"loc":{"start":{"line":49,"column":91},"end":{"line":69,"column":9}}},"4":{"name":"(anonymous_5)","decl":{"start":{"line":53,"column":30},"end":{"line":53,"column":35}},"loc":{"start":{"line":53,"column":38},"end":{"line":55,"column":11}}},"5":{"name":"(anonymous_6)","decl":{"start":{"line":57,"column":29},"end":{"line":57,"column":32}},"loc":{"start":{"line":57,"column":34},"end":{"line":68,"column":11}}},"6":{"name":"(anonymous_7)","decl":{"start":{"line":71,"column":30},"end":{"line":71,"column":31}},"loc":{"start":{"line":71,"column":83},"end":{"line":81,"column":9}}},"7":{"name":"(anonymous_8)","decl":{"start":{"line":72,"column":28},"end":{"line":72,"column":31}},"loc":{"start":{"line":72,"column":33},"end":{"line":80,"column":11}}},"8":{"name":"(anonymous_9)","decl":{"start":{"line":88,"column":24},"end":{"line":88,"column":29}},"loc":{"start":{"line":88,"column":32},"end":{"line":92,"column":9}}},"9":{"name":"(anonymous_10)","decl":{"start":{"line":94,"column":29},"end":{"line":94,"column":32}},"loc":{"start":{"line":94,"column":34},"end":{"line":97,"column":9}}},"10":{"name":"(anonymous_11)","decl":{"start":{"line":107,"column":4},"end":{"line":107,"column":11}},"loc":{"start":{"line":107,"column":11},"end":{"line":112,"column":5}}}},"branchMap":{"0":{"loc":{"start":{"line":20,"column":40},"end":{"line":25,"column":32}},"type":"default-arg","locations":[{"start":{"line":25,"column":30},"end":{"line":25,"column":32}}]},"1":{"loc":{"start":{"line":24,"column":2},"end":{"line":24,"column":23}},"type":"default-arg","locations":[{"start":{"line":24,"column":21},"end":{"line":24,"column":23}}]},"2":{"loc":{"start":{"line":26,"column":20},"end":{"line":26,"column":72}},"type":"binary-expr","locations":[{"start":{"line":26,"column":20},"end":{"line":26,"column":33}},{"start":{"line":26,"column":37},"end":{"line":26,"column":52}},{"start":{"line":26,"column":56},"end":{"line":26,"column":72}}]},"3":{"loc":{"start":{"line":27,"column":21},"end":{"line":27,"column":75}},"type":"binary-expr","locations":[{"start":{"line":27,"column":21},"end":{"line":27,"column":35}},{"start":{"line":27,"column":39},"end":{"line":27,"column":54}},{"start":{"line":27,"column":58},"end":{"line":27,"column":75}}]},"4":{"loc":{"start":{"line":34,"column":21},"end":{"line":34,"column":87}},"type":"cond-expr","locations":[{"start":{"line":34,"column":42},"end":{"line":34,"column":54}},{"start":{"line":34,"column":57},"end":{"line":34,"column":87}}]},"5":{"loc":{"start":{"line":38,"column":17},"end":{"line":38,"column":67}},"type":"cond-expr","locations":[{"start":{"line":38,"column":45},"end":{"line":38,"column":55}},{"start":{"line":38,"column":58},"end":{"line":38,"column":67}}]},"6":{"loc":{"start":{"line":43,"column":16},"end":{"line":43,"column":92}},"type":"cond-expr","locations":[{"start":{"line":43,"column":63},"end":{"line":43,"column":87}},{"start":{"line":43,"column":90},"end":{"line":43,"column":92}}]},"7":{"loc":{"start":{"line":43,"column":16},"end":{"line":43,"column":60}},"type":"binary-expr","locations":[{"start":{"line":43,"column":16},"end":{"line":43,"column":32}},{"start":{"line":43,"column":36},"end":{"line":43,"column":60}}]},"8":{"loc":{"start":{"line":46,"column":14},"end":{"line":46,"column":68}},"type":"cond-expr","locations":[{"start":{"line":46,"column":39},"end":{"line":46,"column":63}},{"start":{"line":46,"column":66},"end":{"line":46,"column":68}}]},"9":{"loc":{"start":{"line":46,"column":47},"end":{"line":46,"column":61}},"type":"binary-expr","locations":[{"start":{"line":46,"column":47},"end":{"line":46,"column":55}},{"start":{"line":46,"column":59},"end":{"line":46,"column":61}}]},"10":{"loc":{"start":{"line":49,"column":21},"end":{"line":49,"column":61}},"type":"cond-expr","locations":[{"start":{"line":49,"column":49},"end":{"line":49,"column":54}},{"start":{"line":49,"column":57},"end":{"line":49,"column":61}}]},"11":{"loc":{"start":{"line":64,"column":22},"end":{"line":64,"column":46}},"type":"binary-expr","locations":[{"start":{"line":64,"column":22},"end":{"line":64,"column":41}},{"start":{"line":64,"column":45},"end":{"line":64,"column":46}}]},"12":{"loc":{"start":{"line":99,"column":8},"end":{"line":101,"column":null}},"type":"if","locations":[{"start":{"line":99,"column":8},"end":{"line":101,"column":null}}]}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":2,"7":2,"8":2,"9":15,"10":15,"11":15,"12":15,"13":15,"14":6,"15":6,"16":7,"17":6,"18":6,"19":6,"20":6,"21":15,"22":21,"23":2,"24":2,"25":15,"26":15,"27":9,"28":9,"29":9,"30":15,"31":6,"32":6,"33":15,"34":15,"35":15,"36":3,"37":3,"38":3,"39":1},"f":{"0":2,"1":15,"2":15,"3":6,"4":7,"5":6,"6":21,"7":2,"8":9,"9":6,"10":3},"b":{"0":[1],"1":[1],"2":[2,2,2],"3":[2,2,2],"4":[8,7],"5":[8,7],"6":[1,14],"7":[15,15],"8":[15,0],"9":[15,8],"10":[8,7],"11":[6,0],"12":[15]}},"/home/flakie/package/packages/algoliasearch/src/builds/browserLite.ts":{"path":"/home/flakie/package/packages/algoliasearch/src/builds/browserLite.ts","statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":86}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":64}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":63}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":59}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":null}},"5":{"start":{"line":26,"column":0},"end":{"line":26,"column":54}},"6":{"start":{"line":27,"column":0},"end":{"line":27,"column":62}},"7":{"start":{"line":28,"column":0},"end":{"line":28,"column":75}},"8":{"start":{"line":29,"column":0},"end":{"line":29,"column":80}},"9":{"start":{"line":38,"column":24},"end":{"line":61,"column":4}},"10":{"start":{"line":63,"column":2},"end":{"line":78,"column":5}},"11":{"start":{"line":72,"column":25},"end":{"line":76,"column":7}},"12":{"start":{"line":73,"column":8},"end":{"line":75,"column":11}},"13":{"start":{"line":33,"column":0},"end":{"line":33,"column":24}},"14":{"start":{"line":82,"column":0},"end":{"line":82,"column":32}},"15":{"start":{"line":120,"column":0},"end":{"line":120,"column":9}},"16":{"start":{"line":120,"column":9},"end":{"line":120,"column":29}},"17":{"start":{"line":120,"column":29},"end":{"line":120,"column":68}}},"fnMap":{"0":{"name":"algoliasearch","decl":{"start":{"line":33,"column":24},"end":{"line":33,"column":37}},"loc":{"start":{"line":36,"column":32},"end":{"line":79,"column":1}}},"1":{"name":"(anonymous_1)","decl":{"start":{"line":72,"column":17},"end":{"line":72,"column":21}},"loc":{"start":{"line":72,"column":25},"end":{"line":76,"column":7}}},"2":{"name":"(anonymous_2)","decl":{"start":{"line":72,"column":25},"end":{"line":72,"column":26}},"loc":{"start":{"line":72,"column":60},"end":{"line":76,"column":7}}}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":0,"13":1,"14":1,"15":1,"16":1,"17":1},"f":{"0":2,"1":2,"2":0},"b":{}}}}