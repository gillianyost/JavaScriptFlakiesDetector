{"numFailedTestSuites":82,"numFailedTests":0,"numPassedTestSuites":3,"numPassedTests":27,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":82,"numTodoTests":0,"numTotalTestSuites":85,"numTotalTests":27,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1665733239870,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":[],"duration":9,"failureMessages":[],"fullName":"Dependencies in composer.json (.extra.dependencies.build) match paths in storybook/projects.js","location":null,"status":"passed","title":"Dependencies in composer.json (.extra.dependencies.build) match paths in storybook/projects.js"}],"endTime":1665733240912,"message":"","name":"/home/flakie/package/projects/js-packages/storybook/tests/deps.test.js","startTime":1665733240090,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":[],"duration":4,"failureMessages":[],"fullName":"Basics","location":null,"status":"passed","title":"Basics"},{"ancestorTitles":[],"duration":9,"failureMessages":[],"fullName":"Operation","location":null,"status":"passed","title":"Operation"},{"ancestorTitles":[],"duration":3,"failureMessages":[],"fullName":"get","location":null,"status":"passed","title":"get"},{"ancestorTitles":[],"duration":5,"failureMessages":[],"fullName":"forEach","location":null,"status":"passed","title":"forEach"},{"ancestorTitles":[],"duration":8,"failureMessages":[],"fullName":"Error handling","location":null,"status":"passed","title":"Error handling"},{"ancestorTitles":[],"duration":1,"failureMessages":[],"fullName":"toString","location":null,"status":"passed","title":"toString"},{"ancestorTitles":[],"duration":0,"failureMessages":[],"fullName":"toJSON","location":null,"status":"passed","title":"toJSON"}],"endTime":1665733240957,"message":"","name":"/home/flakie/package/projects/js-packages/i18n-check-webpack-plugin/tests/GettextEntries.test.js","startTime":1665733240088,"status":"passed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    ● Validation Error:\n\n      Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n\n      Configuration Documentation:\n      https://jestjs.io/docs/configuration\n\n\n    As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n\n        Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n        Configuration Documentation:\n        https://jestjs.io/docs/configuration\n      As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n","name":"/home/flakie/package/projects/packages/wordads/src/dashboard/store/reducer/test/jetpack-settings.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    ● Validation Error:\n\n      Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n\n      Configuration Documentation:\n      https://jestjs.io/docs/configuration\n\n\n    As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n\n        Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n        Configuration Documentation:\n        https://jestjs.io/docs/configuration\n      As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n","name":"/home/flakie/package/projects/packages/wordads/src/dashboard/store/actions/test/jetpack-settings.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    ● Validation Error:\n\n      Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n\n      Configuration Documentation:\n      https://jestjs.io/docs/configuration\n\n\n    As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n\n        Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n        Configuration Documentation:\n        https://jestjs.io/docs/configuration\n      As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n","name":"/home/flakie/package/projects/packages/wordads/src/dashboard/components/notice/test/index.test.jsx","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    ● Validation Error:\n\n      Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n\n      Configuration Documentation:\n      https://jestjs.io/docs/configuration\n\n\n    As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n\n        Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n        Configuration Documentation:\n        https://jestjs.io/docs/configuration\n      As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n","name":"/home/flakie/package/projects/packages/wordads/src/dashboard/components/global-notices/test/index.test.jsx","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    ● Validation Error:\n\n      Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n\n      Configuration Documentation:\n      https://jestjs.io/docs/configuration\n\n\n    As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n\n        Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n        Configuration Documentation:\n        https://jestjs.io/docs/configuration\n      As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n","name":"/home/flakie/package/projects/packages/wordads/src/dashboard/components/form-toggle/test/index.test.jsx","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    ● Validation Error:\n\n      Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n\n      Configuration Documentation:\n      https://jestjs.io/docs/configuration\n\n\n    As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n\n        Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n        Configuration Documentation:\n        https://jestjs.io/docs/configuration\n      As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n","name":"/home/flakie/package/projects/packages/wordads/src/dashboard/components/card/test/index.test.jsx","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    ● Validation Error:\n\n      Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n\n      Configuration Documentation:\n      https://jestjs.io/docs/configuration\n\n\n    As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n\n        Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n        Configuration Documentation:\n        https://jestjs.io/docs/configuration\n      As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n","name":"/home/flakie/package/projects/packages/wordads/src/dashboard/components/button/test/index.test.jsx","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/projects/packages/search/src/dashboard/components/record-meter/lib/test/record-info.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import getRecordInfo from '../record-info';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/projects/packages/search/src/dashboard/components/record-meter/lib/test/record-info.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":[],"duration":5,"failureMessages":[],"fullName":"Minimal constructor","location":null,"status":"passed","title":"Minimal constructor"},{"ancestorTitles":[],"duration":3,"failureMessages":[],"fullName":"Complete constructor","location":null,"status":"passed","title":"Complete constructor"},{"ancestorTitles":[],"duration":6,"failureMessages":[],"fullName":"Error handling: No msgid","location":null,"status":"passed","title":"Error handling: No msgid"},{"ancestorTitles":[],"duration":1,"failureMessages":[],"fullName":"Error handling: Bad msgid","location":null,"status":"passed","title":"Error handling: Bad msgid"},{"ancestorTitles":[],"duration":2,"failureMessages":[],"fullName":"Error handling: Bad plural","location":null,"status":"passed","title":"Error handling: Bad plural"},{"ancestorTitles":[],"duration":1,"failureMessages":[],"fullName":"Error handling: Bad context","location":null,"status":"passed","title":"Error handling: Bad context"},{"ancestorTitles":[],"duration":2,"failureMessages":[],"fullName":"Error handling: Bad domain","location":null,"status":"passed","title":"Error handling: Bad domain"},{"ancestorTitles":[],"duration":1,"failureMessages":[],"fullName":"Error handling: Bad comments","location":null,"status":"passed","title":"Error handling: Bad comments"},{"ancestorTitles":[],"duration":2,"failureMessages":[],"fullName":"Error handling: Bad comments value","location":null,"status":"passed","title":"Error handling: Bad comments value"},{"ancestorTitles":[],"duration":2,"failureMessages":[],"fullName":"Error handling: Bad comments value: multi-line string","location":null,"status":"passed","title":"Error handling: Bad comments value: multi-line string"},{"ancestorTitles":[],"duration":1,"failureMessages":[],"fullName":"Error handling: Bad locations","location":null,"status":"passed","title":"Error handling: Bad locations"},{"ancestorTitles":[],"duration":1,"failureMessages":[],"fullName":"Error handling: Bad locations value","location":null,"status":"passed","title":"Error handling: Bad locations value"},{"ancestorTitles":[],"duration":3,"failureMessages":[],"fullName":"Error handling: Bad locations value: multi-line string","location":null,"status":"passed","title":"Error handling: Bad locations value: multi-line string"},{"ancestorTitles":[],"duration":6,"failureMessages":[],"fullName":"Error handling: Add a bad value to StringSet","location":null,"status":"passed","title":"Error handling: Add a bad value to StringSet"},{"ancestorTitles":[],"duration":1,"failureMessages":[],"fullName":"toString: Basic","location":null,"status":"passed","title":"toString: Basic"},{"ancestorTitles":[],"duration":0,"failureMessages":[],"fullName":"toString: Everything","location":null,"status":"passed","title":"toString: Everything"},{"ancestorTitles":[],"duration":1,"failureMessages":[],"fullName":"toString: Newlines","location":null,"status":"passed","title":"toString: Newlines"},{"ancestorTitles":[],"duration":1,"failureMessages":[],"fullName":"toJSON: Basic","location":null,"status":"passed","title":"toJSON: Basic"},{"ancestorTitles":[],"duration":0,"failureMessages":[],"fullName":"toJSON: Everything","location":null,"status":"passed","title":"toJSON: Everything"}],"endTime":1665733241031,"message":"","name":"/home/flakie/package/projects/js-packages/i18n-check-webpack-plugin/tests/GettextEntry.test.js","startTime":1665733240079,"status":"passed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    ● Validation Error:\n\n      Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n\n      Configuration Documentation:\n      https://jestjs.io/docs/configuration\n\n\n    As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n\n        Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n        Configuration Documentation:\n        https://jestjs.io/docs/configuration\n      As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n","name":"/home/flakie/package/projects/packages/search/src/dashboard/store/reducer/test/jetpack-settings.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    ● Validation Error:\n\n      Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n\n      Configuration Documentation:\n      https://jestjs.io/docs/configuration\n\n\n    As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n\n        Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n        Configuration Documentation:\n        https://jestjs.io/docs/configuration\n      As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n","name":"/home/flakie/package/projects/packages/search/src/dashboard/store/actions/test/jetpack-settings.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    ● Validation Error:\n\n      Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n\n      Configuration Documentation:\n      https://jestjs.io/docs/configuration\n\n\n    As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n\n        Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n        Configuration Documentation:\n        https://jestjs.io/docs/configuration\n      As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n","name":"/home/flakie/package/projects/packages/search/src/dashboard/components/record-meter/test/record-info.test.jsx","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    ● Validation Error:\n\n      Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n\n      Configuration Documentation:\n      https://jestjs.io/docs/configuration\n\n\n    As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n\n        Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n        Configuration Documentation:\n        https://jestjs.io/docs/configuration\n      As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n","name":"/home/flakie/package/projects/packages/search/src/dashboard/components/record-meter/test/record-count.test.jsx","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    ● Validation Error:\n\n      Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n\n      Configuration Documentation:\n      https://jestjs.io/docs/configuration\n\n\n    As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n\n        Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n        Configuration Documentation:\n        https://jestjs.io/docs/configuration\n      As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n","name":"/home/flakie/package/projects/packages/search/src/dashboard/components/record-meter/test/notice-box.test.jsx","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    ● Validation Error:\n\n      Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n\n      Configuration Documentation:\n      https://jestjs.io/docs/configuration\n\n\n    As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n\n        Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n        Configuration Documentation:\n        https://jestjs.io/docs/configuration\n      As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n","name":"/home/flakie/package/projects/packages/search/src/dashboard/components/record-meter/test/index.test.jsx","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    ● Validation Error:\n\n      Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n\n      Configuration Documentation:\n      https://jestjs.io/docs/configuration\n\n\n    As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n\n        Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n        Configuration Documentation:\n        https://jestjs.io/docs/configuration\n      As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n","name":"/home/flakie/package/projects/packages/search/src/dashboard/components/notice/test/index.test.jsx","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    ● Validation Error:\n\n      Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n\n      Configuration Documentation:\n      https://jestjs.io/docs/configuration\n\n\n    As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n\n        Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n        Configuration Documentation:\n        https://jestjs.io/docs/configuration\n      As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n","name":"/home/flakie/package/projects/packages/search/src/dashboard/components/global-notices/test/index.test.jsx","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    ● Validation Error:\n\n      Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n\n      Configuration Documentation:\n      https://jestjs.io/docs/configuration\n\n\n    As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n\n        Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n        Configuration Documentation:\n        https://jestjs.io/docs/configuration\n      As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n","name":"/home/flakie/package/projects/packages/search/src/dashboard/components/form-toggle/test/index.test.jsx","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    ● Validation Error:\n\n      Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n\n      Configuration Documentation:\n      https://jestjs.io/docs/configuration\n\n\n    As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n\n        Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n        Configuration Documentation:\n        https://jestjs.io/docs/configuration\n      As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n","name":"/home/flakie/package/projects/packages/search/src/dashboard/components/card/test/index.test.jsx","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    ● Validation Error:\n\n      Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n\n      Configuration Documentation:\n      https://jestjs.io/docs/configuration\n\n\n    As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n\n        Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n        Configuration Documentation:\n        https://jestjs.io/docs/configuration\n      As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n","name":"/home/flakie/package/projects/packages/search/src/dashboard/components/button/test/index.test.jsx","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/projects/packages/search/src/dashboard/store/reducer/test/site-stats.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import { setSearchStats } from '../../actions/site-stats';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/projects/packages/search/src/dashboard/store/reducer/test/site-stats.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/projects/packages/search/src/dashboard/store/reducer/test/site-plan.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import { setSearchPlanInfo } from '../../actions/site-plan';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/projects/packages/search/src/dashboard/store/reducer/test/site-plan.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/projects/plugins/jetpack/tests/e2e/specs/update/plugin-update.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import { execShellCommand, resolveSiteUrl, execContainerShellCommand } from 'jetpack-e2e-commons/helpers/utils-helper.cjs';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/projects/plugins/jetpack/tests/e2e/specs/update/plugin-update.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/projects/plugins/jetpack/tests/e2e/specs/pre-connection/pre-connection.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import { Sidebar, PluginsPage, DashboardPage, JetpackPage } from 'jetpack-e2e-commons/pages/wp-admin/index.js';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/projects/plugins/jetpack/tests/e2e/specs/pre-connection/pre-connection.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/projects/plugins/jetpack/tests/e2e/specs/sync/sync.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import { test, expect } from 'jetpack-e2e-commons/fixtures/base-test.js';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/projects/plugins/jetpack/tests/e2e/specs/sync/sync.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/projects/plugins/jetpack/tests/e2e/specs/post-connection/waf-blocking.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import { test, expect } from 'jetpack-e2e-commons/fixtures/base-test.js';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/projects/plugins/jetpack/tests/e2e/specs/post-connection/waf-blocking.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/projects/plugins/jetpack/tests/e2e/specs/connection/connection.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import { test, expect } from 'jetpack-e2e-commons/fixtures/base-test.js';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/projects/plugins/jetpack/tests/e2e/specs/connection/connection.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/projects/plugins/jetpack/tests/e2e/specs/post-connection/recommendations.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import { test, expect } from 'jetpack-e2e-commons/fixtures/base-test.js';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/projects/plugins/jetpack/tests/e2e/specs/post-connection/recommendations.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    ● Validation Error:\n\n      Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n\n      Configuration Documentation:\n      https://jestjs.io/docs/configuration\n\n\n    As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n\n        Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n        Configuration Documentation:\n        https://jestjs.io/docs/configuration\n      As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n","name":"/home/flakie/package/projects/packages/search/src/instant-search/store/test/selectors.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    ● Validation Error:\n\n      Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n\n      Configuration Documentation:\n      https://jestjs.io/docs/configuration\n\n\n    As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n\n        Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n        Configuration Documentation:\n        https://jestjs.io/docs/configuration\n      As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n","name":"/home/flakie/package/projects/packages/search/src/instant-search/store/test/reducer.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    ● Validation Error:\n\n      Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n\n      Configuration Documentation:\n      https://jestjs.io/docs/configuration\n\n\n    As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n\n        Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n        Configuration Documentation:\n        https://jestjs.io/docs/configuration\n      As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n","name":"/home/flakie/package/projects/packages/search/src/instant-search/lib/test/filters.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    ● Validation Error:\n\n      Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n\n      Configuration Documentation:\n      https://jestjs.io/docs/configuration\n\n\n    As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n\n        Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n        Configuration Documentation:\n        https://jestjs.io/docs/configuration\n      As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n","name":"/home/flakie/package/projects/packages/search/src/instant-search/lib/test/api.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    ● Validation Error:\n\n      Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n\n      Configuration Documentation:\n      https://jestjs.io/docs/configuration\n\n\n    As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n\n        Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n        Configuration Documentation:\n        https://jestjs.io/docs/configuration\n      As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n","name":"/home/flakie/package/projects/packages/search/src/instant-search/components/test/photon-image.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    ● Validation Error:\n\n      Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n\n      Configuration Documentation:\n      https://jestjs.io/docs/configuration\n\n\n    As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n\n        Test environment jest-environment-jsdom cannot be found. Make sure the testEnvironment configuration option points to an existing node module.\n        Configuration Documentation:\n        https://jestjs.io/docs/configuration\n      As of Jest 28 \"jest-environment-jsdom\" is no longer shipped by default, make sure to install it separately.\n","name":"/home/flakie/package/projects/packages/search/src/instant-search/components/test/notice.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/projects/plugins/jetpack/tests/e2e/specs/blocks/pro-blocks.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import { test, expect } from 'jetpack-e2e-commons/fixtures/base-test.js';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/projects/plugins/jetpack/tests/e2e/specs/blocks/pro-blocks.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/projects/plugins/jetpack/tests/e2e/specs/blocks/free-blocks.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import { test, expect } from 'jetpack-e2e-commons/fixtures/base-test.js';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/projects/plugins/jetpack/tests/e2e/specs/blocks/free-blocks.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/projects/plugins/videopress/tests/e2e/specs/start.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import { test } from '@playwright/test';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/projects/plugins/videopress/tests/e2e/specs/start.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/projects/plugins/starter-plugin/tests/e2e/specs/start.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import { test } from '@playwright/test';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/projects/plugins/starter-plugin/tests/e2e/specs/start.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/projects/plugins/search/tests/e2e/specs/search.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import { test, expect } from 'jetpack-e2e-commons/fixtures/base-test.js';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/projects/plugins/search/tests/e2e/specs/search.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/projects/plugins/search/tests/e2e/specs/search-dashboard.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import { test, expect } from 'jetpack-e2e-commons/fixtures/base-test.js';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/projects/plugins/search/tests/e2e/specs/search-dashboard.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/projects/plugins/search/tests/e2e/specs/search-configure.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import { test, expect } from 'jetpack-e2e-commons/fixtures/base-test.js';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/projects/plugins/search/tests/e2e/specs/search-configure.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/projects/plugins/boost/tests/e2e/specs/speed-score.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import { test, expect } from 'jetpack-e2e-commons/fixtures/base-test.js';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/projects/plugins/boost/tests/e2e/specs/speed-score.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/projects/plugins/boost/tests/e2e/specs/score-auto-refresh.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import { test, expect } from 'jetpack-e2e-commons/fixtures/base-test.js';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/projects/plugins/boost/tests/e2e/specs/score-auto-refresh.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/projects/plugins/boost/tests/e2e/specs/render-blocking-js.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import { test, expect } from 'jetpack-e2e-commons/fixtures/base-test.js';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/projects/plugins/boost/tests/e2e/specs/render-blocking-js.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/projects/plugins/boost/tests/e2e/specs/modules-common.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import { boostPrerequisitesBuilder } from '../lib/env/prerequisites.js';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/projects/plugins/boost/tests/e2e/specs/modules-common.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    SyntaxError: /home/flakie/package/projects/packages/connection-ui/_inc/components/header/test/header.test.jsx: Support for the experimental syntax 'jsx' isn't currently enabled (6:32):\n\n      4 |\n      5 | test( 'Displays the header', () => {\n    > 6 | \tconst tree = renderer.create( <Header /> ).toJSON();\n        | \t                              ^\n      7 | \texpect( tree ).toMatchSnapshot( 'header' );\n      8 | } );\n      9 |\n\n    Add @babel/preset-react (https://github.com/babel/babel/tree/main/packages/babel-preset-react) to the 'presets' section of your Babel config to enable transformation.\n    If you want to leave it as-is, add @babel/plugin-syntax-jsx (https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-jsx) to the 'plugins' section to enable parsing.\n\n      at instantiate (../../../usr/local/lib/node_modules/jest/node_modules/@babel/parser/src/parse-error/credentials.ts:62:21)\n          at parser.next (<anonymous>)\n          at normalizeFile.next (<anonymous>)\n          at run.next (<anonymous>)\n          at transform.next (<anonymous>)\n","name":"/home/flakie/package/projects/packages/connection-ui/_inc/components/header/test/header.test.jsx","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/projects/plugins/boost/tests/e2e/specs/jetpack-compatibility.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import { test, expect } from 'jetpack-e2e-commons/fixtures/base-test.js';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/projects/plugins/boost/tests/e2e/specs/jetpack-compatibility.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/projects/plugins/boost/tests/e2e/specs/lazy-images.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import { test, expect } from 'jetpack-e2e-commons/fixtures/base-test.js';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/projects/plugins/boost/tests/e2e/specs/lazy-images.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/projects/plugins/boost/tests/e2e/specs/connection.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import { prerequisitesBuilder } from 'jetpack-e2e-commons/env/prerequisites.js';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/projects/plugins/boost/tests/e2e/specs/connection.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/projects/plugins/boost/tests/e2e/specs/critical-css.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import { test, expect } from 'jetpack-e2e-commons/fixtures/base-test.js';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/projects/plugins/boost/tests/e2e/specs/critical-css.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/projects/plugins/boost/tests/e2e/specs/common.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import { test, expect } from 'jetpack-e2e-commons/fixtures/base-test.js';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/projects/plugins/boost/tests/e2e/specs/common.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/tools/cli/tests/unit/helpers/styling.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import { chalkJetpackGreen } from '../../../helpers/styling.js';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/tools/cli/tests/unit/helpers/styling.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/tools/cli/tests/unit/helpers/promptForProjects.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import { fileURLToPath } from 'url';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/tools/cli/tests/unit/helpers/promptForProjects.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/tools/cli/tests/unit/helpers/projectHelpers.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import { fileURLToPath } from 'url';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/tools/cli/tests/unit/helpers/projectHelpers.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/tools/cli/tests/unit/helpers/prefix-stream.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import { jest } from '@jest/globals';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/tools/cli/tests/unit/helpers/prefix-stream.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/tools/cli/tests/unit/helpers/mergeDirs.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import fs from 'fs';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/tools/cli/tests/unit/helpers/mergeDirs.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/tools/cli/tests/unit/helpers/json.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import { fileURLToPath } from 'url';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/tools/cli/tests/unit/helpers/json.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/tools/cli/tests/unit/helpers/github.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import { doesRepoExist } from '../../../helpers/github.js';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/tools/cli/tests/unit/helpers/github.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/tools/cli/tests/unit/helpers/format-duration.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import formatDuration from '../../../helpers/format-duration.js';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/tools/cli/tests/unit/helpers/format-duration.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/tools/cli/tests/unit/helpers/filter-stream.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import { once } from 'events';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/tools/cli/tests/unit/helpers/filter-stream.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/tools/cli/tests/unit/helpers/dependencyAnalysis.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import { fileURLToPath } from 'url';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/tools/cli/tests/unit/helpers/dependencyAnalysis.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/tools/cli/tests/integration/helpers/github.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import { doesRepoExist } from '../../../helpers/github.js';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/tools/cli/tests/integration/helpers/github.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/tools/cli/tests/integration/commands/commands.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import { fileURLToPath } from 'url';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/tools/cli/tests/integration/commands/commands.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/tools/cli/tests/integration/commands/build.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import { fileURLToPath } from 'url';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/tools/cli/tests/integration/commands/build.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    SyntaxError: /home/flakie/package/projects/packages/my-jetpack/_inc/components/product-card/index.test.jsx: Support for the experimental syntax 'jsx' isn't currently enabled (14:12):\n\n      12 | \t\t\tconst user = userEvent.setup();\n      13 | \t\t\tconst onManage = jest.fn();\n    > 14 | \t\t\trender( <Default onManage={ onManage } /> );\n         | \t\t\t        ^\n      15 | \t\t\tconst actionButton = screen.getByRole( 'button', { name: 'Manage' } );\n      16 | \t\t\tawait user.click( actionButton );\n      17 | \t\t\texpect( onManage ).toHaveBeenCalled();\n\n    Add @babel/preset-react (https://github.com/babel/babel/tree/main/packages/babel-preset-react) to the 'presets' section of your Babel config to enable transformation.\n    If you want to leave it as-is, add @babel/plugin-syntax-jsx (https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-jsx) to the 'plugins' section to enable parsing.\n\n      at instantiate (../../../usr/local/lib/node_modules/jest/node_modules/@babel/parser/src/parse-error/credentials.ts:62:21)\n","name":"/home/flakie/package/projects/packages/my-jetpack/_inc/components/product-card/index.test.jsx","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Your test suite must contain at least one test.\n\n      at onResult (../../../usr/local/lib/node_modules/jest/node_modules/@jest/core/build/TestScheduler.js:172:18)\n          at Array.map (<anonymous>)\n","name":"/home/flakie/package/tools/cli/skeletons/js-packages/tests/index.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Cannot find module 'md5-es' from 'projects/packages/assets/src/js/i18n-loader.js'\n\n    Require stack:\n      projects/packages/assets/src/js/i18n-loader.js\n      projects/packages/assets/tests/js/i18n-loader.test.js\n\n      1 | const i18n = require( '@wordpress/i18n' );\n    > 2 | const { default: md5 } = require( 'md5-es' );\n        |                          ^\n      3 |\n      4 | const locationMap = {\n      5 | \tplugin: 'plugins/',\n\n      at Resolver._throwModNotFoundError (../../../usr/local/lib/node_modules/jest/node_modules/jest-resolve/build/resolver.js:487:11)\n      at Object.require (projects/packages/assets/src/js/i18n-loader.js:2:26)\n      at Object.require (projects/packages/assets/tests/js/i18n-loader.test.js:47:16)\n","name":"/home/flakie/package/projects/packages/assets/tests/js/i18n-loader.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Cannot find module 'webpack' from 'projects/js-packages/remove-asset-webpack-plugin/tests/build.test.js'\n\n      2 | const os = require( 'os' );\n      3 | const path = require( 'path' );\n    > 4 | const webpack = require( 'webpack' );\n        |                 ^\n      5 | const RemoveAssetWebpackPlugin = require( '../src/index.js' );\n      6 |\n      7 | let tmpdir = null;\n\n      at Resolver._throwModNotFoundError (../../../usr/local/lib/node_modules/jest/node_modules/jest-resolve/build/resolver.js:487:11)\n      at Object.require (projects/js-packages/remove-asset-webpack-plugin/tests/build.test.js:4:17)\n","name":"/home/flakie/package/projects/js-packages/remove-asset-webpack-plugin/tests/build.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Cannot find module 'webpack' from 'projects/js-packages/i18n-loader-webpack-plugin/tests/build.test.js'\n\n      1 | const fs = require( 'fs' );\n      2 | const path = require( 'path' );\n    > 3 | const webpack = require( 'webpack' );\n        |                 ^\n      4 |\n      5 | require( './globals' );\n      6 |\n\n      at Resolver._throwModNotFoundError (../../../usr/local/lib/node_modules/jest/node_modules/jest-resolve/build/resolver.js:487:11)\n      at Object.require (projects/js-packages/i18n-loader-webpack-plugin/tests/build.test.js:3:17)\n","name":"/home/flakie/package/projects/js-packages/i18n-loader-webpack-plugin/tests/build.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Cannot find module 'webpack' from 'projects/js-packages/i18n-check-webpack-plugin/tests/build.test.js'\n\n      1 | const fs = require( 'fs' );\n      2 | const path = require( 'path' );\n    > 3 | const webpack = require( 'webpack' );\n        |                 ^\n      4 |\n      5 | const fixturesPath = path.join( __dirname, 'fixtures' );\n      6 | const configFixtures = fs.readdirSync( fixturesPath ).sort();\n\n      at Resolver._throwModNotFoundError (../../../usr/local/lib/node_modules/jest/node_modules/jest-resolve/build/resolver.js:487:11)\n      at Object.require (projects/js-packages/i18n-check-webpack-plugin/tests/build.test.js:3:17)\n","name":"/home/flakie/package/projects/js-packages/i18n-check-webpack-plugin/tests/build.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Cannot find module '@mdn/browser-compat-data' from 'projects/js-packages/eslint-config-target-es/tests/rulesMap.test.js'\n\n    > 1 | const mdn = require( '@mdn/browser-compat-data' );\n        |                      ^\n      2 | const { rules: esRules } = require( 'eslint-plugin-es' );\n      3 | const rulesMap = require( '../src/rulesMap.js' );\n      4 |\n\n      at Resolver._throwModNotFoundError (../../../usr/local/lib/node_modules/jest/node_modules/jest-resolve/build/resolver.js:487:11)\n      at Object.<anonymous> (projects/js-packages/eslint-config-target-es/tests/rulesMap.test.js:1:22)\n","name":"/home/flakie/package/projects/js-packages/eslint-config-target-es/tests/rulesMap.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Cannot find module 'debug' from 'projects/js-packages/i18n-check-webpack-plugin/tests/GettextExtractor.test.js'\n\n      4 | const mockDebug = jest.fn();\n      5 | mockDebug.enabled = true;\n    > 6 | jest.mock( 'debug', () => name => ( name.startsWith( mock_PLUGIN_NAME ) ? mockDebug : () => {} ) );\n        |                           ^\n      7 |\n      8 | const GettextEntries = require( '../src/GettextEntries' );\n      9 | const GettextEntry = require( '../src/GettextEntry' );\n\n      at Resolver._throwModNotFoundError (../../../usr/local/lib/node_modules/jest/node_modules/jest-resolve/build/resolver.js:487:11)\n      at Object.name (projects/js-packages/i18n-check-webpack-plugin/tests/GettextExtractor.test.js:6:27)\n","name":"/home/flakie/package/projects/js-packages/i18n-check-webpack-plugin/tests/GettextExtractor.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Cannot find module '@mdn/browser-compat-data' from 'projects/js-packages/eslint-config-target-es/src/funcs.js'\n\n    Require stack:\n      projects/js-packages/eslint-config-target-es/src/funcs.js\n      projects/js-packages/eslint-config-target-es/tests/funcs.test.js\n\n    > 1 | const mdn = require( '@mdn/browser-compat-data' );\n        |                      ^\n      2 | const browserslist = require( 'browserslist' );\n      3 | const debug = require( 'debug' );\n      4 | const { rules: esRules } = require( 'eslint-plugin-es' );\n\n      at Resolver._throwModNotFoundError (../../../usr/local/lib/node_modules/jest/node_modules/jest-resolve/build/resolver.js:487:11)\n      at Object.<anonymous> (projects/js-packages/eslint-config-target-es/src/funcs.js:1:22)\n      at Object.<anonymous> (projects/js-packages/eslint-config-target-es/tests/funcs.test.js:1:24)\n","name":"/home/flakie/package/projects/js-packages/eslint-config-target-es/tests/funcs.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Cannot find module '@mdn/browser-compat-data' from 'projects/js-packages/eslint-config-target-es/src/funcs.js'\n\n    Require stack:\n      projects/js-packages/eslint-config-target-es/src/funcs.js\n      projects/js-packages/eslint-config-target-es/tests/configs.test.js\n\n    > 1 | const mdn = require( '@mdn/browser-compat-data' );\n        |                      ^\n      2 | const browserslist = require( 'browserslist' );\n      3 | const debug = require( 'debug' );\n      4 | const { rules: esRules } = require( 'eslint-plugin-es' );\n\n      at Resolver._throwModNotFoundError (../../../usr/local/lib/node_modules/jest/node_modules/jest-resolve/build/resolver.js:487:11)\n      at Object.<anonymous> (projects/js-packages/eslint-config-target-es/src/funcs.js:1:22)\n      at Object.require (projects/js-packages/eslint-config-target-es/tests/configs.test.js:4:22)\n","name":"/home/flakie/package/projects/js-packages/eslint-config-target-es/tests/configs.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/projects/js-packages/eslint-changed/tests/cli.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import childProcess from 'child_process';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/projects/js-packages/eslint-changed/tests/cli.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Cannot find module 'debug' from 'projects/js-packages/babel-plugin-replace-textdomain/tests/plugin.test.js'\n\n      3 |\n      4 | const mockDebug = jest.fn();\n    > 5 | jest.mock( 'debug', () => {\n        |                           ^\n      6 | \treturn () => mockDebug;\n      7 | } );\n      8 | const setup = () => {\n\n      at Resolver._throwModNotFoundError (../../../usr/local/lib/node_modules/jest/node_modules/jest-resolve/build/resolver.js:487:11)\n      at Object.<anonymous> (projects/js-packages/babel-plugin-replace-textdomain/tests/plugin.test.js:5:27)\n","name":"/home/flakie/package/projects/js-packages/babel-plugin-replace-textdomain/tests/plugin.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Cannot find module '@slack/web-api' from 'projects/github-actions/test-results-to-slack/tests/slack.test.js'\n\n       5 | const slackUsername = 'Test Reporter';\n       6 |\n    >  7 | jest.mock( '@slack/web-api', () => {\n         |            ^\n       8 | \tconst slack = {\n       9 | \t\tchat: {\n      10 | \t\t\tpostMessage: jest.fn(),\n\n      at Resolver._throwModNotFoundError (../../../usr/local/lib/node_modules/jest/node_modules/jest-resolve/build/resolver.js:487:11)\n      at Object.<anonymous> (projects/github-actions/test-results-to-slack/tests/slack.test.js:7:12)\n","name":"/home/flakie/package/projects/github-actions/test-results-to-slack/tests/slack.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Cannot find module '@actions/github' from 'projects/github-actions/test-results-to-slack/tests/test-utils.js'\n\n    Require stack:\n      projects/github-actions/test-results-to-slack/tests/test-utils.js\n      projects/github-actions/test-results-to-slack/tests/rules.test.js\n\n    > 1 | const github = require( '@actions/github' );\n        |                         ^\n      2 |\n      3 | /**\n      4 |  * Mocks the GitHub context exposed by `@actions/github`\n\n      at Resolver._throwModNotFoundError (../../../usr/local/lib/node_modules/jest/node_modules/jest-resolve/build/resolver.js:487:11)\n      at Object.<anonymous> (projects/github-actions/test-results-to-slack/tests/test-utils.js:1:25)\n      at Object.require (projects/github-actions/test-results-to-slack/tests/rules.test.js:4:45)\n","name":"/home/flakie/package/projects/github-actions/test-results-to-slack/tests/rules.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Cannot find module '@slack/web-api' from 'projects/github-actions/test-results-to-slack/tests/get-message.test.js'\n\n    > 1 | const { WebClient } = require( '@slack/web-api' );\n        |                       ^\n      2 | const nock = require( 'nock' );\n      3 |\n      4 | const messageIdentifier = '123-abc';\n\n      at Resolver._throwModNotFoundError (../../../usr/local/lib/node_modules/jest/node_modules/jest-resolve/build/resolver.js:487:11)\n      at Object.require (projects/github-actions/test-results-to-slack/tests/get-message.test.js:1:23)\n","name":"/home/flakie/package/projects/github-actions/test-results-to-slack/tests/get-message.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Cannot find module '@actions/github' from 'projects/github-actions/test-results-to-slack/tests/test-utils.js'\n\n    Require stack:\n      projects/github-actions/test-results-to-slack/tests/test-utils.js\n      projects/github-actions/test-results-to-slack/tests/extra-context.test.js\n\n    > 1 | const github = require( '@actions/github' );\n        |                         ^\n      2 |\n      3 | /**\n      4 |  * Mocks the GitHub context exposed by `@actions/github`\n\n      at Resolver._throwModNotFoundError (../../../usr/local/lib/node_modules/jest/node_modules/jest-resolve/build/resolver.js:487:11)\n      at Object.<anonymous> (projects/github-actions/test-results-to-slack/tests/test-utils.js:1:25)\n      at Object.require (projects/github-actions/test-results-to-slack/tests/extra-context.test.js:1:31)\n","name":"/home/flakie/package/projects/github-actions/test-results-to-slack/tests/extra-context.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Cannot find module '@actions/github' from 'projects/github-actions/test-results-to-slack/tests/test-utils.js'\n\n    Require stack:\n      projects/github-actions/test-results-to-slack/tests/test-utils.js\n      projects/github-actions/test-results-to-slack/tests/content.test.js\n\n    > 1 | const github = require( '@actions/github' );\n        |                         ^\n      2 |\n      3 | /**\n      4 |  * Mocks the GitHub context exposed by `@actions/github`\n\n      at Resolver._throwModNotFoundError (../../../usr/local/lib/node_modules/jest/node_modules/jest-resolve/build/resolver.js:487:11)\n      at Object.<anonymous> (projects/github-actions/test-results-to-slack/tests/test-utils.js:1:25)\n      at Object.require (projects/github-actions/test-results-to-slack/tests/content.test.js:1:64)\n","name":"/home/flakie/package/projects/github-actions/test-results-to-slack/tests/content.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Cannot find module 'nock' from 'projects/github-actions/test-results-to-slack/tests/conclusion.test.js'\n\n    > 1 | const nock = require( 'nock' );\n        | ^\n      2 | const { mockGitHubContext, mockContextExtras } = require( './test-utils' );\n      3 |\n      4 | const runId = '12345';\n\n      at Resolver._throwModNotFoundError (../../../usr/local/lib/node_modules/jest/node_modules/jest-resolve/build/resolver.js:487:11)\n      at Object.<anonymous> (projects/github-actions/test-results-to-slack/tests/conclusion.test.js:1:1)\n","name":"/home/flakie/package/projects/github-actions/test-results-to-slack/tests/conclusion.test.js","startTime":1665733243706,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1665733243706,"message":"  ● Test suite failed to run\n\n    Jest encountered an unexpected token\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.\n     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \"transformIgnorePatterns\" in your config.\n     • If you need a custom transformation specify a \"transform\" option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \"moduleNameMapper\" config option.\n\n    You'll find more details and examples of these config options in the docs:\n    https://jestjs.io/docs/configuration\n    For information about custom transformations, see:\n    https://jestjs.io/docs/code-transformation\n\n    Details:\n\n    /home/flakie/package/tools/cli/commands/test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,jest){import child_process from 'child_process';\n                                                                                      ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      at Runtime.createScriptFromCode (../../../usr/local/lib/node_modules/jest/node_modules/jest-runtime/build/index.js:1678:14)\n","name":"/home/flakie/package/tools/cli/commands/test.js","startTime":1665733243706,"status":"failed","summary":""}],"wasInterrupted":false}